{"ast":null,"code":"'use strict';\n\nconst log = require('./log');\n\nconst {\n  profiler\n} = require('./profiling');\n\nmodule.exports = {\n  start: config => {\n    const {\n      service,\n      version,\n      env,\n      url,\n      hostname,\n      port,\n      tags\n    } = config;\n    const {\n      enabled,\n      sourceMap,\n      exporters\n    } = config.profiling;\n    const logger = {\n      debug: message => log.debug(message),\n      info: message => log.info(message),\n      warn: message => log.warn(message),\n      error: message => log.error(message)\n    };\n    profiler.start({\n      enabled,\n      service,\n      version,\n      env,\n      logger,\n      sourceMap,\n      exporters,\n      url,\n      hostname,\n      port,\n      tags\n    });\n  },\n  stop: () => {\n    profiler.stop();\n  }\n};","map":{"version":3,"sources":["/Users/danielcalderon/vinology/Vinology-client/node_modules/dd-trace/packages/dd-trace/src/profiler.js"],"names":["log","require","profiler","module","exports","start","config","service","version","env","url","hostname","port","tags","enabled","sourceMap","exporters","profiling","logger","debug","message","info","warn","error","stop"],"mappings":"AAAA;;AAEA,MAAMA,GAAG,GAAGC,OAAO,CAAC,OAAD,CAAnB;;AACA,MAAM;AAAEC,EAAAA;AAAF,IAAeD,OAAO,CAAC,aAAD,CAA5B;;AAEAE,MAAM,CAACC,OAAP,GAAiB;AACfC,EAAAA,KAAK,EAAEC,MAAM,IAAI;AACf,UAAM;AAAEC,MAAAA,OAAF;AAAWC,MAAAA,OAAX;AAAoBC,MAAAA,GAApB;AAAyBC,MAAAA,GAAzB;AAA8BC,MAAAA,QAA9B;AAAwCC,MAAAA,IAAxC;AAA8CC,MAAAA;AAA9C,QAAuDP,MAA7D;AACA,UAAM;AAAEQ,MAAAA,OAAF;AAAWC,MAAAA,SAAX;AAAsBC,MAAAA;AAAtB,QAAoCV,MAAM,CAACW,SAAjD;AACA,UAAMC,MAAM,GAAG;AACbC,MAAAA,KAAK,EAAGC,OAAD,IAAapB,GAAG,CAACmB,KAAJ,CAAUC,OAAV,CADP;AAEbC,MAAAA,IAAI,EAAGD,OAAD,IAAapB,GAAG,CAACqB,IAAJ,CAASD,OAAT,CAFN;AAGbE,MAAAA,IAAI,EAAGF,OAAD,IAAapB,GAAG,CAACsB,IAAJ,CAASF,OAAT,CAHN;AAIbG,MAAAA,KAAK,EAAGH,OAAD,IAAapB,GAAG,CAACuB,KAAJ,CAAUH,OAAV;AAJP,KAAf;AAOAlB,IAAAA,QAAQ,CAACG,KAAT,CAAe;AACbS,MAAAA,OADa;AAEbP,MAAAA,OAFa;AAGbC,MAAAA,OAHa;AAIbC,MAAAA,GAJa;AAKbS,MAAAA,MALa;AAMbH,MAAAA,SANa;AAObC,MAAAA,SAPa;AAQbN,MAAAA,GARa;AASbC,MAAAA,QATa;AAUbC,MAAAA,IAVa;AAWbC,MAAAA;AAXa,KAAf;AAaD,GAxBc;AA0BfW,EAAAA,IAAI,EAAE,MAAM;AACVtB,IAAAA,QAAQ,CAACsB,IAAT;AACD;AA5Bc,CAAjB","sourcesContent":["'use strict'\n\nconst log = require('./log')\nconst { profiler } = require('./profiling')\n\nmodule.exports = {\n  start: config => {\n    const { service, version, env, url, hostname, port, tags } = config\n    const { enabled, sourceMap, exporters } = config.profiling\n    const logger = {\n      debug: (message) => log.debug(message),\n      info: (message) => log.info(message),\n      warn: (message) => log.warn(message),\n      error: (message) => log.error(message)\n    }\n\n    profiler.start({\n      enabled,\n      service,\n      version,\n      env,\n      logger,\n      sourceMap,\n      exporters,\n      url,\n      hostname,\n      port,\n      tags\n    })\n  },\n\n  stop: () => {\n    profiler.stop()\n  }\n}\n"]},"metadata":{},"sourceType":"script"}