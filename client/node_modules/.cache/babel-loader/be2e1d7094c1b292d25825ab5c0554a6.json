{"ast":null,"code":"'use strict';\n\nconst analyticsSampler = require('../../dd-trace/src/analytics_sampler');\n\nfunction createWrapRequest(tracer, config) {\n  return function wrapRequest(request) {\n    return function requestWithTrace(cfg = {\n      reqOpts: {}\n    }, cb) {\n      const topic = getTopic(cfg);\n      const tags = {\n        component: '@google-cloud/pubsub',\n        'resource.name': [cfg.method, topic].filter(x => x).join(' '),\n        'service.name': config.service || `${tracer._service}-pubsub`,\n        'span.kind': 'client',\n        'pubsub.method': cfg.method,\n        'gcloud.project_id': this.projectId,\n        'pubsub.topic': topic\n      };\n\n      if (cfg.method === 'publish') {\n        tags['span.kind'] = 'producer';\n      }\n\n      cb = tracer.scope().bind(cb);\n      return tracer.trace('pubsub.request', {\n        tags\n      }, (span, done) => {\n        analyticsSampler.sample(span, config.measured);\n\n        if (cfg.reqOpts && cfg.method === 'publish') {\n          for (const msg of cfg.reqOpts.messages) {\n            if (!msg.attributes) {\n              msg.attributes = {};\n            }\n\n            tracer.inject(span, 'text_map', msg.attributes);\n          }\n        }\n\n        arguments[1] = function (err) {\n          done(err);\n          return cb.apply(this, arguments);\n        };\n\n        return request.apply(this, arguments);\n      });\n    };\n  };\n}\n\nfunction createWrapSubscriptionEmit(tracer, config) {\n  return function wrapSubscriptionEmit(emit) {\n    return function emitWithTrace(eventName, message) {\n      if (eventName !== 'message' || !message || !message._datadog_span) {\n        return emit.apply(this, arguments);\n      }\n\n      const span = message._datadog_span;\n      return tracer.scope().activate(span, () => {\n        try {\n          return emit.apply(this, arguments);\n        } catch (e) {\n          span.setTag('error', e);\n          throw e;\n        }\n      });\n    };\n  };\n}\n\nfunction createWrapLeaseDispense(tracer, config) {\n  return function wrapDispense(dispense) {\n    return function dispenseWithTrace(message) {\n      const subscription = message._subscriber._subscription;\n      const topic = subscription.metadata && subscription.metadata.topic;\n      const tags = {\n        component: '@google-cloud/pubsub',\n        'resource.name': topic,\n        'service.name': config.service || tracer._service,\n        'gcloud.project_id': subscription.pubsub.projectId,\n        'pubsub.topic': topic,\n        'span.kind': 'consumer',\n        'span.type': 'worker'\n      };\n      const childOf = tracer.extract('text_map', message.attributes);\n      const span = tracer.startSpan('pubsub.receive', {\n        tags,\n        childOf\n      });\n      analyticsSampler.sample(span, config.measured, true);\n      message._datadog_span = span;\n      return dispense.apply(this, arguments);\n    };\n  };\n}\n\nfunction createWrapLeaseRemove(tracer, config) {\n  return function wrapRemove(remove) {\n    return function removeWithTrace(message) {\n      finish(message);\n      return remove.apply(this, arguments);\n    };\n  };\n}\n\nfunction createWrapLeaseClear(tracer, config) {\n  return function wrapClear(clear) {\n    return function clearWithTrace() {\n      for (const message of this._messages) {\n        finish(message);\n      }\n\n      return clear.apply(this, arguments);\n    };\n  };\n}\n\nfunction getTopic(cfg) {\n  if (cfg.reqOpts) {\n    return cfg.reqOpts[cfg.method === 'createTopic' ? 'name' : 'topic'];\n  }\n}\n\nfunction finish(message) {\n  const span = message._datadog_span;\n  if (!span) return;\n  span.setTag('pubsub.ack', message._handled ? 1 : 0);\n  span.finish();\n}\n\nmodule.exports = [{\n  name: '@google-cloud/pubsub',\n  versions: ['>=1.2'],\n\n  patch({\n    PubSub,\n    Subscription\n  }, tracer, config) {\n    this.wrap(PubSub.prototype, 'request', createWrapRequest(tracer, config));\n    this.wrap(Subscription.prototype, 'emit', createWrapSubscriptionEmit(tracer, config));\n  },\n\n  unpatch({\n    PubSub,\n    Subscription\n  }) {\n    this.unwrap(PubSub.prototype, 'request');\n    this.unwrap(Subscription.prototype, 'emit');\n  }\n\n}, {\n  name: '@google-cloud/pubsub',\n  versions: ['>=1.2'],\n  file: 'build/src/lease-manager.js',\n\n  patch({\n    LeaseManager\n  }, tracer, config) {\n    this.wrap(LeaseManager.prototype, '_dispense', createWrapLeaseDispense(tracer, config));\n    this.wrap(LeaseManager.prototype, 'remove', createWrapLeaseRemove(tracer, config));\n    this.wrap(LeaseManager.prototype, 'clear', createWrapLeaseClear(tracer, config));\n  },\n\n  unpatch({\n    LeaseManager\n  }) {\n    this.unwrap(LeaseManager.prototype, '_dispense');\n    this.unwrap(LeaseManager.prototype, 'remove');\n    this.unwrap(LeaseManager.prototype, 'clear');\n  }\n\n}];","map":{"version":3,"sources":["/Users/danielcalderon/vinology/Vinology-client/node_modules/dd-trace/packages/datadog-plugin-google-cloud-pubsub/src/index.js"],"names":["analyticsSampler","require","createWrapRequest","tracer","config","wrapRequest","request","requestWithTrace","cfg","reqOpts","cb","topic","getTopic","tags","component","method","filter","x","join","service","_service","projectId","scope","bind","trace","span","done","sample","measured","msg","messages","attributes","inject","arguments","err","apply","createWrapSubscriptionEmit","wrapSubscriptionEmit","emit","emitWithTrace","eventName","message","_datadog_span","activate","e","setTag","createWrapLeaseDispense","wrapDispense","dispense","dispenseWithTrace","subscription","_subscriber","_subscription","metadata","pubsub","childOf","extract","startSpan","createWrapLeaseRemove","wrapRemove","remove","removeWithTrace","finish","createWrapLeaseClear","wrapClear","clear","clearWithTrace","_messages","_handled","module","exports","name","versions","patch","PubSub","Subscription","wrap","prototype","unpatch","unwrap","file","LeaseManager"],"mappings":"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","sourcesContent":["'use strict'\n\nconst analyticsSampler = require('../../dd-trace/src/analytics_sampler')\n\nfunction createWrapRequest (tracer, config) {\n  return function wrapRequest (request) {\n    return function requestWithTrace (cfg = { reqOpts: {} }, cb) {\n      const topic = getTopic(cfg)\n      const tags = {\n        component: '@google-cloud/pubsub',\n        'resource.name': [cfg.method, topic].filter(x => x).join(' '),\n        'service.name': config.service || `${tracer._service}-pubsub`,\n        'span.kind': 'client',\n        'pubsub.method': cfg.method,\n        'gcloud.project_id': this.projectId,\n        'pubsub.topic': topic\n      }\n      if (cfg.method === 'publish') {\n        tags['span.kind'] = 'producer'\n      }\n      cb = tracer.scope().bind(cb)\n      return tracer.trace('pubsub.request', { tags }, (span, done) => {\n        analyticsSampler.sample(span, config.measured)\n\n        if (cfg.reqOpts && cfg.method === 'publish') {\n          for (const msg of cfg.reqOpts.messages) {\n            if (!msg.attributes) {\n              msg.attributes = {}\n            }\n            tracer.inject(span, 'text_map', msg.attributes)\n          }\n        }\n\n        arguments[1] = function (err) {\n          done(err)\n          return cb.apply(this, arguments)\n        }\n\n        return request.apply(this, arguments)\n      })\n    }\n  }\n}\n\nfunction createWrapSubscriptionEmit (tracer, config) {\n  return function wrapSubscriptionEmit (emit) {\n    return function emitWithTrace (eventName, message) {\n      if (eventName !== 'message' || !message || !message._datadog_span) {\n        return emit.apply(this, arguments)\n      }\n\n      const span = message._datadog_span\n\n      return tracer.scope().activate(span, () => {\n        try {\n          return emit.apply(this, arguments)\n        } catch (e) {\n          span.setTag('error', e)\n          throw e\n        }\n      })\n    }\n  }\n}\n\nfunction createWrapLeaseDispense (tracer, config) {\n  return function wrapDispense (dispense) {\n    return function dispenseWithTrace (message) {\n      const subscription = message._subscriber._subscription\n      const topic = subscription.metadata && subscription.metadata.topic\n      const tags = {\n        component: '@google-cloud/pubsub',\n        'resource.name': topic,\n        'service.name': config.service || tracer._service,\n        'gcloud.project_id': subscription.pubsub.projectId,\n        'pubsub.topic': topic,\n        'span.kind': 'consumer',\n        'span.type': 'worker'\n      }\n\n      const childOf = tracer.extract('text_map', message.attributes)\n      const span = tracer.startSpan('pubsub.receive', { tags, childOf })\n\n      analyticsSampler.sample(span, config.measured, true)\n\n      message._datadog_span = span\n\n      return dispense.apply(this, arguments)\n    }\n  }\n}\n\nfunction createWrapLeaseRemove (tracer, config) {\n  return function wrapRemove (remove) {\n    return function removeWithTrace (message) {\n      finish(message)\n\n      return remove.apply(this, arguments)\n    }\n  }\n}\n\nfunction createWrapLeaseClear (tracer, config) {\n  return function wrapClear (clear) {\n    return function clearWithTrace () {\n      for (const message of this._messages) {\n        finish(message)\n      }\n\n      return clear.apply(this, arguments)\n    }\n  }\n}\n\nfunction getTopic (cfg) {\n  if (cfg.reqOpts) {\n    return cfg.reqOpts[cfg.method === 'createTopic' ? 'name' : 'topic']\n  }\n}\n\nfunction finish (message) {\n  const span = message._datadog_span\n\n  if (!span) return\n\n  span.setTag('pubsub.ack', message._handled ? 1 : 0)\n  span.finish()\n}\n\nmodule.exports = [\n  {\n    name: '@google-cloud/pubsub',\n    versions: ['>=1.2'],\n    patch ({ PubSub, Subscription }, tracer, config) {\n      this.wrap(PubSub.prototype, 'request', createWrapRequest(tracer, config))\n      this.wrap(Subscription.prototype, 'emit', createWrapSubscriptionEmit(tracer, config))\n    },\n    unpatch ({ PubSub, Subscription }) {\n      this.unwrap(PubSub.prototype, 'request')\n      this.unwrap(Subscription.prototype, 'emit')\n    }\n  },\n  {\n    name: '@google-cloud/pubsub',\n    versions: ['>=1.2'],\n    file: 'build/src/lease-manager.js',\n    patch ({ LeaseManager }, tracer, config) {\n      this.wrap(LeaseManager.prototype, '_dispense', createWrapLeaseDispense(tracer, config))\n      this.wrap(LeaseManager.prototype, 'remove', createWrapLeaseRemove(tracer, config))\n      this.wrap(LeaseManager.prototype, 'clear', createWrapLeaseClear(tracer, config))\n    },\n    unpatch ({ LeaseManager }) {\n      this.unwrap(LeaseManager.prototype, '_dispense')\n      this.unwrap(LeaseManager.prototype, 'remove')\n      this.unwrap(LeaseManager.prototype, 'clear')\n    }\n  }\n]\n"]},"metadata":{},"sourceType":"script"}