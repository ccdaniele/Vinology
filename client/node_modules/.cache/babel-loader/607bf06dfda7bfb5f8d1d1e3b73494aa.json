{"ast":null,"code":"'use strict';\n\nconst {\n  LOG\n} = require('../../../ext/formats');\n\nfunction createWrapPino(tracer, config, symbol, wrapper) {\n  return function wrapPino(pino) {\n    return function pinoWithTrace() {\n      const instance = pino.apply(this, arguments);\n      Object.defineProperty(instance, symbol, {\n        configurable: true,\n        enumerable: true,\n        writable: true,\n        value: wrapper(tracer, config)(instance[symbol])\n      });\n      return instance;\n    };\n  };\n}\n\nfunction createWrapAsJson(tracer, config) {\n  return function wrapAsJson(asJson) {\n    return function asJsonWithTrace(obj, msg, num, time) {\n      const span = tracer.scope().active();\n      obj = arguments[0] = obj || {};\n      tracer.inject(span, LOG, obj);\n      const json = asJson.apply(this, arguments);\n      obj && delete obj.dd;\n      return json;\n    };\n  };\n}\n\nfunction createWrapMixin(tracer, config) {\n  return function wrapMixin(mixin) {\n    return function mixinWithTrace() {\n      let obj = {};\n\n      if (mixin) {\n        obj = mixin.apply(this, arguments);\n      }\n\n      const span = tracer.scope().active();\n      tracer.inject(span, LOG, obj);\n      return obj;\n    };\n  };\n}\n\nfunction createWrapPrettifyObject(tracer, config) {\n  return function wrapPrettifyObject(prettifyObject) {\n    return function prettifyObjectWithTrace(input) {\n      const span = tracer.scope().active();\n      tracer.inject(span, LOG, input.input);\n      return prettifyObject.apply(this, arguments);\n    };\n  };\n}\n\nfunction createWrapPrettyFactory(tracer, config) {\n  return function wrapPrettyFactory(prettyFactory) {\n    return function prettyFactoryWithTrace() {\n      const pretty = prettyFactory.apply(this, arguments);\n      return function prettyWithTrace(obj) {\n        const span = tracer.scope().active();\n        tracer.inject(span, LOG, obj);\n        return pretty.apply(this, arguments);\n      };\n    };\n  };\n}\n\nmodule.exports = [{\n  name: 'pino',\n  versions: ['2 - 3', '4', '>=5 <5.14.0'],\n\n  patch(pino, tracer, config) {\n    if (!tracer._logInjection) return;\n    const asJsonSym = pino.symbols && pino.symbols.asJsonSym || 'asJson';\n    return this.wrapExport(pino, createWrapPino(tracer, config, asJsonSym, createWrapAsJson)(pino));\n  },\n\n  unpatch(pino) {\n    return this.unwrapExport(pino);\n  }\n\n}, {\n  name: 'pino',\n  versions: ['>=5.14.0'],\n\n  patch(pino, tracer, config) {\n    if (!tracer._logInjection) return;\n    const mixinSym = pino.symbols.mixinSym;\n    return this.wrapExport(pino, createWrapPino(tracer, config, mixinSym, createWrapMixin)(pino));\n  },\n\n  unpatch(pino) {\n    return this.unwrapExport(pino);\n  }\n\n}, {\n  name: 'pino-pretty',\n  versions: ['>=3'],\n  // will only work starting from pino@5.0.0 as previous versions are not using pino-pretty\n  file: 'lib/utils.js',\n\n  patch(utils, tracer, config) {\n    if (!tracer._logInjection) return;\n    this.wrap(utils, 'prettifyObject', createWrapPrettifyObject(tracer, config));\n  },\n\n  unpatch(utils) {\n    this.unwrap(utils, 'prettifyObject');\n  }\n\n}, {\n  name: 'pino-pretty',\n  versions: ['1 - 2'],\n\n  patch(prettyFactory, tracer, config) {\n    if (!tracer._logInjection) return;\n    return this.wrapExport(prettyFactory, createWrapPrettyFactory(tracer, config)(prettyFactory));\n  },\n\n  unpatch(prettyFactory) {\n    return this.unwrapExport(prettyFactory);\n  }\n\n}];","map":{"version":3,"sources":["/Users/danielcalderon/vinology/Vinology-client/node_modules/dd-trace/packages/datadog-plugin-pino/src/index.js"],"names":["LOG","require","createWrapPino","tracer","config","symbol","wrapper","wrapPino","pino","pinoWithTrace","instance","apply","arguments","Object","defineProperty","configurable","enumerable","writable","value","createWrapAsJson","wrapAsJson","asJson","asJsonWithTrace","obj","msg","num","time","span","scope","active","inject","json","dd","createWrapMixin","wrapMixin","mixin","mixinWithTrace","createWrapPrettifyObject","wrapPrettifyObject","prettifyObject","prettifyObjectWithTrace","input","createWrapPrettyFactory","wrapPrettyFactory","prettyFactory","prettyFactoryWithTrace","pretty","prettyWithTrace","module","exports","name","versions","patch","_logInjection","asJsonSym","symbols","wrapExport","unpatch","unwrapExport","mixinSym","file","utils","wrap","unwrap"],"mappings":"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","sourcesContent":["'use strict'\n\nconst { LOG } = require('../../../ext/formats')\n\nfunction createWrapPino (tracer, config, symbol, wrapper) {\n  return function wrapPino (pino) {\n    return function pinoWithTrace () {\n      const instance = pino.apply(this, arguments)\n\n      Object.defineProperty(instance, symbol, {\n        configurable: true,\n        enumerable: true,\n        writable: true,\n        value: wrapper(tracer, config)(instance[symbol])\n      })\n\n      return instance\n    }\n  }\n}\n\nfunction createWrapAsJson (tracer, config) {\n  return function wrapAsJson (asJson) {\n    return function asJsonWithTrace (obj, msg, num, time) {\n      const span = tracer.scope().active()\n\n      obj = arguments[0] = obj || {}\n\n      tracer.inject(span, LOG, obj)\n\n      const json = asJson.apply(this, arguments)\n\n      obj && delete obj.dd\n\n      return json\n    }\n  }\n}\n\nfunction createWrapMixin (tracer, config) {\n  return function wrapMixin (mixin) {\n    return function mixinWithTrace () {\n      let obj = {}\n\n      if (mixin) {\n        obj = mixin.apply(this, arguments)\n      }\n\n      const span = tracer.scope().active()\n\n      tracer.inject(span, LOG, obj)\n\n      return obj\n    }\n  }\n}\n\nfunction createWrapPrettifyObject (tracer, config) {\n  return function wrapPrettifyObject (prettifyObject) {\n    return function prettifyObjectWithTrace (input) {\n      const span = tracer.scope().active()\n\n      tracer.inject(span, LOG, input.input)\n\n      return prettifyObject.apply(this, arguments)\n    }\n  }\n}\n\nfunction createWrapPrettyFactory (tracer, config) {\n  return function wrapPrettyFactory (prettyFactory) {\n    return function prettyFactoryWithTrace () {\n      const pretty = prettyFactory.apply(this, arguments)\n\n      return function prettyWithTrace (obj) {\n        const span = tracer.scope().active()\n\n        tracer.inject(span, LOG, obj)\n\n        return pretty.apply(this, arguments)\n      }\n    }\n  }\n}\n\nmodule.exports = [\n  {\n    name: 'pino',\n    versions: ['2 - 3', '4', '>=5 <5.14.0'],\n    patch (pino, tracer, config) {\n      if (!tracer._logInjection) return\n\n      const asJsonSym = (pino.symbols && pino.symbols.asJsonSym) || 'asJson'\n\n      return this.wrapExport(pino, createWrapPino(tracer, config, asJsonSym, createWrapAsJson)(pino))\n    },\n    unpatch (pino) {\n      return this.unwrapExport(pino)\n    }\n  },\n  {\n    name: 'pino',\n    versions: ['>=5.14.0'],\n    patch (pino, tracer, config) {\n      if (!tracer._logInjection) return\n\n      const mixinSym = pino.symbols.mixinSym\n\n      return this.wrapExport(pino, createWrapPino(tracer, config, mixinSym, createWrapMixin)(pino))\n    },\n    unpatch (pino) {\n      return this.unwrapExport(pino)\n    }\n  },\n  {\n    name: 'pino-pretty',\n    versions: ['>=3'], // will only work starting from pino@5.0.0 as previous versions are not using pino-pretty\n    file: 'lib/utils.js',\n    patch (utils, tracer, config) {\n      if (!tracer._logInjection) return\n\n      this.wrap(utils, 'prettifyObject', createWrapPrettifyObject(tracer, config))\n    },\n    unpatch (utils) {\n      this.unwrap(utils, 'prettifyObject')\n    }\n  },\n  {\n    name: 'pino-pretty',\n    versions: ['1 - 2'],\n    patch (prettyFactory, tracer, config) {\n      if (!tracer._logInjection) return\n\n      return this.wrapExport(prettyFactory, createWrapPrettyFactory(tracer, config)(prettyFactory))\n    },\n    unpatch (prettyFactory) {\n      return this.unwrapExport(prettyFactory)\n    }\n  }\n]\n"]},"metadata":{},"sourceType":"script"}