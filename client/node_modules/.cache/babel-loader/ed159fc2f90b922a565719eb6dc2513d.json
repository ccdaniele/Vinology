{"ast":null,"code":"'use strict';\n\nconst web = require('../../dd-trace/src/plugins/util/web'); // https://docs.apigee.com/api-platform/microgateway/3.1.x/develop-custom-plugins#eventhandlerfunctions\n\n\nconst listeners = ['onrequest', 'ondata_request', 'onend_request', 'onclose_request', 'onerror_request', 'onresponse', 'ondata_response', 'onend_response', 'onclose_response', 'onerror_response'];\n\nfunction createWrapGateway(tracer, config) {\n  config = web.normalizeConfig(config);\n  return function wrapGateway(Gateway) {\n    return function GatewayWithTrace(config) {\n      const gateway = Gateway.apply(this, arguments);\n      gateway.addPlugin = wrapAddPlugin(gateway.addPlugin);\n      return gateway;\n    };\n  };\n}\n\nfunction createWrapConfigProxyFactory(tracer, config) {\n  config = web.normalizeConfig(config);\n  return function wrapConfigProxyFactory(configProxyFactory) {\n    return function configProxyFactoryWithTrace() {\n      const configProxy = configProxyFactory.apply(this, arguments);\n      return function configProxyWithTrace(req, res, next) {\n        return web.instrument(tracer, config, req, res, 'microgateway.request', () => {\n          web.beforeEnd(req, () => {\n            res.proxy && web.enterRoute(req, res.proxy.base_path);\n          });\n          arguments[2] = wrapNext(req, next);\n          return configProxy.apply(this, arguments);\n        });\n      };\n    };\n  };\n}\n\nfunction createWrapPluginsFactory(tracer, config) {\n  config = web.normalizeConfig(config);\n  return function wrapPluginsFactory(pluginsFactory) {\n    return function pluginsFactoryWithTrace(plugins) {\n      const pluginsMiddleware = pluginsFactory.apply(this, arguments);\n      return function pluginsMiddlewareWithTrace(req, res, next) {\n        arguments[2] = wrapNext(req, next);\n        return pluginsMiddleware.apply(this, arguments);\n      };\n    };\n  };\n}\n\nfunction wrapAddPlugin(addPlugin) {\n  return function (name, plugin) {\n    if (typeof plugin === 'function') {\n      arguments[1] = wrapPluginInit(plugin);\n    } else if (plugin && typeof plugin.init === 'function') {\n      plugin.init = wrapPluginInit(plugin.init);\n    }\n\n    return addPlugin.apply(this, arguments);\n  };\n}\n\nfunction wrapPluginInit(init) {\n  return function initWithTrace(config, logging, stats) {\n    const handler = init.apply(this, arguments);\n\n    if (!handler._dd_patched) {\n      wrapListeners(handler);\n    }\n\n    return handler;\n  };\n}\n\nfunction wrapNext(req, next) {\n  return function nextWithTrace(err) {\n    web.addError(req, err);\n    return next.apply(this, arguments);\n  };\n}\n\nfunction wrapListeners(handler) {\n  for (const name of listeners) {\n    const listener = handler[name];\n    if (!listener) continue;\n\n    switch (listener.length) {\n      case 3:\n        handler[name] = function handlerWithTrace(req, res, next) {\n          return web.reactivate(req, () => listener.apply(this, arguments));\n        };\n\n        break;\n\n      case 4:\n        handler[name] = function handlerWithTrace(req, res, data, next) {\n          return web.reactivate(req, () => listener.apply(this, arguments));\n        };\n\n        break;\n    }\n  }\n}\n\nmodule.exports = [{\n  name: 'microgateway-core',\n  versions: ['>=2.1'],\n\n  patch(Gateway, tracer, config) {\n    return this.wrapExport(Gateway, createWrapGateway(tracer, config)(Gateway));\n  },\n\n  unpatch(Gateway) {\n    this.unwrapExport(Gateway);\n  }\n\n}, {\n  name: 'microgateway-core',\n  versions: ['>=2.1'],\n  file: 'lib/config-proxy-middleware.js',\n\n  patch(configProxyFactory, tracer, config) {\n    const wrapper = createWrapConfigProxyFactory(tracer, config)(configProxyFactory);\n    return this.wrapExport(configProxyFactory, wrapper);\n  },\n\n  unpatch(configProxyFactory) {\n    this.unwrapExport(configProxyFactory);\n  }\n\n}, {\n  name: 'microgateway-core',\n  versions: ['>=2.1'],\n  file: 'lib/plugins-middleware.js',\n\n  patch(pluginsFactory, tracer, config) {\n    const wrapper = createWrapPluginsFactory(tracer, config)(pluginsFactory);\n    return this.wrapExport(pluginsFactory, wrapper);\n  },\n\n  unpatch(pluginsFactory) {\n    this.unwrapExport(pluginsFactory);\n  }\n\n}];","map":{"version":3,"sources":["/Users/danielcalderon/vinology/Vinology-client/node_modules/dd-trace/packages/datadog-plugin-microgateway-core/src/index.js"],"names":["web","require","listeners","createWrapGateway","tracer","config","normalizeConfig","wrapGateway","Gateway","GatewayWithTrace","gateway","apply","arguments","addPlugin","wrapAddPlugin","createWrapConfigProxyFactory","wrapConfigProxyFactory","configProxyFactory","configProxyFactoryWithTrace","configProxy","configProxyWithTrace","req","res","next","instrument","beforeEnd","proxy","enterRoute","base_path","wrapNext","createWrapPluginsFactory","wrapPluginsFactory","pluginsFactory","pluginsFactoryWithTrace","plugins","pluginsMiddleware","pluginsMiddlewareWithTrace","name","plugin","wrapPluginInit","init","initWithTrace","logging","stats","handler","_dd_patched","wrapListeners","nextWithTrace","err","addError","listener","length","handlerWithTrace","reactivate","data","module","exports","versions","patch","wrapExport","unpatch","unwrapExport","file","wrapper"],"mappings":"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","sourcesContent":["'use strict'\n\nconst web = require('../../dd-trace/src/plugins/util/web')\n\n// https://docs.apigee.com/api-platform/microgateway/3.1.x/develop-custom-plugins#eventhandlerfunctions\nconst listeners = [\n  'onrequest',\n  'ondata_request',\n  'onend_request',\n  'onclose_request',\n  'onerror_request',\n  'onresponse',\n  'ondata_response',\n  'onend_response',\n  'onclose_response',\n  'onerror_response'\n]\n\nfunction createWrapGateway (tracer, config) {\n  config = web.normalizeConfig(config)\n\n  return function wrapGateway (Gateway) {\n    return function GatewayWithTrace (config) {\n      const gateway = Gateway.apply(this, arguments)\n\n      gateway.addPlugin = wrapAddPlugin(gateway.addPlugin)\n\n      return gateway\n    }\n  }\n}\n\nfunction createWrapConfigProxyFactory (tracer, config) {\n  config = web.normalizeConfig(config)\n\n  return function wrapConfigProxyFactory (configProxyFactory) {\n    return function configProxyFactoryWithTrace () {\n      const configProxy = configProxyFactory.apply(this, arguments)\n\n      return function configProxyWithTrace (req, res, next) {\n        return web.instrument(tracer, config, req, res, 'microgateway.request', () => {\n          web.beforeEnd(req, () => {\n            res.proxy && web.enterRoute(req, res.proxy.base_path)\n          })\n\n          arguments[2] = wrapNext(req, next)\n\n          return configProxy.apply(this, arguments)\n        })\n      }\n    }\n  }\n}\n\nfunction createWrapPluginsFactory (tracer, config) {\n  config = web.normalizeConfig(config)\n\n  return function wrapPluginsFactory (pluginsFactory) {\n    return function pluginsFactoryWithTrace (plugins) {\n      const pluginsMiddleware = pluginsFactory.apply(this, arguments)\n\n      return function pluginsMiddlewareWithTrace (req, res, next) {\n        arguments[2] = wrapNext(req, next)\n\n        return pluginsMiddleware.apply(this, arguments)\n      }\n    }\n  }\n}\n\nfunction wrapAddPlugin (addPlugin) {\n  return function (name, plugin) {\n    if (typeof plugin === 'function') {\n      arguments[1] = wrapPluginInit(plugin)\n    } else if (plugin && typeof plugin.init === 'function') {\n      plugin.init = wrapPluginInit(plugin.init)\n    }\n\n    return addPlugin.apply(this, arguments)\n  }\n}\n\nfunction wrapPluginInit (init) {\n  return function initWithTrace (config, logging, stats) {\n    const handler = init.apply(this, arguments)\n\n    if (!handler._dd_patched) {\n      wrapListeners(handler)\n    }\n\n    return handler\n  }\n}\n\nfunction wrapNext (req, next) {\n  return function nextWithTrace (err) {\n    web.addError(req, err)\n\n    return next.apply(this, arguments)\n  }\n}\n\nfunction wrapListeners (handler) {\n  for (const name of listeners) {\n    const listener = handler[name]\n\n    if (!listener) continue\n\n    switch (listener.length) {\n      case 3:\n        handler[name] = function handlerWithTrace (req, res, next) {\n          return web.reactivate(req, () => listener.apply(this, arguments))\n        }\n        break\n      case 4:\n        handler[name] = function handlerWithTrace (req, res, data, next) {\n          return web.reactivate(req, () => listener.apply(this, arguments))\n        }\n        break\n    }\n  }\n}\n\nmodule.exports = [\n  {\n    name: 'microgateway-core',\n    versions: ['>=2.1'],\n    patch (Gateway, tracer, config) {\n      return this.wrapExport(Gateway, createWrapGateway(tracer, config)(Gateway))\n    },\n    unpatch (Gateway) {\n      this.unwrapExport(Gateway)\n    }\n  },\n  {\n    name: 'microgateway-core',\n    versions: ['>=2.1'],\n    file: 'lib/config-proxy-middleware.js',\n    patch (configProxyFactory, tracer, config) {\n      const wrapper = createWrapConfigProxyFactory(tracer, config)(configProxyFactory)\n      return this.wrapExport(configProxyFactory, wrapper)\n    },\n    unpatch (configProxyFactory) {\n      this.unwrapExport(configProxyFactory)\n    }\n  },\n  {\n    name: 'microgateway-core',\n    versions: ['>=2.1'],\n    file: 'lib/plugins-middleware.js',\n    patch (pluginsFactory, tracer, config) {\n      const wrapper = createWrapPluginsFactory(tracer, config)(pluginsFactory)\n      return this.wrapExport(pluginsFactory, wrapper)\n    },\n    unpatch (pluginsFactory) {\n      this.unwrapExport(pluginsFactory)\n    }\n  }\n]\n"]},"metadata":{},"sourceType":"script"}