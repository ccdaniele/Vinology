{"ast":null,"code":"'use strict';\n\nconst retry = require('retry');\n\nconst {\n  request\n} = require('http');\n\nconst FormData = require('form-data'); // TODO: avoid using dd-trace internals. Make this a separate module?\n\n\nconst docker = require('../../exporters/agent/docker');\n\nconst version = require('../../../lib/version');\n\nconst containerId = docker.id();\n\nfunction sendRequest(options, form, callback) {\n  const req = request(options, res => {\n    if (res.statusCode >= 400) {\n      const error = new Error(`HTTP Error ${res.statusCode}`);\n      error.status = res.statusCode;\n      callback(error);\n    } else {\n      callback(null, res);\n    }\n  });\n  req.on('error', callback);\n  if (form) form.pipe(req);\n  req.end();\n}\n\nfunction getBody(stream, callback) {\n  const chunks = [];\n  stream.on('error', callback);\n  stream.on('data', chunk => chunks.push(chunk));\n  stream.on('end', () => {\n    callback(null, Buffer.concat(chunks));\n  });\n}\n\nfunction computeRetries(uploadTimeout) {\n  let tries = 0;\n\n  while (tries < 2 || uploadTimeout > 1000) {\n    tries++;\n    uploadTimeout /= 2;\n  }\n\n  return [tries, uploadTimeout];\n}\n\nclass AgentExporter {\n  constructor({\n    url,\n    logger,\n    uploadTimeout\n  } = {}) {\n    this._url = url;\n    this._logger = logger;\n    const [backoffTries, backoffTime] = computeRetries(uploadTimeout);\n    this._backoffTime = backoffTime;\n    this._backoffTries = backoffTries;\n  }\n\n  export({\n    profiles,\n    start,\n    end,\n    tags\n  }) {\n    const form = new FormData();\n    const types = Object.keys(profiles);\n    const fields = [['recording-start', start.toISOString()], ['recording-end', end.toISOString()], ['language', 'javascript'], ['runtime', 'nodejs'], ['runtime_version', process.version], ['profiler_version', version], ['format', 'pprof'], ['tags[]', 'language:javascript'], ['tags[]', 'runtime:nodejs'], ['tags[]', `runtime_version:${process.version}`], ['tags[]', `profiler_version:${version}`], ['tags[]', 'format:pprof'], ...Object.entries(tags).map(([key, value]) => ['tags[]', `${key}:${value}`])];\n\n    for (const [key, value] of fields) {\n      form.append(key, value);\n    }\n\n    this._logger.debug(() => {\n      const body = fields.map(([key, value]) => `  ${key}: ${value}`).join('\\n');\n      return `Building agent export report: ${'\\n' + body}`;\n    });\n\n    for (let index = 0; index < types.length; index++) {\n      const type = types[index];\n      const buffer = profiles[type];\n\n      this._logger.debug(() => {\n        const bytes = buffer.toString('hex').match(/../g).join(' ');\n        return `Adding ${type} profile to agent export: ` + bytes;\n      });\n\n      form.append(`types[${index}]`, type);\n      form.append(`data[${index}]`, buffer, {\n        filename: `${type}.pb.gz`,\n        contentType: 'application/octet-stream',\n        knownLength: buffer.length\n      });\n    }\n\n    const options = {\n      method: 'POST',\n      path: '/profiling/v1/input',\n      headers: form.getHeaders()\n    };\n\n    if (containerId) {\n      options.headers['Datadog-Container-ID'] = containerId;\n    }\n\n    if (this._url.protocol === 'unix:') {\n      options.socketPath = this._url.pathname;\n    } else {\n      options.protocol = this._url.protocol;\n      options.hostname = this._url.hostname;\n      options.port = this._url.port;\n    }\n\n    this._logger.debug(() => {\n      return `Submitting agent report to: ${JSON.stringify(options)}`;\n    });\n\n    return new Promise((resolve, reject) => {\n      const operation = retry.operation({\n        randomize: true,\n        minTimeout: this._backoffTime,\n        retries: this._backoffTries\n      });\n      operation.attempt(attempt => {\n        const timeout = Math.pow(this._backoffTime, attempt);\n        sendRequest({ ...options,\n          timeout\n        }, form, (err, response) => {\n          if (operation.retry(err)) {\n            this._logger.error(`Error from the agent: ${err.message}`);\n\n            return;\n          } else if (err) {\n            reject(new Error('Profiler agent export back-off period expired'));\n            return;\n          }\n\n          getBody(response, (err, body) => {\n            if (err) {\n              this._logger.error(`Error reading agent response: ${err.message}`);\n            } else {\n              this._logger.debug(() => {\n                const bytes = (body.toString('hex').match(/../g) || []).join(' ');\n                return `Agent export response: ${bytes}`;\n              });\n            }\n          });\n          resolve();\n        });\n      });\n    });\n  }\n\n}\n\nmodule.exports = {\n  AgentExporter\n};","map":{"version":3,"sources":["/Users/danielcalderon/vinology/Vinology-client/node_modules/dd-trace/packages/dd-trace/src/profiling/exporters/agent.js"],"names":["retry","require","request","FormData","docker","version","containerId","id","sendRequest","options","form","callback","req","res","statusCode","error","Error","status","on","pipe","end","getBody","stream","chunks","chunk","push","Buffer","concat","computeRetries","uploadTimeout","tries","AgentExporter","constructor","url","logger","_url","_logger","backoffTries","backoffTime","_backoffTime","_backoffTries","export","profiles","start","tags","types","Object","keys","fields","toISOString","process","entries","map","key","value","append","debug","body","join","index","length","type","buffer","bytes","toString","match","filename","contentType","knownLength","method","path","headers","getHeaders","protocol","socketPath","pathname","hostname","port","JSON","stringify","Promise","resolve","reject","operation","randomize","minTimeout","retries","attempt","timeout","Math","pow","err","response","message","module","exports"],"mappings":"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","sourcesContent":["'use strict'\n\nconst retry = require('retry')\nconst { request } = require('http')\nconst FormData = require('form-data')\n\n// TODO: avoid using dd-trace internals. Make this a separate module?\nconst docker = require('../../exporters/agent/docker')\nconst version = require('../../../lib/version')\n\nconst containerId = docker.id()\n\nfunction sendRequest (options, form, callback) {\n  const req = request(options, res => {\n    if (res.statusCode >= 400) {\n      const error = new Error(`HTTP Error ${res.statusCode}`)\n      error.status = res.statusCode\n      callback(error)\n    } else {\n      callback(null, res)\n    }\n  })\n  req.on('error', callback)\n  if (form) form.pipe(req)\n  req.end()\n}\n\nfunction getBody (stream, callback) {\n  const chunks = []\n  stream.on('error', callback)\n  stream.on('data', chunk => chunks.push(chunk))\n  stream.on('end', () => {\n    callback(null, Buffer.concat(chunks))\n  })\n}\n\nfunction computeRetries (uploadTimeout) {\n  let tries = 0\n  while (tries < 2 || uploadTimeout > 1000) {\n    tries++\n    uploadTimeout /= 2\n  }\n  return [tries, uploadTimeout]\n}\n\nclass AgentExporter {\n  constructor ({ url, logger, uploadTimeout } = {}) {\n    this._url = url\n    this._logger = logger\n\n    const [backoffTries, backoffTime] = computeRetries(uploadTimeout)\n\n    this._backoffTime = backoffTime\n    this._backoffTries = backoffTries\n  }\n\n  export ({ profiles, start, end, tags }) {\n    const form = new FormData()\n    const types = Object.keys(profiles)\n\n    const fields = [\n      ['recording-start', start.toISOString()],\n      ['recording-end', end.toISOString()],\n      ['language', 'javascript'],\n      ['runtime', 'nodejs'],\n      ['runtime_version', process.version],\n      ['profiler_version', version],\n      ['format', 'pprof'],\n\n      ['tags[]', 'language:javascript'],\n      ['tags[]', 'runtime:nodejs'],\n      ['tags[]', `runtime_version:${process.version}`],\n      ['tags[]', `profiler_version:${version}`],\n      ['tags[]', 'format:pprof'],\n      ...Object.entries(tags).map(([key, value]) => ['tags[]', `${key}:${value}`])\n    ]\n\n    for (const [key, value] of fields) {\n      form.append(key, value)\n    }\n\n    this._logger.debug(() => {\n      const body = fields.map(([key, value]) => `  ${key}: ${value}`).join('\\n')\n      return `Building agent export report: ${'\\n' + body}`\n    })\n\n    for (let index = 0; index < types.length; index++) {\n      const type = types[index]\n      const buffer = profiles[type]\n\n      this._logger.debug(() => {\n        const bytes = buffer.toString('hex').match(/../g).join(' ')\n        return `Adding ${type} profile to agent export: ` + bytes\n      })\n\n      form.append(`types[${index}]`, type)\n      form.append(`data[${index}]`, buffer, {\n        filename: `${type}.pb.gz`,\n        contentType: 'application/octet-stream',\n        knownLength: buffer.length\n      })\n    }\n\n    const options = {\n      method: 'POST',\n      path: '/profiling/v1/input',\n      headers: form.getHeaders()\n    }\n\n    if (containerId) {\n      options.headers['Datadog-Container-ID'] = containerId\n    }\n\n    if (this._url.protocol === 'unix:') {\n      options.socketPath = this._url.pathname\n    } else {\n      options.protocol = this._url.protocol\n      options.hostname = this._url.hostname\n      options.port = this._url.port\n    }\n\n    this._logger.debug(() => {\n      return `Submitting agent report to: ${JSON.stringify(options)}`\n    })\n\n    return new Promise((resolve, reject) => {\n      const operation = retry.operation({\n        randomize: true,\n        minTimeout: this._backoffTime,\n        retries: this._backoffTries\n      })\n\n      operation.attempt((attempt) => {\n        const timeout = Math.pow(this._backoffTime, attempt)\n        sendRequest({ ...options, timeout }, form, (err, response) => {\n          if (operation.retry(err)) {\n            this._logger.error(`Error from the agent: ${err.message}`)\n            return\n          } else if (err) {\n            reject(new Error('Profiler agent export back-off period expired'))\n            return\n          }\n\n          getBody(response, (err, body) => {\n            if (err) {\n              this._logger.error(`Error reading agent response: ${err.message}`)\n            } else {\n              this._logger.debug(() => {\n                const bytes = (body.toString('hex').match(/../g) || []).join(' ')\n                return `Agent export response: ${bytes}`\n              })\n            }\n          })\n\n          resolve()\n        })\n      })\n    })\n  }\n}\n\nmodule.exports = { AgentExporter }\n"]},"metadata":{},"sourceType":"script"}