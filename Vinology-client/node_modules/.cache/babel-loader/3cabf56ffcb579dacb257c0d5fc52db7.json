{"ast":null,"code":"'use strict';\n\nconst web = require('../../dd-trace/src/plugins/util/web');\n\nconst traceRoute = handler => req => {\n  const {\n    original,\n    route\n  } = req;\n\n  if (web.active(original)) {\n    web.enterRoute(original, route);\n  }\n\n  return handler(req);\n};\n\nconst wrapLogger = tracer => logger => record => {\n  const span = tracer.scope().active();\n  if (!span) return logger(record);\n  const correlation = {\n    dd: {\n      trace_id: span.context().toTraceId(),\n      span_id: span.context().toSpanId()\n    }\n  };\n  record = record instanceof Error ? Object.assign(record, correlation) : Object.assign({}, record, correlation);\n  return logger(record);\n};\n\nconst wrapMount = (tracer, config) => mount => opts => {\n  const handler = mount(opts);\n\n  const traced = (req, res) => web.instrument(tracer, config, req, res, 'paperplane.request', () => handler(req, res));\n\n  return traced;\n};\n\nconst wrapRoutes = tracer => routes => handlers => {\n  const traced = {};\n\n  for (const route in handlers) {\n    traced[route] = traceRoute(handlers[route]);\n  }\n\n  return routes(traced);\n};\n\nconst nodeMajor = Number(process.versions.node.split('.')[0]);\nconst mainVersionRange = nodeMajor <= 12 ? ['>=2.3.2'] : nodeMajor <= 14 ? ['>=3.1.1'] : [];\nmodule.exports = [{\n  name: 'paperplane',\n  versions: mainVersionRange,\n  file: 'lib/logger.js',\n\n  patch(exports, tracer) {\n    if (tracer._logInjection) {\n      this.wrap(exports, 'logger', wrapLogger(tracer));\n    }\n  },\n\n  unpatch(exports) {\n    this.unwrap(exports, 'logger');\n  }\n\n}, {\n  name: 'paperplane',\n  versions: mainVersionRange,\n  file: 'lib/mount.js',\n\n  patch(exports, tracer, config) {\n    config = web.normalizeConfig(config);\n    this.wrap(exports, 'mount', wrapMount(tracer, config));\n  },\n\n  unpatch(exports) {\n    this.unwrap(exports, 'mount');\n  }\n\n}, {\n  name: 'paperplane',\n  versions: mainVersionRange,\n  file: 'lib/routes.js',\n\n  patch(exports, tracer) {\n    this.wrap(exports, 'routes', wrapRoutes(tracer));\n  },\n\n  unpatch(exports) {\n    this.unwrap(exports, 'routes');\n  }\n\n}];\n\nif (nodeMajor <= 12) {\n  module.exports.push({\n    name: 'paperplane',\n    versions: ['2.3.0 - 2.3.1'],\n\n    patch(paperplane, tracer, config) {\n      config = web.normalizeConfig(config);\n      this.wrap(paperplane, 'mount', wrapMount(tracer, config));\n      this.wrap(paperplane, 'routes', wrapRoutes(tracer));\n    },\n\n    unpatch(paperplane) {\n      this.unwrap(paperplane, ['mount', 'routes']);\n    }\n\n  });\n}","map":{"version":3,"sources":["/Users/danielcalderon/vinology/Vinology-client/node_modules/dd-trace/packages/datadog-plugin-paperplane/src/index.js"],"names":["web","require","traceRoute","handler","req","original","route","active","enterRoute","wrapLogger","tracer","logger","record","span","scope","correlation","dd","trace_id","context","toTraceId","span_id","toSpanId","Error","Object","assign","wrapMount","config","mount","opts","traced","res","instrument","wrapRoutes","routes","handlers","nodeMajor","Number","process","versions","node","split","mainVersionRange","module","exports","name","file","patch","_logInjection","wrap","unpatch","unwrap","normalizeConfig","push","paperplane"],"mappings":"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","sourcesContent":["'use strict'\n\nconst web = require('../../dd-trace/src/plugins/util/web')\n\nconst traceRoute = handler => req => {\n  const { original, route } = req\n\n  if (web.active(original)) {\n    web.enterRoute(original, route)\n  }\n\n  return handler(req)\n}\n\nconst wrapLogger = tracer => logger => record => {\n  const span = tracer.scope().active()\n\n  if (!span) return logger(record)\n\n  const correlation = {\n    dd: {\n      trace_id: span.context().toTraceId(),\n      span_id: span.context().toSpanId()\n    }\n  }\n\n  record = record instanceof Error\n    ? Object.assign(record, correlation)\n    : Object.assign({}, record, correlation)\n\n  return logger(record)\n}\n\nconst wrapMount = (tracer, config) => mount => opts => {\n  const handler = mount(opts)\n\n  const traced = (req, res) =>\n    web.instrument(\n      tracer, config, req, res, 'paperplane.request',\n      () => handler(req, res)\n    )\n\n  return traced\n}\n\nconst wrapRoutes = tracer => routes => handlers => {\n  const traced = {}\n\n  for (const route in handlers) {\n    traced[route] = traceRoute(handlers[route])\n  }\n\n  return routes(traced)\n}\n\nconst nodeMajor = Number(process.versions.node.split('.')[0])\nconst mainVersionRange = nodeMajor <= 12 ? ['>=2.3.2'] : nodeMajor <= 14 ? ['>=3.1.1'] : []\n\nmodule.exports = [\n  {\n    name: 'paperplane',\n    versions: mainVersionRange,\n    file: 'lib/logger.js',\n    patch (exports, tracer) {\n      if (tracer._logInjection) {\n        this.wrap(exports, 'logger', wrapLogger(tracer))\n      }\n    },\n    unpatch (exports) {\n      this.unwrap(exports, 'logger')\n    }\n  },\n  {\n    name: 'paperplane',\n    versions: mainVersionRange,\n    file: 'lib/mount.js',\n    patch (exports, tracer, config) {\n      config = web.normalizeConfig(config)\n      this.wrap(exports, 'mount', wrapMount(tracer, config))\n    },\n    unpatch (exports) {\n      this.unwrap(exports, 'mount')\n    }\n  },\n  {\n    name: 'paperplane',\n    versions: mainVersionRange,\n    file: 'lib/routes.js',\n    patch (exports, tracer) {\n      this.wrap(exports, 'routes', wrapRoutes(tracer))\n    },\n    unpatch (exports) {\n      this.unwrap(exports, 'routes')\n    }\n  }\n]\n\nif (nodeMajor <= 12) {\n  module.exports.push({\n    name: 'paperplane',\n    versions: ['2.3.0 - 2.3.1'],\n    patch (paperplane, tracer, config) {\n      config = web.normalizeConfig(config)\n      this.wrap(paperplane, 'mount', wrapMount(tracer, config))\n      this.wrap(paperplane, 'routes', wrapRoutes(tracer))\n    },\n    unpatch (paperplane) {\n      this.unwrap(paperplane, ['mount', 'routes'])\n    }\n  })\n}\n"]},"metadata":{},"sourceType":"script"}