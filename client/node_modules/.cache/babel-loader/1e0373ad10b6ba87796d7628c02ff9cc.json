{"ast":null,"code":"'use strict';\n\nfunction createWrapAcquire(tracer, config) {\n  return function wrapAcquire(acquire) {\n    return function acquireWithTrace(callback, priority) {\n      if (typeof callback === 'function') {\n        arguments[0] = tracer.scope().bind(callback);\n      }\n\n      return acquire.apply(this, arguments);\n    };\n  };\n}\n\nfunction createWrapPool(tracer, config, instrumenter) {\n  return function wrapPool(Pool) {\n    if (typeof Pool !== 'function') return Pool;\n    return function PoolWithTrace(factory) {\n      const pool = Pool.apply(this, arguments);\n\n      if (pool && typeof pool.acquire === 'function') {\n        instrumenter.wrap(pool, 'acquire', createWrapAcquire(tracer, config));\n      }\n\n      return pool;\n    };\n  };\n}\n\nmodule.exports = [{\n  name: 'generic-pool',\n  versions: ['^2.4'],\n\n  patch(genericPool, tracer, config) {\n    this.wrap(genericPool.Pool.prototype, 'acquire', createWrapAcquire(tracer, config));\n  },\n\n  unpatch(genericPool) {\n    this.unwrap(genericPool.Pool.prototype, 'acquire');\n  }\n\n}, {\n  name: 'generic-pool',\n  versions: ['2 - 2.3'],\n\n  patch(genericPool, tracer, config) {\n    this.wrap(genericPool, 'Pool', createWrapPool(tracer, config, this));\n  },\n\n  unpatch(genericPool) {\n    this.unwrap(genericPool, 'Pool');\n  }\n\n}];","map":{"version":3,"sources":["/Users/danielcalderon/vinology/Vinology-client/node_modules/dd-trace/packages/datadog-plugin-generic-pool/src/index.js"],"names":["createWrapAcquire","tracer","config","wrapAcquire","acquire","acquireWithTrace","callback","priority","arguments","scope","bind","apply","createWrapPool","instrumenter","wrapPool","Pool","PoolWithTrace","factory","pool","wrap","module","exports","name","versions","patch","genericPool","prototype","unpatch","unwrap"],"mappings":"AAAA;;AAEA,SAASA,iBAAT,CAA4BC,MAA5B,EAAoCC,MAApC,EAA4C;AAC1C,SAAO,SAASC,WAAT,CAAsBC,OAAtB,EAA+B;AACpC,WAAO,SAASC,gBAAT,CAA2BC,QAA3B,EAAqCC,QAArC,EAA+C;AACpD,UAAI,OAAOD,QAAP,KAAoB,UAAxB,EAAoC;AAClCE,QAAAA,SAAS,CAAC,CAAD,CAAT,GAAeP,MAAM,CAACQ,KAAP,GAAeC,IAAf,CAAoBJ,QAApB,CAAf;AACD;;AAED,aAAOF,OAAO,CAACO,KAAR,CAAc,IAAd,EAAoBH,SAApB,CAAP;AACD,KAND;AAOD,GARD;AASD;;AAED,SAASI,cAAT,CAAyBX,MAAzB,EAAiCC,MAAjC,EAAyCW,YAAzC,EAAuD;AACrD,SAAO,SAASC,QAAT,CAAmBC,IAAnB,EAAyB;AAC9B,QAAI,OAAOA,IAAP,KAAgB,UAApB,EAAgC,OAAOA,IAAP;AAEhC,WAAO,SAASC,aAAT,CAAwBC,OAAxB,EAAiC;AACtC,YAAMC,IAAI,GAAGH,IAAI,CAACJ,KAAL,CAAW,IAAX,EAAiBH,SAAjB,CAAb;;AAEA,UAAIU,IAAI,IAAI,OAAOA,IAAI,CAACd,OAAZ,KAAwB,UAApC,EAAgD;AAC9CS,QAAAA,YAAY,CAACM,IAAb,CAAkBD,IAAlB,EAAwB,SAAxB,EAAmClB,iBAAiB,CAACC,MAAD,EAASC,MAAT,CAApD;AACD;;AAED,aAAOgB,IAAP;AACD,KARD;AASD,GAZD;AAaD;;AAEDE,MAAM,CAACC,OAAP,GAAiB,CACf;AACEC,EAAAA,IAAI,EAAE,cADR;AAEEC,EAAAA,QAAQ,EAAE,CAAC,MAAD,CAFZ;;AAGEC,EAAAA,KAAK,CAAEC,WAAF,EAAexB,MAAf,EAAuBC,MAAvB,EAA+B;AAClC,SAAKiB,IAAL,CAAUM,WAAW,CAACV,IAAZ,CAAiBW,SAA3B,EAAsC,SAAtC,EAAiD1B,iBAAiB,CAACC,MAAD,EAASC,MAAT,CAAlE;AACD,GALH;;AAMEyB,EAAAA,OAAO,CAAEF,WAAF,EAAe;AACpB,SAAKG,MAAL,CAAYH,WAAW,CAACV,IAAZ,CAAiBW,SAA7B,EAAwC,SAAxC;AACD;;AARH,CADe,EAWf;AACEJ,EAAAA,IAAI,EAAE,cADR;AAEEC,EAAAA,QAAQ,EAAE,CAAC,SAAD,CAFZ;;AAGEC,EAAAA,KAAK,CAAEC,WAAF,EAAexB,MAAf,EAAuBC,MAAvB,EAA+B;AAClC,SAAKiB,IAAL,CAAUM,WAAV,EAAuB,MAAvB,EAA+Bb,cAAc,CAACX,MAAD,EAASC,MAAT,EAAiB,IAAjB,CAA7C;AACD,GALH;;AAMEyB,EAAAA,OAAO,CAAEF,WAAF,EAAe;AACpB,SAAKG,MAAL,CAAYH,WAAZ,EAAyB,MAAzB;AACD;;AARH,CAXe,CAAjB","sourcesContent":["'use strict'\n\nfunction createWrapAcquire (tracer, config) {\n  return function wrapAcquire (acquire) {\n    return function acquireWithTrace (callback, priority) {\n      if (typeof callback === 'function') {\n        arguments[0] = tracer.scope().bind(callback)\n      }\n\n      return acquire.apply(this, arguments)\n    }\n  }\n}\n\nfunction createWrapPool (tracer, config, instrumenter) {\n  return function wrapPool (Pool) {\n    if (typeof Pool !== 'function') return Pool\n\n    return function PoolWithTrace (factory) {\n      const pool = Pool.apply(this, arguments)\n\n      if (pool && typeof pool.acquire === 'function') {\n        instrumenter.wrap(pool, 'acquire', createWrapAcquire(tracer, config))\n      }\n\n      return pool\n    }\n  }\n}\n\nmodule.exports = [\n  {\n    name: 'generic-pool',\n    versions: ['^2.4'],\n    patch (genericPool, tracer, config) {\n      this.wrap(genericPool.Pool.prototype, 'acquire', createWrapAcquire(tracer, config))\n    },\n    unpatch (genericPool) {\n      this.unwrap(genericPool.Pool.prototype, 'acquire')\n    }\n  },\n  {\n    name: 'generic-pool',\n    versions: ['2 - 2.3'],\n    patch (genericPool, tracer, config) {\n      this.wrap(genericPool, 'Pool', createWrapPool(tracer, config, this))\n    },\n    unpatch (genericPool) {\n      this.unwrap(genericPool, 'Pool')\n    }\n  }\n]\n"]},"metadata":{},"sourceType":"script"}