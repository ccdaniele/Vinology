{"ast":null,"code":"'use strict';\n\nconst {\n  instrument\n} = require('./util');\n\nfunction createWrapCommand(tracer, config, name) {\n  return function wrapCommand(command) {\n    return function commandWithTrace(ns, ops) {\n      return instrument(command, this, arguments, this, ns, ops, tracer, config, {\n        name\n      });\n    };\n  };\n}\n\nfunction createWrapQuery(tracer, config) {\n  return function wrapQuery(query) {\n    return function queryWithTrace() {\n      const pool = this.server.s.pool;\n      const ns = this.ns;\n      const ops = this.cmd;\n      return instrument(query, this, arguments, pool, ns, ops, tracer, config);\n    };\n  };\n}\n\nfunction createWrapCursor(tracer, config, name) {\n  return function wrapCursor(cursor) {\n    return function cursorWithTrace() {\n      const pool = this.server.s.pool;\n      const ns = this.ns;\n      return instrument(cursor, this, arguments, pool, ns, {}, tracer, config, {\n        name\n      });\n    };\n  };\n}\n\nmodule.exports = [{\n  name: 'mongodb-core',\n  versions: ['2 - 3.1.9'],\n\n  patch({\n    Cursor,\n    Server\n  }, tracer, config) {\n    this.wrap(Server.prototype, 'command', createWrapCommand(tracer, config));\n    this.wrap(Server.prototype, 'insert', createWrapCommand(tracer, config, 'insert'));\n    this.wrap(Server.prototype, 'update', createWrapCommand(tracer, config, 'update'));\n    this.wrap(Server.prototype, 'remove', createWrapCommand(tracer, config, 'remove'));\n    this.wrap(Cursor.prototype, '_getmore', createWrapCursor(tracer, config, 'getMore'));\n    this.wrap(Cursor.prototype, '_find', createWrapQuery(tracer, config));\n    this.wrap(Cursor.prototype, 'kill', createWrapCursor(tracer, config, 'killCursors'));\n  },\n\n  unpatch({\n    Cursor,\n    Server\n  }) {\n    this.unwrap(Server.prototype, 'command');\n    this.unwrap(Server.prototype, 'insert');\n    this.unwrap(Server.prototype, 'update');\n    this.unwrap(Server.prototype, 'remove');\n    this.unwrap(Cursor.prototype, '_getmore');\n    this.unwrap(Cursor.prototype, '_find');\n    this.unwrap(Cursor.prototype, 'kill');\n  }\n\n}];","map":{"version":3,"sources":["/Users/danielcalderon/vinology/Vinology-client/node_modules/dd-trace/packages/datadog-plugin-mongodb-core/src/legacy.js"],"names":["instrument","require","createWrapCommand","tracer","config","name","wrapCommand","command","commandWithTrace","ns","ops","arguments","createWrapQuery","wrapQuery","query","queryWithTrace","pool","server","s","cmd","createWrapCursor","wrapCursor","cursor","cursorWithTrace","module","exports","versions","patch","Cursor","Server","wrap","prototype","unpatch","unwrap"],"mappings":"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","sourcesContent":["'use strict'\n\nconst { instrument } = require('./util')\n\nfunction createWrapCommand (tracer, config, name) {\n  return function wrapCommand (command) {\n    return function commandWithTrace (ns, ops) {\n      return instrument(command, this, arguments, this, ns, ops, tracer, config, { name })\n    }\n  }\n}\n\nfunction createWrapQuery (tracer, config) {\n  return function wrapQuery (query) {\n    return function queryWithTrace () {\n      const pool = this.server.s.pool\n      const ns = this.ns\n      const ops = this.cmd\n\n      return instrument(query, this, arguments, pool, ns, ops, tracer, config)\n    }\n  }\n}\n\nfunction createWrapCursor (tracer, config, name) {\n  return function wrapCursor (cursor) {\n    return function cursorWithTrace () {\n      const pool = this.server.s.pool\n      const ns = this.ns\n\n      return instrument(cursor, this, arguments, pool, ns, {}, tracer, config, { name })\n    }\n  }\n}\n\nmodule.exports = [\n  {\n    name: 'mongodb-core',\n    versions: ['2 - 3.1.9'],\n    patch ({ Cursor, Server }, tracer, config) {\n      this.wrap(Server.prototype, 'command', createWrapCommand(tracer, config))\n      this.wrap(Server.prototype, 'insert', createWrapCommand(tracer, config, 'insert'))\n      this.wrap(Server.prototype, 'update', createWrapCommand(tracer, config, 'update'))\n      this.wrap(Server.prototype, 'remove', createWrapCommand(tracer, config, 'remove'))\n      this.wrap(Cursor.prototype, '_getmore', createWrapCursor(tracer, config, 'getMore'))\n      this.wrap(Cursor.prototype, '_find', createWrapQuery(tracer, config))\n      this.wrap(Cursor.prototype, 'kill', createWrapCursor(tracer, config, 'killCursors'))\n    },\n    unpatch ({ Cursor, Server }) {\n      this.unwrap(Server.prototype, 'command')\n      this.unwrap(Server.prototype, 'insert')\n      this.unwrap(Server.prototype, 'update')\n      this.unwrap(Server.prototype, 'remove')\n      this.unwrap(Cursor.prototype, '_getmore')\n      this.unwrap(Cursor.prototype, '_find')\n      this.unwrap(Cursor.prototype, 'kill')\n    }\n  }\n]\n"]},"metadata":{},"sourceType":"script"}