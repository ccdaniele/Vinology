{"ast":null,"code":"'use strict';\n\nconst analyticsSampler = require('../../dd-trace/src/analytics_sampler');\n\nconst Tags = require('../../../ext/tags');\n\nconst {\n  TEXT_MAP\n} = require('../../../ext/formats');\n\nconst {\n  ERROR\n} = require('../../../ext/tags');\n\nconst kinds = require('./kinds');\n\nconst {\n  addMethodTags,\n  addMetadataTags,\n  getFilter\n} = require('./util');\n\nfunction createWrapMakeRequest(tracer, config, methodKind) {\n  const filter = getFilter(config, 'metadata');\n  return function wrapMakeRequest(makeRequest) {\n    return function makeRequestWithTrace(path) {\n      const args = ensureMetadata(this, arguments, 4);\n      return callMethod(tracer, config, this, makeRequest, args, path, args[4], methodKind, filter);\n    };\n  };\n}\n\nfunction createWrapLoadPackageDefinition(tracer, config) {\n  return function wrapLoadPackageDefinition(loadPackageDefinition) {\n    return function loadPackageDefinitionWithTrace(packageDef) {\n      const result = loadPackageDefinition.apply(this, arguments);\n      if (!result) return result;\n      wrapPackageDefinition(tracer, config, result);\n      return result;\n    };\n  };\n}\n\nfunction createWrapMakeClientConstructor(tracer, config) {\n  return function wrapMakeClientConstructor(makeClientConstructor) {\n    return function makeClientConstructorWithTrace(methods) {\n      const ServiceClient = makeClientConstructor.apply(this, arguments);\n      wrapClientConstructor(tracer, config, ServiceClient, methods);\n      return ServiceClient;\n    };\n  };\n}\n\nfunction wrapPackageDefinition(tracer, config, def) {\n  for (const name in def) {\n    if (def[name].format) continue;\n\n    if (def[name].service && def[name].prototype) {\n      wrapClientConstructor(tracer, config, def[name], def[name].service);\n    } else {\n      wrapPackageDefinition(tracer, config, def[name]);\n    }\n  }\n}\n\nfunction wrapClientConstructor(tracer, config, ServiceClient, methods) {\n  const proto = ServiceClient.prototype;\n  if (typeof methods !== 'object' || 'format' in methods) return;\n  Object.keys(methods).forEach(name => {\n    if (!methods[name]) return;\n    const originalName = methods[name].originalName;\n    const path = methods[name].path;\n    const methodKind = getMethodKind(methods[name]);\n\n    if (methods[name]) {\n      proto[name] = wrapMethod(tracer, config, proto[name], path, methodKind);\n    }\n\n    if (originalName) {\n      proto[originalName] = wrapMethod(tracer, config, proto[originalName], path, methodKind);\n    }\n  });\n}\n\nfunction wrapMethod(tracer, config, method, path, methodKind) {\n  if (typeof method !== 'function' || method._datadog_patched) {\n    return method;\n  }\n\n  const filter = getFilter(config, 'metadata');\n\n  const methodWithTrace = function methodWithTrace() {\n    const args = ensureMetadata(this, arguments, 1);\n    return callMethod(tracer, config, this, method, args, path, args[1], methodKind, filter);\n  };\n\n  Object.assign(methodWithTrace, method);\n  methodWithTrace._datadog_patched = true;\n  return methodWithTrace;\n}\n\nfunction wrapCallback(span, callback) {\n  const scope = span.tracer().scope();\n  const parent = scope.active();\n  return function (err) {\n    err && span.setTag(ERROR, err);\n\n    if (callback) {\n      return scope.bind(callback, parent).apply(this, arguments);\n    }\n  };\n}\n\nfunction wrapStream(span, call, filter) {\n  if (!call || typeof call.emit !== 'function') return;\n  const emit = call.emit;\n\n  call.emit = function (eventName, ...args) {\n    switch (eventName) {\n      case 'error':\n        span.setTag(ERROR, args[0] || 1);\n        break;\n\n      case 'status':\n        if (args[0]) {\n          span.setTag('grpc.status.code', args[0].code);\n          addMetadataTags(span, args[0].metadata, filter, 'response');\n        }\n\n        span.finish();\n        break;\n    }\n\n    return emit.apply(this, arguments);\n  };\n}\n\nfunction callMethod(tracer, config, client, method, args, path, metadata, methodKind, filter) {\n  const length = args.length;\n  const callback = args[length - 1];\n  const scope = tracer.scope();\n  const span = startSpan(tracer, config, path, methodKind);\n\n  if (metadata) {\n    addMetadataTags(span, metadata, filter, 'request');\n    inject(tracer, span, metadata);\n  }\n\n  if (methodKind === kinds.unary || methodKind === kinds.client_stream) {\n    if (typeof callback === 'function') {\n      args[length - 1] = wrapCallback(span, callback);\n    } else {\n      args[length] = wrapCallback(span);\n    }\n  }\n\n  const call = scope.bind(method, span).apply(client, args);\n  wrapStream(span, call, filter);\n  return scope.bind(call);\n}\n\nfunction startSpan(tracer, config, path, methodKind) {\n  const scope = tracer.scope();\n  const childOf = scope.active();\n  const span = tracer.startSpan('grpc.request', {\n    childOf,\n    tags: {\n      [Tags.SPAN_KIND]: 'client',\n      'span.type': 'http',\n      'resource.name': path,\n      'service.name': config.service || `${tracer._service}-grpc-client`,\n      'component': 'grpc'\n    }\n  });\n  analyticsSampler.sample(span, config.measured);\n  addMethodTags(span, path, methodKind);\n  return span;\n}\n\nfunction ensureMetadata(client, args, index) {\n  if (!client || !client._datadog) return args;\n  const meta = args[index];\n  const normalized = [];\n\n  for (let i = 0; i < index; i++) {\n    normalized.push(args[i]);\n  }\n\n  if (!meta || !meta.constructor || meta.constructor.name !== 'Metadata') {\n    normalized.push(new client._datadog.grpc.Metadata());\n  }\n\n  if (meta) {\n    normalized.push(meta);\n  }\n\n  for (let i = index + 1; i < args.length; i++) {\n    normalized.push(args[i]);\n  }\n\n  return normalized;\n}\n\nfunction inject(tracer, span, metadata) {\n  if (typeof metadata.set !== 'function') return;\n  const carrier = {};\n  tracer.inject(span, TEXT_MAP, carrier);\n\n  for (const key in carrier) {\n    metadata.set(key, carrier[key]);\n  }\n}\n\nfunction getMethodKind(definition) {\n  if (definition.requestStream) {\n    if (definition.responseStream) {\n      return kinds.bidi;\n    }\n\n    return kinds.client_stream;\n  }\n\n  if (definition.responseStream) {\n    return kinds.server_stream;\n  }\n\n  return kinds.unary;\n}\n\nfunction patch(grpc, tracer, config) {\n  if (config.client === false) return;\n  config = config.client || config;\n  const proto = grpc.Client.prototype;\n  proto._datadog = {\n    grpc\n  };\n  this.wrap(proto, 'makeBidiStreamRequest', createWrapMakeRequest(tracer, config, kinds.bidi));\n  this.wrap(proto, 'makeClientStreamRequest', createWrapMakeRequest(tracer, config, kinds.clientStream));\n  this.wrap(proto, 'makeServerStreamRequest', createWrapMakeRequest(tracer, config, kinds.serverStream));\n  this.wrap(proto, 'makeUnaryRequest', createWrapMakeRequest(tracer, config, kinds.unary));\n}\n\nfunction unpatch(grpc) {\n  const proto = grpc.Client.prototype;\n  delete proto._datadog;\n  this.unwrap(proto, 'makeBidiStreamRequest');\n  this.unwrap(proto, 'makeClientStreamRequest');\n  this.unwrap(proto, 'makeServerStreamRequest');\n  this.unwrap(proto, 'makeUnaryRequest');\n}\n\nmodule.exports = [{\n  name: 'grpc',\n  versions: ['>=1.20.2'],\n  patch,\n  unpatch\n}, {\n  name: 'grpc',\n  versions: ['>=1.20.2'],\n  file: 'src/client.js',\n\n  patch(client, tracer, config) {\n    if (config.client === false) return;\n    config = config.client || config;\n    this.wrap(client, 'makeClientConstructor', createWrapMakeClientConstructor(tracer, config));\n  },\n\n  unpatch(client) {\n    this.unwrap(client, 'makeClientConstructor');\n  }\n\n}, {\n  name: '@grpc/grpc-js',\n  versions: ['>=1.0.3'],\n  patch,\n  unpatch\n}, {\n  name: '@grpc/grpc-js',\n  versions: ['>=1.0.3'],\n  file: 'build/src/make-client.js',\n\n  patch(client, tracer, config) {\n    if (config.client === false) return;\n    config = config.client || config;\n    this.wrap(client, 'makeClientConstructor', createWrapMakeClientConstructor(tracer, config));\n    this.wrap(client, 'loadPackageDefinition', createWrapLoadPackageDefinition(tracer, config));\n  },\n\n  unpatch(client) {\n    this.unwrap(client, 'makeClientConstructor');\n    this.unwrap(client, 'loadPackageDefinition');\n  }\n\n}];","map":{"version":3,"sources":["/Users/danielcalderon/vinology/Vinology-client/node_modules/dd-trace/packages/datadog-plugin-grpc/src/client.js"],"names":["analyticsSampler","require","Tags","TEXT_MAP","ERROR","kinds","addMethodTags","addMetadataTags","getFilter","createWrapMakeRequest","tracer","config","methodKind","filter","wrapMakeRequest","makeRequest","makeRequestWithTrace","path","args","ensureMetadata","arguments","callMethod","createWrapLoadPackageDefinition","wrapLoadPackageDefinition","loadPackageDefinition","loadPackageDefinitionWithTrace","packageDef","result","apply","wrapPackageDefinition","createWrapMakeClientConstructor","wrapMakeClientConstructor","makeClientConstructor","makeClientConstructorWithTrace","methods","ServiceClient","wrapClientConstructor","def","name","format","service","prototype","proto","Object","keys","forEach","originalName","getMethodKind","wrapMethod","method","_datadog_patched","methodWithTrace","assign","wrapCallback","span","callback","scope","parent","active","err","setTag","bind","wrapStream","call","emit","eventName","code","metadata","finish","client","length","startSpan","inject","unary","client_stream","childOf","tags","SPAN_KIND","_service","sample","measured","index","_datadog","meta","normalized","i","push","constructor","grpc","Metadata","set","carrier","key","definition","requestStream","responseStream","bidi","server_stream","patch","Client","wrap","clientStream","serverStream","unpatch","unwrap","module","exports","versions","file"],"mappings":"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","sourcesContent":["'use strict'\n\nconst analyticsSampler = require('../../dd-trace/src/analytics_sampler')\nconst Tags = require('../../../ext/tags')\nconst { TEXT_MAP } = require('../../../ext/formats')\nconst { ERROR } = require('../../../ext/tags')\nconst kinds = require('./kinds')\nconst { addMethodTags, addMetadataTags, getFilter } = require('./util')\n\nfunction createWrapMakeRequest (tracer, config, methodKind) {\n  const filter = getFilter(config, 'metadata')\n\n  return function wrapMakeRequest (makeRequest) {\n    return function makeRequestWithTrace (path) {\n      const args = ensureMetadata(this, arguments, 4)\n\n      return callMethod(tracer, config, this, makeRequest, args, path, args[4], methodKind, filter)\n    }\n  }\n}\n\nfunction createWrapLoadPackageDefinition (tracer, config) {\n  return function wrapLoadPackageDefinition (loadPackageDefinition) {\n    return function loadPackageDefinitionWithTrace (packageDef) {\n      const result = loadPackageDefinition.apply(this, arguments)\n\n      if (!result) return result\n\n      wrapPackageDefinition(tracer, config, result)\n\n      return result\n    }\n  }\n}\n\nfunction createWrapMakeClientConstructor (tracer, config) {\n  return function wrapMakeClientConstructor (makeClientConstructor) {\n    return function makeClientConstructorWithTrace (methods) {\n      const ServiceClient = makeClientConstructor.apply(this, arguments)\n\n      wrapClientConstructor(tracer, config, ServiceClient, methods)\n\n      return ServiceClient\n    }\n  }\n}\n\nfunction wrapPackageDefinition (tracer, config, def) {\n  for (const name in def) {\n    if (def[name].format) continue\n    if (def[name].service && def[name].prototype) {\n      wrapClientConstructor(tracer, config, def[name], def[name].service)\n    } else {\n      wrapPackageDefinition(tracer, config, def[name])\n    }\n  }\n}\n\nfunction wrapClientConstructor (tracer, config, ServiceClient, methods) {\n  const proto = ServiceClient.prototype\n\n  if (typeof methods !== 'object' || 'format' in methods) return\n\n  Object.keys(methods)\n    .forEach(name => {\n      if (!methods[name]) return\n\n      const originalName = methods[name].originalName\n      const path = methods[name].path\n      const methodKind = getMethodKind(methods[name])\n\n      if (methods[name]) {\n        proto[name] = wrapMethod(tracer, config, proto[name], path, methodKind)\n      }\n\n      if (originalName) {\n        proto[originalName] = wrapMethod(tracer, config, proto[originalName], path, methodKind)\n      }\n    })\n}\n\nfunction wrapMethod (tracer, config, method, path, methodKind) {\n  if (typeof method !== 'function' || method._datadog_patched) {\n    return method\n  }\n\n  const filter = getFilter(config, 'metadata')\n\n  const methodWithTrace = function methodWithTrace () {\n    const args = ensureMetadata(this, arguments, 1)\n\n    return callMethod(tracer, config, this, method, args, path, args[1], methodKind, filter)\n  }\n\n  Object.assign(methodWithTrace, method)\n\n  methodWithTrace._datadog_patched = true\n\n  return methodWithTrace\n}\n\nfunction wrapCallback (span, callback) {\n  const scope = span.tracer().scope()\n  const parent = scope.active()\n\n  return function (err) {\n    err && span.setTag(ERROR, err)\n\n    if (callback) {\n      return scope.bind(callback, parent).apply(this, arguments)\n    }\n  }\n}\n\nfunction wrapStream (span, call, filter) {\n  if (!call || typeof call.emit !== 'function') return\n\n  const emit = call.emit\n\n  call.emit = function (eventName, ...args) {\n    switch (eventName) {\n      case 'error':\n        span.setTag(ERROR, args[0] || 1)\n\n        break\n      case 'status':\n        if (args[0]) {\n          span.setTag('grpc.status.code', args[0].code)\n\n          addMetadataTags(span, args[0].metadata, filter, 'response')\n        }\n\n        span.finish()\n\n        break\n    }\n\n    return emit.apply(this, arguments)\n  }\n}\n\nfunction callMethod (tracer, config, client, method, args, path, metadata, methodKind, filter) {\n  const length = args.length\n  const callback = args[length - 1]\n  const scope = tracer.scope()\n  const span = startSpan(tracer, config, path, methodKind)\n\n  if (metadata) {\n    addMetadataTags(span, metadata, filter, 'request')\n    inject(tracer, span, metadata)\n  }\n\n  if (methodKind === kinds.unary || methodKind === kinds.client_stream) {\n    if (typeof callback === 'function') {\n      args[length - 1] = wrapCallback(span, callback)\n    } else {\n      args[length] = wrapCallback(span)\n    }\n  }\n\n  const call = scope.bind(method, span).apply(client, args)\n\n  wrapStream(span, call, filter)\n\n  return scope.bind(call)\n}\n\nfunction startSpan (tracer, config, path, methodKind) {\n  const scope = tracer.scope()\n  const childOf = scope.active()\n  const span = tracer.startSpan('grpc.request', {\n    childOf,\n    tags: {\n      [Tags.SPAN_KIND]: 'client',\n      'span.type': 'http',\n      'resource.name': path,\n      'service.name': config.service || `${tracer._service}-grpc-client`,\n      'component': 'grpc'\n    }\n  })\n\n  analyticsSampler.sample(span, config.measured)\n  addMethodTags(span, path, methodKind)\n\n  return span\n}\n\nfunction ensureMetadata (client, args, index) {\n  if (!client || !client._datadog) return args\n\n  const meta = args[index]\n  const normalized = []\n\n  for (let i = 0; i < index; i++) {\n    normalized.push(args[i])\n  }\n\n  if (!meta || !meta.constructor || meta.constructor.name !== 'Metadata') {\n    normalized.push(new client._datadog.grpc.Metadata())\n  }\n\n  if (meta) {\n    normalized.push(meta)\n  }\n\n  for (let i = index + 1; i < args.length; i++) {\n    normalized.push(args[i])\n  }\n\n  return normalized\n}\n\nfunction inject (tracer, span, metadata) {\n  if (typeof metadata.set !== 'function') return\n\n  const carrier = {}\n\n  tracer.inject(span, TEXT_MAP, carrier)\n\n  for (const key in carrier) {\n    metadata.set(key, carrier[key])\n  }\n}\n\nfunction getMethodKind (definition) {\n  if (definition.requestStream) {\n    if (definition.responseStream) {\n      return kinds.bidi\n    }\n\n    return kinds.client_stream\n  }\n\n  if (definition.responseStream) {\n    return kinds.server_stream\n  }\n\n  return kinds.unary\n}\n\nfunction patch (grpc, tracer, config) {\n  if (config.client === false) return\n\n  config = config.client || config\n\n  const proto = grpc.Client.prototype\n\n  proto._datadog = { grpc }\n\n  this.wrap(proto, 'makeBidiStreamRequest', createWrapMakeRequest(tracer, config, kinds.bidi))\n  this.wrap(proto, 'makeClientStreamRequest', createWrapMakeRequest(tracer, config, kinds.clientStream))\n  this.wrap(proto, 'makeServerStreamRequest', createWrapMakeRequest(tracer, config, kinds.serverStream))\n  this.wrap(proto, 'makeUnaryRequest', createWrapMakeRequest(tracer, config, kinds.unary))\n}\n\nfunction unpatch (grpc) {\n  const proto = grpc.Client.prototype\n\n  delete proto._datadog\n\n  this.unwrap(proto, 'makeBidiStreamRequest')\n  this.unwrap(proto, 'makeClientStreamRequest')\n  this.unwrap(proto, 'makeServerStreamRequest')\n  this.unwrap(proto, 'makeUnaryRequest')\n}\n\nmodule.exports = [\n  {\n    name: 'grpc',\n    versions: ['>=1.20.2'],\n    patch,\n    unpatch\n  },\n  {\n    name: 'grpc',\n    versions: ['>=1.20.2'],\n    file: 'src/client.js',\n    patch (client, tracer, config) {\n      if (config.client === false) return\n\n      config = config.client || config\n\n      this.wrap(client, 'makeClientConstructor', createWrapMakeClientConstructor(tracer, config))\n    },\n    unpatch (client) {\n      this.unwrap(client, 'makeClientConstructor')\n    }\n  },\n  {\n    name: '@grpc/grpc-js',\n    versions: ['>=1.0.3'],\n    patch,\n    unpatch\n  },\n  {\n    name: '@grpc/grpc-js',\n    versions: ['>=1.0.3'],\n    file: 'build/src/make-client.js',\n    patch (client, tracer, config) {\n      if (config.client === false) return\n\n      config = config.client || config\n\n      this.wrap(client, 'makeClientConstructor', createWrapMakeClientConstructor(tracer, config))\n      this.wrap(client, 'loadPackageDefinition', createWrapLoadPackageDefinition(tracer, config))\n    },\n    unpatch (client) {\n      this.unwrap(client, 'makeClientConstructor')\n      this.unwrap(client, 'loadPackageDefinition')\n    }\n  }\n]\n"]},"metadata":{},"sourceType":"script"}