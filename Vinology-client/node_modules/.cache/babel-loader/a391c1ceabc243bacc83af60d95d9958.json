{"ast":null,"code":"'use strict';\n\nconst web = require('../../dd-trace/src/plugins/util/web');\n\nconst Scope = require('../../dd-trace/src/scope/base');\n\nfunction createWrapEmit(tracer, config) {\n  config = web.normalizeConfig(config);\n  return function wrapEmit(emit) {\n    return function emitWithTrace(eventName, req, res) {\n      if (eventName === 'request') {\n        return web.instrument(tracer, config, req, res, 'http.request', () => {\n          return emit.apply(this, arguments);\n        });\n      }\n\n      return emit.apply(this, arguments);\n    };\n  };\n}\n\nfunction plugin(name) {\n  return {\n    name,\n\n    patch(http, tracer, config) {\n      if (config.server === false) return;\n      this.wrap(http.Server.prototype, 'emit', createWrapEmit(tracer, config));\n\n      if (http.ServerResponse) {\n        // not present on https\n        Scope._wrapEmitter(http.ServerResponse.prototype);\n      }\n    },\n\n    unpatch(http) {\n      this.unwrap(http.Server.prototype, 'emit');\n    }\n\n  };\n}\n\nmodule.exports = [plugin('http'), plugin('https')];","map":{"version":3,"sources":["/Users/danielcalderon/vinology/Vinology-client/node_modules/dd-trace/packages/datadog-plugin-http/src/server.js"],"names":["web","require","Scope","createWrapEmit","tracer","config","normalizeConfig","wrapEmit","emit","emitWithTrace","eventName","req","res","instrument","apply","arguments","plugin","name","patch","http","server","wrap","Server","prototype","ServerResponse","_wrapEmitter","unpatch","unwrap","module","exports"],"mappings":"AAAA;;AAEA,MAAMA,GAAG,GAAGC,OAAO,CAAC,qCAAD,CAAnB;;AACA,MAAMC,KAAK,GAAGD,OAAO,CAAC,+BAAD,CAArB;;AAEA,SAASE,cAAT,CAAyBC,MAAzB,EAAiCC,MAAjC,EAAyC;AACvCA,EAAAA,MAAM,GAAGL,GAAG,CAACM,eAAJ,CAAoBD,MAApB,CAAT;AAEA,SAAO,SAASE,QAAT,CAAmBC,IAAnB,EAAyB;AAC9B,WAAO,SAASC,aAAT,CAAwBC,SAAxB,EAAmCC,GAAnC,EAAwCC,GAAxC,EAA6C;AAClD,UAAIF,SAAS,KAAK,SAAlB,EAA6B;AAC3B,eAAOV,GAAG,CAACa,UAAJ,CAAeT,MAAf,EAAuBC,MAAvB,EAA+BM,GAA/B,EAAoCC,GAApC,EAAyC,cAAzC,EAAyD,MAAM;AACpE,iBAAOJ,IAAI,CAACM,KAAL,CAAW,IAAX,EAAiBC,SAAjB,CAAP;AACD,SAFM,CAAP;AAGD;;AAED,aAAOP,IAAI,CAACM,KAAL,CAAW,IAAX,EAAiBC,SAAjB,CAAP;AACD,KARD;AASD,GAVD;AAWD;;AAED,SAASC,MAAT,CAAiBC,IAAjB,EAAuB;AACrB,SAAO;AACLA,IAAAA,IADK;;AAELC,IAAAA,KAAK,CAAEC,IAAF,EAAQf,MAAR,EAAgBC,MAAhB,EAAwB;AAC3B,UAAIA,MAAM,CAACe,MAAP,KAAkB,KAAtB,EAA6B;AAE7B,WAAKC,IAAL,CAAUF,IAAI,CAACG,MAAL,CAAYC,SAAtB,EAAiC,MAAjC,EAAyCpB,cAAc,CAACC,MAAD,EAASC,MAAT,CAAvD;;AACA,UAAIc,IAAI,CAACK,cAAT,EAAyB;AAAE;AACzBtB,QAAAA,KAAK,CAACuB,YAAN,CAAmBN,IAAI,CAACK,cAAL,CAAoBD,SAAvC;AACD;AACF,KATI;;AAULG,IAAAA,OAAO,CAAEP,IAAF,EAAQ;AACb,WAAKQ,MAAL,CAAYR,IAAI,CAACG,MAAL,CAAYC,SAAxB,EAAmC,MAAnC;AACD;;AAZI,GAAP;AAcD;;AAEDK,MAAM,CAACC,OAAP,GAAiB,CACfb,MAAM,CAAC,MAAD,CADS,EAEfA,MAAM,CAAC,OAAD,CAFS,CAAjB","sourcesContent":["'use strict'\n\nconst web = require('../../dd-trace/src/plugins/util/web')\nconst Scope = require('../../dd-trace/src/scope/base')\n\nfunction createWrapEmit (tracer, config) {\n  config = web.normalizeConfig(config)\n\n  return function wrapEmit (emit) {\n    return function emitWithTrace (eventName, req, res) {\n      if (eventName === 'request') {\n        return web.instrument(tracer, config, req, res, 'http.request', () => {\n          return emit.apply(this, arguments)\n        })\n      }\n\n      return emit.apply(this, arguments)\n    }\n  }\n}\n\nfunction plugin (name) {\n  return {\n    name,\n    patch (http, tracer, config) {\n      if (config.server === false) return\n\n      this.wrap(http.Server.prototype, 'emit', createWrapEmit(tracer, config))\n      if (http.ServerResponse) { // not present on https\n        Scope._wrapEmitter(http.ServerResponse.prototype)\n      }\n    },\n    unpatch (http) {\n      this.unwrap(http.Server.prototype, 'emit')\n    }\n  }\n}\n\nmodule.exports = [\n  plugin('http'),\n  plugin('https')\n]\n"]},"metadata":{},"sourceType":"script"}