{"ast":null,"code":"// Unless explicitly stated otherwise all files in this repository are licensed under the Apache 2.0 License.\n//\n// This product includes software developed at Datadog (https://www.datadoghq.com/). Copyright 2021 Datadog, Inc.\nconst path = require('path');\n\nconst parse = require('module-details-from-path');\n\nconst {\n  fileURLToPath\n} = require('url');\n\nconst {\n  importHooks,\n  specifiers,\n  toHook\n} = require('./lib/register');\n\nfunction addHook(hook) {\n  importHooks.push(hook);\n  toHook.forEach(([name, namespace]) => hook(name, namespace));\n}\n\nfunction removeHook(hook) {\n  const index = importHooks.indexOf(hook);\n\n  if (index > -1) {\n    importHooks.splice(index, 1);\n  }\n}\n\nfunction callHookFn(hookFn, namespace, name, baseDir) {\n  const newDefault = hookFn(namespace, name, baseDir);\n\n  if (newDefault && newDefault !== namespace) {\n    namespace.default = newDefault;\n  }\n}\n\nfunction Hook(modules, options, hookFn) {\n  if (this instanceof Hook === false) return new Hook(modules, options, hookFn);\n\n  if (typeof modules === 'function') {\n    hookFn = modules;\n    modules = null;\n    options = null;\n  } else if (typeof options === 'function') {\n    hookFn = options;\n    options = null;\n  }\n\n  const internals = options ? options.internals === true : false;\n\n  this._iitmHook = (name, namespace) => {\n    const filename = name;\n    const isBuiltin = name.startsWith('node:');\n    let baseDir;\n\n    if (isBuiltin) {\n      name = name.replace(/^node:/, '');\n    } else {\n      name = name.replace(/^file:\\/\\//, '');\n      const details = parse(name);\n\n      if (details) {\n        name = details.name;\n        baseDir = details.basedir;\n      }\n    }\n\n    if (modules) {\n      for (const moduleName of modules) {\n        if (moduleName === name) {\n          if (baseDir) {\n            if (internals) {\n              name = name + path.sep + path.relative(baseDir, fileURLToPath(filename));\n            } else {\n              if (!baseDir.endsWith(specifiers.get(filename))) continue;\n            }\n          }\n\n          callHookFn(hookFn, namespace, name, baseDir);\n        }\n      }\n    } else {\n      callHookFn(hookFn, namespace, name, baseDir);\n    }\n  };\n\n  addHook(this._iitmHook);\n}\n\nHook.prototype.unhook = function () {\n  removeHook(this._iitmHook);\n};\n\nmodule.exports = Hook;\nmodule.exports.addHook = addHook;\nmodule.exports.removeHook = removeHook;","map":{"version":3,"sources":["/Users/danielcalderon/vinology/Vinology-client/node_modules/import-in-the-middle/index.js"],"names":["path","require","parse","fileURLToPath","importHooks","specifiers","toHook","addHook","hook","push","forEach","name","namespace","removeHook","index","indexOf","splice","callHookFn","hookFn","baseDir","newDefault","default","Hook","modules","options","internals","_iitmHook","filename","isBuiltin","startsWith","replace","details","basedir","moduleName","sep","relative","endsWith","get","prototype","unhook","module","exports"],"mappings":"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","sourcesContent":["// Unless explicitly stated otherwise all files in this repository are licensed under the Apache 2.0 License.\n//\n// This product includes software developed at Datadog (https://www.datadoghq.com/). Copyright 2021 Datadog, Inc.\n\nconst path = require('path')\nconst parse = require('module-details-from-path')\nconst { fileURLToPath } = require('url')\n\nconst {\n  importHooks,\n  specifiers,\n  toHook\n} = require('./lib/register')\n\nfunction addHook(hook) {\n  importHooks.push(hook)\n  toHook.forEach(([name, namespace]) => hook(name, namespace))\n}\n\nfunction removeHook(hook) {\n  const index = importHooks.indexOf(hook)\n  if (index > -1) {\n    importHooks.splice(index, 1)\n  }\n}\n\nfunction callHookFn(hookFn, namespace, name, baseDir) {\n  const newDefault = hookFn(namespace, name, baseDir)\n  if (newDefault && newDefault !== namespace) {\n    namespace.default = newDefault\n  }\n}\n\nfunction Hook(modules, options, hookFn) {\n  if ((this instanceof Hook) === false) return new Hook(modules, options, hookFn)\n  if (typeof modules === 'function') {\n    hookFn = modules\n    modules = null\n    options = null\n  } else if (typeof options === 'function') {\n    hookFn = options\n    options = null\n  }\n  const internals = options ? options.internals === true : false\n\n  this._iitmHook = (name, namespace) => {\n    const filename = name\n    const isBuiltin = name.startsWith('node:')\n    let baseDir\n\n    if (isBuiltin) {\n      name = name.replace(/^node:/, '')\n    } else {\n      name = name.replace(/^file:\\/\\//, '')\n      const details = parse(name)\n      if (details) {\n        name = details.name\n        baseDir = details.basedir\n      }\n    }\n\n    if (modules) {\n      for (const moduleName of modules) {\n        if (moduleName === name) {\n          if (baseDir) {\n            if (internals) {\n              name = name + path.sep + path.relative(baseDir, fileURLToPath(filename))\n            } else {\n              if (!baseDir.endsWith(specifiers.get(filename))) continue\n            }\n          }\n          callHookFn(hookFn, namespace, name, baseDir)\n        }\n      }\n    } else {\n      callHookFn(hookFn, namespace, name, baseDir)\n    }\n  }\n\n  addHook(this._iitmHook)\n}\n\nHook.prototype.unhook = function () {\n  removeHook(this._iitmHook)\n}\n\nmodule.exports = Hook\nmodule.exports.addHook = addHook\nmodule.exports.removeHook = removeHook\n"]},"metadata":{},"sourceType":"script"}