{"ast":null,"code":"'use strict';\n\nconst Tags = require('../../../ext/tags');\n\nconst Kinds = require('../../../ext/kinds');\n\nconst analyticsSampler = require('../../dd-trace/src/analytics_sampler');\n\nconst tx = require('../../dd-trace/src/plugins/util/tx');\n\nfunction createWrapMakeRequest(tracer, config) {\n  return function wrapMakeRequest(makeRequest) {\n    return function makeRequestWithTrace(request) {\n      const connectionConfig = this.config;\n      const scope = tracer.scope();\n      const childOf = scope.active();\n      const queryOrProcedure = getQueryOrProcedure(request);\n\n      if (!queryOrProcedure) {\n        return makeRequest.apply(this, arguments);\n      }\n\n      const span = tracer.startSpan('tedious.request', {\n        childOf,\n        tags: {\n          [Tags.SPAN_KIND]: Kinds.CLIENT,\n          'db.type': 'mssql',\n          'span.type': 'sql',\n          'component': 'tedious',\n          'service.name': config.service || `${tracer._service}-mssql`,\n          'resource.name': queryOrProcedure\n        }\n      });\n      addConnectionTags(span, connectionConfig);\n      addDatabaseTags(span, connectionConfig);\n      analyticsSampler.sample(span, config.measured);\n      request.callback = tx.wrap(span, request.callback);\n      return scope.bind(makeRequest, span).apply(this, arguments);\n    };\n  };\n}\n\nfunction createWrapGetRowStream(tracer) {\n  return function wrapGetRowStream(getRowStream) {\n    return function getRowStreamWithTrace() {\n      const scope = tracer.scope();\n      const rowToPacketTransform = getRowStream.apply(this, arguments);\n      return scope.bind(rowToPacketTransform);\n    };\n  };\n}\n\nfunction getQueryOrProcedure(request) {\n  if (!request.parameters) return;\n  const statement = request.parametersByName.statement || request.parametersByName.stmt;\n\n  if (!statement) {\n    return request.sqlTextOrProcedure;\n  }\n\n  return statement.value;\n}\n\nfunction addConnectionTags(span, connectionConfig) {\n  span.setTag('out.host', connectionConfig.server);\n  span.setTag('out.port', connectionConfig.options.port);\n}\n\nfunction addDatabaseTags(span, connectionConfig) {\n  span.setTag('db.user', connectionConfig.userName || connectionConfig.authentication.options.userName);\n  span.setTag('db.name', connectionConfig.options.database);\n  span.setTag('db.instance', connectionConfig.options.instanceName);\n}\n\nmodule.exports = [{\n  name: 'tedious',\n  versions: ['>=1.0.0'],\n\n  patch(tedious, tracer, config) {\n    this.wrap(tedious.Connection.prototype, 'makeRequest', createWrapMakeRequest(tracer, config));\n\n    if (tedious.BulkLoad && tedious.BulkLoad.prototype.getRowStream) {\n      this.wrap(tedious.BulkLoad.prototype, 'getRowStream', createWrapGetRowStream(tracer));\n    }\n\n    tracer.scope().bind(tedious.Request.prototype);\n    tracer.scope().bind(tedious.Connection.prototype);\n  },\n\n  unpatch(tedious, tracer) {\n    this.unwrap(tedious.Connection.prototype, 'makeRequest');\n\n    if (tedious.BulkLoad) {\n      this.unwrap(tedious.BulkLoad.prototype, 'getRowStream');\n    }\n\n    tracer.scope().unbind(tedious.Request.prototype);\n    tracer.scope().unbind(tedious.Connection.prototype);\n  }\n\n}];","map":{"version":3,"sources":["/Users/danielcalderon/vinology/Vinology-client/node_modules/dd-trace/packages/datadog-plugin-tedious/src/index.js"],"names":["Tags","require","Kinds","analyticsSampler","tx","createWrapMakeRequest","tracer","config","wrapMakeRequest","makeRequest","makeRequestWithTrace","request","connectionConfig","scope","childOf","active","queryOrProcedure","getQueryOrProcedure","apply","arguments","span","startSpan","tags","SPAN_KIND","CLIENT","service","_service","addConnectionTags","addDatabaseTags","sample","measured","callback","wrap","bind","createWrapGetRowStream","wrapGetRowStream","getRowStream","getRowStreamWithTrace","rowToPacketTransform","parameters","statement","parametersByName","stmt","sqlTextOrProcedure","value","setTag","server","options","port","userName","authentication","database","instanceName","module","exports","name","versions","patch","tedious","Connection","prototype","BulkLoad","Request","unpatch","unwrap","unbind"],"mappings":"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","sourcesContent":["'use strict'\n\nconst Tags = require('../../../ext/tags')\nconst Kinds = require('../../../ext/kinds')\nconst analyticsSampler = require('../../dd-trace/src/analytics_sampler')\nconst tx = require('../../dd-trace/src/plugins/util/tx')\n\nfunction createWrapMakeRequest (tracer, config) {\n  return function wrapMakeRequest (makeRequest) {\n    return function makeRequestWithTrace (request) {\n      const connectionConfig = this.config\n      const scope = tracer.scope()\n      const childOf = scope.active()\n      const queryOrProcedure = getQueryOrProcedure(request)\n\n      if (!queryOrProcedure) {\n        return makeRequest.apply(this, arguments)\n      }\n\n      const span = tracer.startSpan('tedious.request', {\n        childOf,\n        tags: {\n          [Tags.SPAN_KIND]: Kinds.CLIENT,\n          'db.type': 'mssql',\n          'span.type': 'sql',\n          'component': 'tedious',\n          'service.name': config.service || `${tracer._service}-mssql`,\n          'resource.name': queryOrProcedure\n        }\n      })\n\n      addConnectionTags(span, connectionConfig)\n      addDatabaseTags(span, connectionConfig)\n\n      analyticsSampler.sample(span, config.measured)\n      request.callback = tx.wrap(span, request.callback)\n\n      return scope.bind(makeRequest, span).apply(this, arguments)\n    }\n  }\n}\n\nfunction createWrapGetRowStream (tracer) {\n  return function wrapGetRowStream (getRowStream) {\n    return function getRowStreamWithTrace () {\n      const scope = tracer.scope()\n\n      const rowToPacketTransform = getRowStream.apply(this, arguments)\n      return scope.bind(rowToPacketTransform)\n    }\n  }\n}\n\nfunction getQueryOrProcedure (request) {\n  if (!request.parameters) return\n\n  const statement = request.parametersByName.statement || request.parametersByName.stmt\n\n  if (!statement) {\n    return request.sqlTextOrProcedure\n  }\n\n  return statement.value\n}\n\nfunction addConnectionTags (span, connectionConfig) {\n  span.setTag('out.host', connectionConfig.server)\n  span.setTag('out.port', connectionConfig.options.port)\n}\n\nfunction addDatabaseTags (span, connectionConfig) {\n  span.setTag('db.user', connectionConfig.userName || connectionConfig.authentication.options.userName)\n  span.setTag('db.name', connectionConfig.options.database)\n  span.setTag('db.instance', connectionConfig.options.instanceName)\n}\n\nmodule.exports = [\n  {\n    name: 'tedious',\n    versions: [ '>=1.0.0' ],\n    patch (tedious, tracer, config) {\n      this.wrap(tedious.Connection.prototype, 'makeRequest', createWrapMakeRequest(tracer, config))\n\n      if (tedious.BulkLoad && tedious.BulkLoad.prototype.getRowStream) {\n        this.wrap(tedious.BulkLoad.prototype, 'getRowStream', createWrapGetRowStream(tracer))\n      }\n\n      tracer.scope().bind(tedious.Request.prototype)\n      tracer.scope().bind(tedious.Connection.prototype)\n    },\n    unpatch (tedious, tracer) {\n      this.unwrap(tedious.Connection.prototype, 'makeRequest')\n\n      if (tedious.BulkLoad) {\n        this.unwrap(tedious.BulkLoad.prototype, 'getRowStream')\n      }\n\n      tracer.scope().unbind(tedious.Request.prototype)\n      tracer.scope().unbind(tedious.Connection.prototype)\n    }\n  }\n]\n"]},"metadata":{},"sourceType":"script"}