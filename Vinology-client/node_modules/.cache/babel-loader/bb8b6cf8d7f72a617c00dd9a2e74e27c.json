{"ast":null,"code":"'use strict';\n\nconst analyticsSampler = require('../../dd-trace/src/analytics_sampler');\n\nfunction instrument(command, ctx, args, server, ns, ops, tracer, config, options = {}) {\n  const name = options.name || ops && Object.keys(ops)[0];\n  const index = args.length - 1;\n  const callback = args[index];\n  if (typeof callback !== 'function') return command.apply(ctx, args);\n  const span = startSpan(tracer, config, ns, ops, server, name);\n\n  if (name !== 'getMore' && name !== 'killCursors') {\n    analyticsSampler.sample(span, config.measured);\n  }\n\n  args[index] = wrapCallback(tracer, span, callback);\n  return tracer.scope().bind(command, span).apply(ctx, args);\n}\n\nfunction startSpan(tracer, config, ns, ops, server, name) {\n  const scope = tracer.scope();\n  const childOf = scope.active();\n  const span = tracer.startSpan('mongodb.query', {\n    childOf\n  });\n  addTags(span, tracer, config, ns, ops, server, name);\n  return span;\n}\n\nfunction wrapCallback(tracer, span, done) {\n  return tracer.scope().bind((err, res) => {\n    if (err) {\n      span.addTags({\n        'error.type': err.name,\n        'error.msg': err.message,\n        'error.stack': err.stack\n      });\n    }\n\n    span.finish();\n\n    if (done) {\n      done(err, res);\n    }\n  });\n}\n\nfunction addTags(span, tracer, config, ns, cmd, topology, operationName) {\n  const query = getQuery(cmd);\n  const resource = getResource(ns, query, operationName);\n  span.addTags({\n    'service.name': config.service || `${tracer._service}-mongodb`,\n    'resource.name': resource,\n    'span.type': 'mongodb',\n    'span.kind': 'client',\n    'db.name': ns\n  });\n\n  if (query) {\n    span.setTag('mongodb.query', query);\n  }\n\n  addHost(span, topology);\n}\n\nfunction addHost(span, topology) {\n  const options = topology && topology.s && topology.s.options;\n\n  if (options && options.host && options.port) {\n    span.addTags({\n      'out.host': topology.s.options.host,\n      'out.port': topology.s.options.port\n    });\n  }\n}\n\nfunction getQuery(cmd) {\n  if (!cmd || typeof cmd !== 'object' || Array.isArray(cmd)) return;\n  if (cmd.query) return JSON.stringify(sanitize(cmd.query));\n  if (cmd.filter) return JSON.stringify(sanitize(cmd.filter));\n}\n\nfunction getResource(ns, query, operationName) {\n  const parts = [operationName, ns];\n\n  if (query) {\n    parts.push(query);\n  }\n\n  return parts.join(' ');\n}\n\nfunction sanitize(input) {\n  const output = {};\n  if (!isObject(input) || Buffer.isBuffer(input) || isBSON(input)) return '?';\n\n  for (const key in input) {\n    if (typeof input[key] === 'function') continue;\n    output[key] = sanitize(input[key]);\n  }\n\n  return output;\n}\n\nfunction isObject(val) {\n  return typeof val === 'object' && val !== null && !(val instanceof Array);\n}\n\nfunction isBSON(val) {\n  return val && val._bsontype;\n}\n\nmodule.exports = {\n  instrument\n};","map":{"version":3,"sources":["/Users/danielcalderon/vinology/Vinology-client/node_modules/dd-trace/packages/datadog-plugin-mongodb-core/src/util.js"],"names":["analyticsSampler","require","instrument","command","ctx","args","server","ns","ops","tracer","config","options","name","Object","keys","index","length","callback","apply","span","startSpan","sample","measured","wrapCallback","scope","bind","childOf","active","addTags","done","err","res","message","stack","finish","cmd","topology","operationName","query","getQuery","resource","getResource","service","_service","setTag","addHost","s","host","port","Array","isArray","JSON","stringify","sanitize","filter","parts","push","join","input","output","isObject","Buffer","isBuffer","isBSON","key","val","_bsontype","module","exports"],"mappings":"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","sourcesContent":["'use strict'\n\nconst analyticsSampler = require('../../dd-trace/src/analytics_sampler')\n\nfunction instrument (command, ctx, args, server, ns, ops, tracer, config, options = {}) {\n  const name = options.name || (ops && Object.keys(ops)[0])\n  const index = args.length - 1\n  const callback = args[index]\n\n  if (typeof callback !== 'function') return command.apply(ctx, args)\n\n  const span = startSpan(tracer, config, ns, ops, server, name)\n\n  if (name !== 'getMore' && name !== 'killCursors') {\n    analyticsSampler.sample(span, config.measured)\n  }\n\n  args[index] = wrapCallback(tracer, span, callback)\n\n  return tracer.scope().bind(command, span).apply(ctx, args)\n}\n\nfunction startSpan (tracer, config, ns, ops, server, name) {\n  const scope = tracer.scope()\n  const childOf = scope.active()\n  const span = tracer.startSpan('mongodb.query', { childOf })\n\n  addTags(span, tracer, config, ns, ops, server, name)\n\n  return span\n}\n\nfunction wrapCallback (tracer, span, done) {\n  return tracer.scope().bind((err, res) => {\n    if (err) {\n      span.addTags({\n        'error.type': err.name,\n        'error.msg': err.message,\n        'error.stack': err.stack\n      })\n    }\n\n    span.finish()\n\n    if (done) {\n      done(err, res)\n    }\n  })\n}\n\nfunction addTags (span, tracer, config, ns, cmd, topology, operationName) {\n  const query = getQuery(cmd)\n  const resource = getResource(ns, query, operationName)\n\n  span.addTags({\n    'service.name': config.service || `${tracer._service}-mongodb`,\n    'resource.name': resource,\n    'span.type': 'mongodb',\n    'span.kind': 'client',\n    'db.name': ns\n  })\n\n  if (query) {\n    span.setTag('mongodb.query', query)\n  }\n\n  addHost(span, topology)\n}\n\nfunction addHost (span, topology) {\n  const options = topology && topology.s && topology.s.options\n\n  if (options && options.host && options.port) {\n    span.addTags({\n      'out.host': topology.s.options.host,\n      'out.port': topology.s.options.port\n    })\n  }\n}\n\nfunction getQuery (cmd) {\n  if (!cmd || typeof cmd !== 'object' || Array.isArray(cmd)) return\n  if (cmd.query) return JSON.stringify(sanitize(cmd.query))\n  if (cmd.filter) return JSON.stringify(sanitize(cmd.filter))\n}\n\nfunction getResource (ns, query, operationName) {\n  const parts = [operationName, ns]\n\n  if (query) {\n    parts.push(query)\n  }\n\n  return parts.join(' ')\n}\n\nfunction sanitize (input) {\n  const output = {}\n\n  if (!isObject(input) || Buffer.isBuffer(input) || isBSON(input)) return '?'\n\n  for (const key in input) {\n    if (typeof input[key] === 'function') continue\n\n    output[key] = sanitize(input[key])\n  }\n\n  return output\n}\n\nfunction isObject (val) {\n  return typeof val === 'object' && val !== null && !(val instanceof Array)\n}\n\nfunction isBSON (val) {\n  return val && val._bsontype\n}\n\nmodule.exports = { instrument }\n"]},"metadata":{},"sourceType":"script"}