{"ast":null,"code":"'use strict';\n\nconst Tags = require('opentracing').Tags;\n\nconst analyticsSampler = require('../../dd-trace/src/analytics_sampler');\n\nfunction createWrapAddCommand(tracer, config) {\n  return function wrapAddCommand(addCommand) {\n    return function addCommandWithTrace(cmd) {\n      const name = cmd && cmd.constructor && cmd.constructor.name;\n      const isCommand = typeof cmd.execute === 'function';\n      const isSupported = name === 'Execute' || name === 'Query';\n\n      if (isCommand && isSupported) {\n        cmd.execute = wrapExecute(tracer, config, cmd.execute);\n      }\n\n      return addCommand.apply(this, arguments);\n    };\n  };\n}\n\nfunction wrapExecute(tracer, config, execute) {\n  const scope = tracer.scope();\n  const childOf = scope.active();\n  return function executeWithTrace(packet, connection) {\n    const connectionConfig = connection && connection.config || {};\n    const sql = this.statement ? this.statement.query : this.sql;\n    const span = tracer.startSpan('mysql.query', {\n      childOf,\n      tags: {\n        [Tags.SPAN_KIND]: Tags.SPAN_KIND_RPC_CLIENT,\n        'service.name': config.service || `${tracer._service}-mysql`,\n        'resource.name': sql,\n        'span.type': 'sql',\n        'span.kind': 'client',\n        'db.type': 'mysql',\n        'db.user': connectionConfig.user,\n        'db.name': connectionConfig.database,\n        'out.host': connectionConfig.host,\n        'out.port': connectionConfig.port\n      }\n    });\n    analyticsSampler.sample(span, config.measured);\n\n    if (typeof this.onResult === 'function') {\n      this.onResult = wrapCallback(tracer, span, childOf, this.onResult);\n    } else {\n      this.on('error', error => span.addTags({\n        error\n      }));\n      this.on('end', () => span.finish());\n    }\n\n    this.execute = execute;\n    return scope.bind(execute, span).apply(this, arguments);\n  };\n}\n\nfunction wrapCallback(tracer, span, parent, done) {\n  return tracer.scope().bind((...args) => {\n    const [error] = args;\n    span.addTags({\n      error\n    });\n    span.finish();\n    done(...args);\n  }, parent);\n}\n\nmodule.exports = [{\n  name: 'mysql2',\n  file: 'lib/connection.js',\n  versions: ['>=1'],\n\n  patch(Connection, tracer, config) {\n    this.wrap(Connection.prototype, 'addCommand', createWrapAddCommand(tracer, config));\n  },\n\n  unpatch(Connection) {\n    this.unwrap(Connection.prototype, 'addCommand');\n  }\n\n}, {\n  name: 'mysql2',\n  file: 'lib/commands/command.js',\n  versions: ['>=1'],\n\n  patch(Command, tracer, config) {\n    tracer.scope().bind(Command.prototype);\n  },\n\n  unpatch(Command, tracer) {\n    tracer.scope().unbind(Command.prototype);\n  }\n\n}];","map":{"version":3,"sources":["/Users/danielcalderon/vinology/Vinology-client/node_modules/dd-trace/packages/datadog-plugin-mysql2/src/index.js"],"names":["Tags","require","analyticsSampler","createWrapAddCommand","tracer","config","wrapAddCommand","addCommand","addCommandWithTrace","cmd","name","constructor","isCommand","execute","isSupported","wrapExecute","apply","arguments","scope","childOf","active","executeWithTrace","packet","connection","connectionConfig","sql","statement","query","span","startSpan","tags","SPAN_KIND","SPAN_KIND_RPC_CLIENT","service","_service","user","database","host","port","sample","measured","onResult","wrapCallback","on","error","addTags","finish","bind","parent","done","args","module","exports","file","versions","patch","Connection","wrap","prototype","unpatch","unwrap","Command","unbind"],"mappings":"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","sourcesContent":["'use strict'\n\nconst Tags = require('opentracing').Tags\nconst analyticsSampler = require('../../dd-trace/src/analytics_sampler')\n\nfunction createWrapAddCommand (tracer, config) {\n  return function wrapAddCommand (addCommand) {\n    return function addCommandWithTrace (cmd) {\n      const name = cmd && cmd.constructor && cmd.constructor.name\n      const isCommand = typeof cmd.execute === 'function'\n      const isSupported = name === 'Execute' || name === 'Query'\n\n      if (isCommand && isSupported) {\n        cmd.execute = wrapExecute(tracer, config, cmd.execute)\n      }\n\n      return addCommand.apply(this, arguments)\n    }\n  }\n}\n\nfunction wrapExecute (tracer, config, execute) {\n  const scope = tracer.scope()\n  const childOf = scope.active()\n\n  return function executeWithTrace (packet, connection) {\n    const connectionConfig = (connection && connection.config) || {}\n    const sql = this.statement ? this.statement.query : this.sql\n    const span = tracer.startSpan('mysql.query', {\n      childOf,\n      tags: {\n        [Tags.SPAN_KIND]: Tags.SPAN_KIND_RPC_CLIENT,\n        'service.name': config.service || `${tracer._service}-mysql`,\n        'resource.name': sql,\n        'span.type': 'sql',\n        'span.kind': 'client',\n        'db.type': 'mysql',\n        'db.user': connectionConfig.user,\n        'db.name': connectionConfig.database,\n        'out.host': connectionConfig.host,\n        'out.port': connectionConfig.port\n      }\n    })\n\n    analyticsSampler.sample(span, config.measured)\n\n    if (typeof this.onResult === 'function') {\n      this.onResult = wrapCallback(tracer, span, childOf, this.onResult)\n    } else {\n      this.on('error', error => span.addTags({ error }))\n      this.on('end', () => span.finish())\n    }\n\n    this.execute = execute\n\n    return scope.bind(execute, span).apply(this, arguments)\n  }\n}\n\nfunction wrapCallback (tracer, span, parent, done) {\n  return tracer.scope().bind((...args) => {\n    const [ error ] = args\n    span.addTags({ error })\n\n    span.finish()\n\n    done(...args)\n  }, parent)\n}\n\nmodule.exports = [\n  {\n    name: 'mysql2',\n    file: 'lib/connection.js',\n    versions: ['>=1'],\n    patch (Connection, tracer, config) {\n      this.wrap(Connection.prototype, 'addCommand', createWrapAddCommand(tracer, config))\n    },\n    unpatch (Connection) {\n      this.unwrap(Connection.prototype, 'addCommand')\n    }\n  },\n  {\n    name: 'mysql2',\n    file: 'lib/commands/command.js',\n    versions: ['>=1'],\n    patch (Command, tracer, config) {\n      tracer.scope().bind(Command.prototype)\n    },\n    unpatch (Command, tracer) {\n      tracer.scope().unbind(Command.prototype)\n    }\n  }\n]\n"]},"metadata":{},"sourceType":"script"}