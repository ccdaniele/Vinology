{"ast":null,"code":"'use strict';\n\nmodule.exports = {\n  createWrapThen(tracer, config) {\n    return function wrapThen(then) {\n      return function thenWithTrace(onFulfilled, onRejected, onProgress) {\n        arguments[0] = wrapCallback(tracer, onFulfilled);\n        arguments[1] = wrapCallback(tracer, onRejected); // not standard but sometimes supported\n\n        if (onProgress) {\n          arguments[2] = wrapCallback(tracer, onProgress);\n        }\n\n        return then.apply(this, arguments);\n      };\n    };\n  }\n\n};\n\nfunction wrapCallback(tracer, callback) {\n  if (typeof callback !== 'function') return callback;\n  const span = tracer.scope().active();\n  return function () {\n    return tracer.scope().activate(span, () => {\n      return callback.apply(this, arguments);\n    });\n  };\n}","map":{"version":3,"sources":["/Users/danielcalderon/vinology/Vinology-client/node_modules/dd-trace/packages/dd-trace/src/plugins/util/promise.js"],"names":["module","exports","createWrapThen","tracer","config","wrapThen","then","thenWithTrace","onFulfilled","onRejected","onProgress","arguments","wrapCallback","apply","callback","span","scope","active","activate"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,OAAP,GAAiB;AACfC,EAAAA,cAAc,CAAEC,MAAF,EAAUC,MAAV,EAAkB;AAC9B,WAAO,SAASC,QAAT,CAAmBC,IAAnB,EAAyB;AAC9B,aAAO,SAASC,aAAT,CAAwBC,WAAxB,EAAqCC,UAArC,EAAiDC,UAAjD,EAA6D;AAClEC,QAAAA,SAAS,CAAC,CAAD,CAAT,GAAeC,YAAY,CAACT,MAAD,EAASK,WAAT,CAA3B;AACAG,QAAAA,SAAS,CAAC,CAAD,CAAT,GAAeC,YAAY,CAACT,MAAD,EAASM,UAAT,CAA3B,CAFkE,CAIlE;;AACA,YAAIC,UAAJ,EAAgB;AACdC,UAAAA,SAAS,CAAC,CAAD,CAAT,GAAeC,YAAY,CAACT,MAAD,EAASO,UAAT,CAA3B;AACD;;AAED,eAAOJ,IAAI,CAACO,KAAL,CAAW,IAAX,EAAiBF,SAAjB,CAAP;AACD,OAVD;AAWD,KAZD;AAaD;;AAfc,CAAjB;;AAkBA,SAASC,YAAT,CAAuBT,MAAvB,EAA+BW,QAA/B,EAAyC;AACvC,MAAI,OAAOA,QAAP,KAAoB,UAAxB,EAAoC,OAAOA,QAAP;AAEpC,QAAMC,IAAI,GAAGZ,MAAM,CAACa,KAAP,GAAeC,MAAf,EAAb;AAEA,SAAO,YAAY;AACjB,WAAOd,MAAM,CAACa,KAAP,GAAeE,QAAf,CAAwBH,IAAxB,EAA8B,MAAM;AACzC,aAAOD,QAAQ,CAACD,KAAT,CAAe,IAAf,EAAqBF,SAArB,CAAP;AACD,KAFM,CAAP;AAGD,GAJD;AAKD","sourcesContent":["'use strict'\n\nmodule.exports = {\n  createWrapThen (tracer, config) {\n    return function wrapThen (then) {\n      return function thenWithTrace (onFulfilled, onRejected, onProgress) {\n        arguments[0] = wrapCallback(tracer, onFulfilled)\n        arguments[1] = wrapCallback(tracer, onRejected)\n\n        // not standard but sometimes supported\n        if (onProgress) {\n          arguments[2] = wrapCallback(tracer, onProgress)\n        }\n\n        return then.apply(this, arguments)\n      }\n    }\n  }\n}\n\nfunction wrapCallback (tracer, callback) {\n  if (typeof callback !== 'function') return callback\n\n  const span = tracer.scope().active()\n\n  return function () {\n    return tracer.scope().activate(span, () => {\n      return callback.apply(this, arguments)\n    })\n  }\n}\n"]},"metadata":{},"sourceType":"script"}