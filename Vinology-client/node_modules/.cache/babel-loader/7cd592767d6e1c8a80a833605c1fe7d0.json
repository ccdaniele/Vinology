{"ast":null,"code":"'use strict';\n\nclass NativeHeapProfiler {\n  constructor(options = {}) {\n    this.type = 'space';\n    this._samplingInterval = options.samplingInterval || 512 * 1024;\n    this._stackDepth = options.stackDepth || 64;\n    this._pprof = undefined;\n  }\n\n  start() {\n    this._pprof = require('@datadog/pprof');\n\n    this._pprof.heap.start(this._samplingInterval, this._stackDepth);\n  }\n\n  profile() {\n    return this._pprof.heap.profile();\n  }\n\n  encode(profile) {\n    return this._pprof.encode(profile);\n  }\n\n  stop() {\n    this._pprof.heap.stop();\n  }\n\n}\n\nmodule.exports = NativeHeapProfiler;","map":{"version":3,"sources":["/Users/danielcalderon/vinology/Vinology-client/node_modules/dd-trace/packages/dd-trace/src/profiling/profilers/heap.js"],"names":["NativeHeapProfiler","constructor","options","type","_samplingInterval","samplingInterval","_stackDepth","stackDepth","_pprof","undefined","start","require","heap","profile","encode","stop","module","exports"],"mappings":"AAAA;;AAEA,MAAMA,kBAAN,CAAyB;AACvBC,EAAAA,WAAW,CAAEC,OAAO,GAAG,EAAZ,EAAgB;AACzB,SAAKC,IAAL,GAAY,OAAZ;AACA,SAAKC,iBAAL,GAAyBF,OAAO,CAACG,gBAAR,IAA4B,MAAM,IAA3D;AACA,SAAKC,WAAL,GAAmBJ,OAAO,CAACK,UAAR,IAAsB,EAAzC;AACA,SAAKC,MAAL,GAAcC,SAAd;AACD;;AAEDC,EAAAA,KAAK,GAAI;AACP,SAAKF,MAAL,GAAcG,OAAO,CAAC,gBAAD,CAArB;;AACA,SAAKH,MAAL,CAAYI,IAAZ,CAAiBF,KAAjB,CAAuB,KAAKN,iBAA5B,EAA+C,KAAKE,WAApD;AACD;;AAEDO,EAAAA,OAAO,GAAI;AACT,WAAO,KAAKL,MAAL,CAAYI,IAAZ,CAAiBC,OAAjB,EAAP;AACD;;AAEDC,EAAAA,MAAM,CAAED,OAAF,EAAW;AACf,WAAO,KAAKL,MAAL,CAAYM,MAAZ,CAAmBD,OAAnB,CAAP;AACD;;AAEDE,EAAAA,IAAI,GAAI;AACN,SAAKP,MAAL,CAAYI,IAAZ,CAAiBG,IAAjB;AACD;;AAvBsB;;AA0BzBC,MAAM,CAACC,OAAP,GAAiBjB,kBAAjB","sourcesContent":["'use strict'\n\nclass NativeHeapProfiler {\n  constructor (options = {}) {\n    this.type = 'space'\n    this._samplingInterval = options.samplingInterval || 512 * 1024\n    this._stackDepth = options.stackDepth || 64\n    this._pprof = undefined\n  }\n\n  start () {\n    this._pprof = require('@datadog/pprof')\n    this._pprof.heap.start(this._samplingInterval, this._stackDepth)\n  }\n\n  profile () {\n    return this._pprof.heap.profile()\n  }\n\n  encode (profile) {\n    return this._pprof.encode(profile)\n  }\n\n  stop () {\n    this._pprof.heap.stop()\n  }\n}\n\nmodule.exports = NativeHeapProfiler\n"]},"metadata":{},"sourceType":"script"}