{"ast":null,"code":"'use strict';\n\nconst tx = require('../../dd-trace/src/plugins/util/redis');\n\nfunction createWrapInternalSendCommand(tracer, config) {\n  return function wrapInternalSendCommand(internalSendCommand) {\n    return function internalSendCommandWithTrace(options) {\n      if (!config.filter(options.command)) return internalSendCommand.apply(this, arguments);\n      const scope = tracer.scope();\n      const span = startSpan(tracer, config, this, options.command, options.args);\n      options.callback = scope.bind(tx.wrap(span, options.callback));\n      return scope.bind(internalSendCommand, span).apply(this, arguments);\n    };\n  };\n}\n\nfunction createWrapSendCommand(tracer, config) {\n  return function wrapSendCommand(sendCommand) {\n    return function sendCommandWithTrace(command, args, callback) {\n      if (!config.filter(command)) return sendCommand.apply(this, arguments);\n      const scope = tracer.scope();\n      const span = startSpan(tracer, config, this, command, args);\n\n      if (typeof callback === 'function') {\n        arguments[2] = scope.bind(tx.wrap(span, callback));\n      } else if (Array.isArray(args) && typeof args[args.length - 1] === 'function') {\n        args[args.length - 1] = scope.bind(tx.wrap(span, args[args.length - 1]));\n      } else {\n        arguments[2] = tx.wrap(span);\n      }\n\n      return scope.bind(sendCommand, span).apply(this, arguments);\n    };\n  };\n}\n\nfunction startSpan(tracer, config, client, command, args) {\n  const db = client.selected_db;\n  const connectionOptions = client.connection_options || client.connection_option || client.connectionOption || {};\n  const span = tx.instrument(tracer, config, db, command, args);\n  tx.setHost(span, connectionOptions.host, connectionOptions.port);\n  return span;\n}\n\nmodule.exports = [{\n  name: 'redis',\n  versions: ['>=2.6'],\n\n  patch(redis, tracer, config) {\n    config = tx.normalizeConfig(config);\n    this.wrap(redis.RedisClient.prototype, 'internal_send_command', createWrapInternalSendCommand(tracer, config));\n  },\n\n  unpatch(redis) {\n    this.unwrap(redis.RedisClient.prototype, 'internal_send_command');\n  }\n\n}, {\n  name: 'redis',\n  versions: ['>=0.12 <2.6'],\n\n  patch(redis, tracer, config) {\n    config = tx.normalizeConfig(config);\n    this.wrap(redis.RedisClient.prototype, 'send_command', createWrapSendCommand(tracer, config));\n  },\n\n  unpatch(redis) {\n    this.unwrap(redis.RedisClient.prototype, 'send_command');\n  }\n\n}];","map":{"version":3,"sources":["/Users/danielcalderon/vinology/Vinology-client/node_modules/dd-trace/packages/datadog-plugin-redis/src/index.js"],"names":["tx","require","createWrapInternalSendCommand","tracer","config","wrapInternalSendCommand","internalSendCommand","internalSendCommandWithTrace","options","filter","command","apply","arguments","scope","span","startSpan","args","callback","bind","wrap","createWrapSendCommand","wrapSendCommand","sendCommand","sendCommandWithTrace","Array","isArray","length","client","db","selected_db","connectionOptions","connection_options","connection_option","connectionOption","instrument","setHost","host","port","module","exports","name","versions","patch","redis","normalizeConfig","RedisClient","prototype","unpatch","unwrap"],"mappings":"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","sourcesContent":["'use strict'\n\nconst tx = require('../../dd-trace/src/plugins/util/redis')\n\nfunction createWrapInternalSendCommand (tracer, config) {\n  return function wrapInternalSendCommand (internalSendCommand) {\n    return function internalSendCommandWithTrace (options) {\n      if (!config.filter(options.command)) return internalSendCommand.apply(this, arguments)\n\n      const scope = tracer.scope()\n      const span = startSpan(tracer, config, this, options.command, options.args)\n\n      options.callback = scope.bind(tx.wrap(span, options.callback))\n\n      return scope.bind(internalSendCommand, span).apply(this, arguments)\n    }\n  }\n}\n\nfunction createWrapSendCommand (tracer, config) {\n  return function wrapSendCommand (sendCommand) {\n    return function sendCommandWithTrace (command, args, callback) {\n      if (!config.filter(command)) return sendCommand.apply(this, arguments)\n\n      const scope = tracer.scope()\n      const span = startSpan(tracer, config, this, command, args)\n\n      if (typeof callback === 'function') {\n        arguments[2] = scope.bind(tx.wrap(span, callback))\n      } else if (Array.isArray(args) && typeof args[args.length - 1] === 'function') {\n        args[args.length - 1] = scope.bind(tx.wrap(span, args[args.length - 1]))\n      } else {\n        arguments[2] = tx.wrap(span)\n      }\n\n      return scope.bind(sendCommand, span).apply(this, arguments)\n    }\n  }\n}\n\nfunction startSpan (tracer, config, client, command, args) {\n  const db = client.selected_db\n  const connectionOptions = client.connection_options || client.connection_option || client.connectionOption || {}\n  const span = tx.instrument(tracer, config, db, command, args)\n\n  tx.setHost(span, connectionOptions.host, connectionOptions.port)\n\n  return span\n}\n\nmodule.exports = [\n  {\n    name: 'redis',\n    versions: ['>=2.6'],\n    patch (redis, tracer, config) {\n      config = tx.normalizeConfig(config)\n      this.wrap(redis.RedisClient.prototype, 'internal_send_command', createWrapInternalSendCommand(tracer, config))\n    },\n    unpatch (redis) {\n      this.unwrap(redis.RedisClient.prototype, 'internal_send_command')\n    }\n  },\n  {\n    name: 'redis',\n    versions: ['>=0.12 <2.6'],\n    patch (redis, tracer, config) {\n      config = tx.normalizeConfig(config)\n      this.wrap(redis.RedisClient.prototype, 'send_command', createWrapSendCommand(tracer, config))\n    },\n    unpatch (redis) {\n      this.unwrap(redis.RedisClient.prototype, 'send_command')\n    }\n  }\n]\n"]},"metadata":{},"sourceType":"script"}