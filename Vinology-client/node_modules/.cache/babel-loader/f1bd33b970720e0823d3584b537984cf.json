{"ast":null,"code":"var events = require('events');\n\nvar dgram = require('dgram');\n\nvar util = require('util');\n\nvar binding = require('bindings')('unix_dgram.node');\n\nvar SOCK_DGRAM = binding.SOCK_DGRAM;\nvar AF_UNIX = binding.AF_UNIX;\nvar socket = binding.socket || unsupported;\nvar bind = binding.bind || unsupported;\nvar connect = binding.connect || unsupported;\nvar sendto = binding.sendto || unsupported;\nvar send = binding.send || unsupported;\nvar close = binding.close || unsupported;\n\nfunction unsupported() {\n  throw new Error('Unix datagrams not available on this platform');\n}\n\nfunction errnoException(errorno, syscall) {\n  var e = new Error(syscall + ' ' + errorno);\n  e.errno = e.code = errorno;\n  e.syscall = syscall;\n  return e;\n}\n\nfunction internalError(code, msg) {\n  var e = new Error(msg);\n  e.code = code;\n  return e;\n}\n\nfunction recv(status, buf, path) {\n  var rinfo = {\n    size: buf.length,\n    address: {},\n    path: path\n  };\n  this.emit('message', buf, rinfo);\n}\n\nfunction writable() {\n  this.emit('writable');\n}\n\nexports.createSocket = function (type, listener) {\n  if (type == 'udp4' || type == 'udp6') return dgram.createSocket(type, listener);\n  return new Socket(type, listener);\n};\n\nfunction Socket(type, listener) {\n  if (type != 'unix_dgram') throw new Error('Unsupported socket type: ' + type);\n  var err = socket(AF_UNIX, SOCK_DGRAM, 0, recv.bind(this), writable.bind(this));\n  if (err < 0) throw errnoException(err, 'socket');\n  this.fd = err;\n  this.type = type;\n  if (typeof listener === 'function') this.on('message', listener);\n}\n\nutil.inherits(Socket, events.EventEmitter);\n\nSocket.prototype.bind = function (path) {\n  var err = bind(this.fd, path);\n  if (err < 0) this.emit('error', errnoException(err, 'bind'));else this.emit('listening');\n};\n\nSocket.prototype.connect = function (path) {\n  var err = connect(this.fd, path);\n\n  if (err < 0) {\n    this.emit('error', errnoException(err, 'connect'));\n  } else {\n    this.connected = true;\n    this.emit('connect');\n  }\n};\n\nSocket.prototype.send = function (buf, offset, length, path, callback) {\n  var err;\n\n  if (this.connected) {\n    err = send(this.fd, buf);\n    callback = offset;\n  } else {\n    err = sendto(this.fd, buf, offset, length, path);\n  } // FIXME defer error and callback to next tick?\n\n\n  if (typeof callback === 'function') {\n    if (err < 0) {\n      callback(errnoException(err, 'send'));\n    } else if (err === 1) {\n      callback(internalError(err, 'congestion'));\n    } else {\n      callback();\n    }\n  } else {\n    if (err < 0) {\n      this.emit('error', errnoException(err, 'send'));\n    } else if (err === 1) {\n      this.emit('congestion', buf);\n    }\n  }\n}; // compatibility\n\n\nSocket.prototype.sendto = function (buf, offset, length, path, callback) {\n  return this.send(buf, offset, length, path, callback);\n};\n\nSocket.prototype.close = function () {\n  var err = close(this.fd);\n  if (err < 0) throw new errnoException(err, 'close');\n  this.fd = -1;\n};\n\nSocket.prototype.address = function () {\n  throw new Error('not implemented');\n};\n\nSocket.prototype.setTTL = function (ttl) {\n  throw new Error('not implemented');\n};\n\nSocket.prototype.setBroadcast = function (flag) {\n  throw new Error('not implemented');\n};\n\nSocket.prototype.setMulticastTTL = function (ttl) {\n  throw new Error('not implemented');\n};\n\nSocket.prototype.setMulticastLoopback = function (flag) {\n  throw new Error('not implemented');\n};\n\nSocket.prototype.addMembership = function (multicastAddress, multicastInterface) {\n  throw new Error('not implemented');\n};\n\nSocket.prototype.dropMembership = function (multicastAddress, multicastInterface) {\n  throw new Error('not implemented');\n};","map":{"version":3,"sources":["/Users/danielcalderon/vinology/Vinology-client/node_modules/unix-dgram/lib/unix_dgram.js"],"names":["events","require","dgram","util","binding","SOCK_DGRAM","AF_UNIX","socket","unsupported","bind","connect","sendto","send","close","Error","errnoException","errorno","syscall","e","errno","code","internalError","msg","recv","status","buf","path","rinfo","size","length","address","emit","writable","exports","createSocket","type","listener","Socket","err","fd","on","inherits","EventEmitter","prototype","connected","offset","callback","setTTL","ttl","setBroadcast","flag","setMulticastTTL","setMulticastLoopback","addMembership","multicastAddress","multicastInterface","dropMembership"],"mappings":"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","sourcesContent":["var events = require('events');\nvar dgram = require('dgram');\nvar util = require('util');\nvar binding = require('bindings')('unix_dgram.node');\n\nvar SOCK_DGRAM  = binding.SOCK_DGRAM;\nvar AF_UNIX     = binding.AF_UNIX;\n\nvar socket  = binding.socket || unsupported;\nvar bind    = binding.bind || unsupported;\nvar connect = binding.connect || unsupported;\nvar sendto  = binding.sendto || unsupported;\nvar send    = binding.send || unsupported;\nvar close   = binding.close || unsupported;\n\n\nfunction unsupported() {\n  throw new Error('Unix datagrams not available on this platform');\n}\n\n\nfunction errnoException(errorno, syscall) {\n  var e = new Error(syscall + ' ' + errorno);\n  e.errno = e.code = errorno;\n  e.syscall = syscall;\n  return e;\n}\n\n\nfunction internalError(code, msg) {\n  var e = new Error(msg);\n  e.code = code;\n  return e;\n}\n\n\nfunction recv(status, buf, path) {\n  var rinfo = {\n    size: buf.length,\n    address: {},\n    path : path\n  };\n  this.emit('message', buf, rinfo);\n}\n\n\nfunction writable() {\n  this.emit('writable');\n}\n\nexports.createSocket = function(type, listener) {\n  if (type == 'udp4' || type == 'udp6')\n    return dgram.createSocket(type, listener);\n\n  return new Socket(type, listener);\n};\n\n\nfunction Socket(type, listener) {\n  if (type != 'unix_dgram')\n    throw new Error('Unsupported socket type: ' + type);\n\n  var err = socket(AF_UNIX, SOCK_DGRAM, 0, recv.bind(this), writable.bind(this));\n  if (err < 0)\n    throw errnoException(err, 'socket');\n\n  this.fd = err;\n  this.type = type;\n\n  if (typeof listener === 'function')\n    this.on('message', listener);\n}\nutil.inherits(Socket, events.EventEmitter);\n\n\nSocket.prototype.bind = function(path) {\n  var err = bind(this.fd, path);\n  if (err < 0)\n    this.emit('error', errnoException(err, 'bind'));\n  else\n    this.emit('listening');\n};\n\nSocket.prototype.connect = function(path) {\n  var err = connect(this.fd, path);\n  if (err < 0) {\n    this.emit('error', errnoException(err, 'connect'));\n  } else {\n    this.connected = true;\n    this.emit('connect');\n  }\n};\n\nSocket.prototype.send = function(buf, offset, length, path, callback) {\n  var err;\n  if (this.connected) {\n    err = send(this.fd, buf);\n    callback = offset;\n  } else {\n    err = sendto(this.fd, buf, offset, length, path);\n  }\n\n  // FIXME defer error and callback to next tick?\n  if (typeof callback === 'function') {\n    if (err < 0) {\n      callback(errnoException(err, 'send'));\n    } else if (err === 1) {\n      callback(internalError(err, 'congestion'));\n    } else {\n      callback();\n    }\n  } else {\n    if (err < 0) {\n      this.emit('error', errnoException(err, 'send'));\n    } else if (err === 1) {\n      this.emit('congestion', buf);\n    }\n  }\n};\n\n\n// compatibility\nSocket.prototype.sendto = function(buf, offset, length, path, callback) {\n  return this.send(buf, offset, length, path, callback);\n};\n\n\nSocket.prototype.close = function() {\n  var err = close(this.fd);\n  if (err < 0)\n    throw new errnoException(err, 'close');\n  this.fd = -1;\n};\n\n\nSocket.prototype.address = function() {\n  throw new Error('not implemented');\n};\n\n\nSocket.prototype.setTTL = function(ttl) {\n  throw new Error('not implemented');\n};\n\n\nSocket.prototype.setBroadcast = function(flag) {\n  throw new Error('not implemented');\n};\n\n\nSocket.prototype.setMulticastTTL = function(ttl) {\n  throw new Error('not implemented');\n};\n\n\nSocket.prototype.setMulticastLoopback = function(flag) {\n  throw new Error('not implemented');\n};\n\n\nSocket.prototype.addMembership = function(multicastAddress, multicastInterface) {\n  throw new Error('not implemented');\n};\n\n\nSocket.prototype.dropMembership = function(multicastAddress, multicastInterface) {\n  throw new Error('not implemented');\n};\n"]},"metadata":{},"sourceType":"script"}