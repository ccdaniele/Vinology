{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.heap = exports.time = exports.SourceMapper = exports.encodeSync = exports.encode = void 0;\n/**\n * Copyright 2019 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst fs_1 = require(\"fs\");\n\nconst heapProfiler = require(\"./heap-profiler\");\n\nconst profile_encoder_1 = require(\"./profile-encoder\");\n\nconst timeProfiler = require(\"./time-profiler\");\n\nvar profile_encoder_2 = require(\"./profile-encoder\");\n\nObject.defineProperty(exports, \"encode\", {\n  enumerable: true,\n  get: function () {\n    return profile_encoder_2.encode;\n  }\n});\nObject.defineProperty(exports, \"encodeSync\", {\n  enumerable: true,\n  get: function () {\n    return profile_encoder_2.encodeSync;\n  }\n});\n\nvar sourcemapper_1 = require(\"./sourcemapper/sourcemapper\");\n\nObject.defineProperty(exports, \"SourceMapper\", {\n  enumerable: true,\n  get: function () {\n    return sourcemapper_1.SourceMapper;\n  }\n});\nexports.time = {\n  profile: timeProfiler.profile,\n  start: timeProfiler.start\n};\nexports.heap = {\n  start: heapProfiler.start,\n  stop: heapProfiler.stop,\n  profile: heapProfiler.profile,\n  v8Profile: heapProfiler.v8Profile\n}; // If loaded with --require, start profiling.\n\nif (module.parent && module.parent.id === 'internal/preload') {\n  const stop = exports.time.start();\n  process.on('exit', () => {\n    // The process is going to terminate imminently. All work here needs to\n    // be synchronous.\n    const profile = stop();\n    const buffer = profile_encoder_1.encodeSync(profile);\n    fs_1.writeFileSync(`pprof-profile-${process.pid}.pb.gz`, buffer);\n  });\n}","map":{"version":3,"sources":["../../ts/src/index.ts"],"names":[],"mappings":";;;;;;AAAA;;;;;;;;;;;;;;AAcG;;AACH,MAAA,IAAA,GAAA,OAAA,CAAA,IAAA,CAAA;;AAEA,MAAA,YAAA,GAAA,OAAA,CAAA,iBAAA,CAAA;;AACA,MAAA,iBAAA,GAAA,OAAA,CAAA,mBAAA,CAAA;;AACA,MAAA,YAAA,GAAA,OAAA,CAAA,iBAAA,CAAA;;AAGA,IAAA,iBAAA,GAAA,OAAA,CAAA,mBAAA,CAAA;;AAAQ,MAAA,CAAA,cAAA,CAAA,OAAA,EAAA,QAAA,EAAA;AAAA,EAAA,UAAA,EAAA,IAAA;AAAA,EAAA,GAAA,EAAA,YAAA;AAAA,WAAA,iBAAA,CAAA,MAAA;AAAM;AAAN,CAAA;AAAQ,MAAA,CAAA,cAAA,CAAA,OAAA,EAAA,YAAA,EAAA;AAAA,EAAA,UAAA,EAAA,IAAA;AAAA,EAAA,GAAA,EAAA,YAAA;AAAA,WAAA,iBAAA,CAAA,UAAA;AAAU;AAAV,CAAA;;AAChB,IAAA,cAAA,GAAA,OAAA,CAAA,6BAAA,CAAA;;AAAQ,MAAA,CAAA,cAAA,CAAA,OAAA,EAAA,cAAA,EAAA;AAAA,EAAA,UAAA,EAAA,IAAA;AAAA,EAAA,GAAA,EAAA,YAAA;AAAA,WAAA,cAAA,CAAA,YAAA;AAAY;AAAZ,CAAA;AAEK,OAAA,CAAA,IAAA,GAAO;AAClB,EAAA,OAAO,EAAE,YAAY,CAAC,OADJ;AAElB,EAAA,KAAK,EAAE,YAAY,CAAC;AAFF,CAAP;AAKA,OAAA,CAAA,IAAA,GAAO;AAClB,EAAA,KAAK,EAAE,YAAY,CAAC,KADF;AAElB,EAAA,IAAI,EAAE,YAAY,CAAC,IAFD;AAGlB,EAAA,OAAO,EAAE,YAAY,CAAC,OAHJ;AAIlB,EAAA,SAAS,EAAE,YAAY,CAAC;AAJN,CAAP,C,CAOb;;AACA,IAAI,MAAM,CAAC,MAAP,IAAiB,MAAM,CAAC,MAAP,CAAc,EAAd,KAAqB,kBAA1C,EAA8D;AAC5D,QAAM,IAAI,GAAG,OAAA,CAAA,IAAA,CAAK,KAAL,EAAb;AACA,EAAA,OAAO,CAAC,EAAR,CAAW,MAAX,EAAmB,MAAK;AACtB;AACA;AACA,UAAM,OAAO,GAAG,IAAI,EAApB;AACA,UAAM,MAAM,GAAG,iBAAA,CAAA,UAAA,CAAW,OAAX,CAAf;AACA,IAAA,IAAA,CAAA,aAAA,CAAc,iBAAiB,OAAO,CAAC,GAAG,QAA1C,EAAoD,MAApD;AACD,GAND;AAOD","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.heap = exports.time = exports.SourceMapper = exports.encodeSync = exports.encode = void 0;\n/**\n * Copyright 2019 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst fs_1 = require(\"fs\");\nconst heapProfiler = require(\"./heap-profiler\");\nconst profile_encoder_1 = require(\"./profile-encoder\");\nconst timeProfiler = require(\"./time-profiler\");\nvar profile_encoder_2 = require(\"./profile-encoder\");\nObject.defineProperty(exports, \"encode\", { enumerable: true, get: function () { return profile_encoder_2.encode; } });\nObject.defineProperty(exports, \"encodeSync\", { enumerable: true, get: function () { return profile_encoder_2.encodeSync; } });\nvar sourcemapper_1 = require(\"./sourcemapper/sourcemapper\");\nObject.defineProperty(exports, \"SourceMapper\", { enumerable: true, get: function () { return sourcemapper_1.SourceMapper; } });\nexports.time = {\n    profile: timeProfiler.profile,\n    start: timeProfiler.start,\n};\nexports.heap = {\n    start: heapProfiler.start,\n    stop: heapProfiler.stop,\n    profile: heapProfiler.profile,\n    v8Profile: heapProfiler.v8Profile,\n};\n// If loaded with --require, start profiling.\nif (module.parent && module.parent.id === 'internal/preload') {\n    const stop = exports.time.start();\n    process.on('exit', () => {\n        // The process is going to terminate imminently. All work here needs to\n        // be synchronous.\n        const profile = stop();\n        const buffer = profile_encoder_1.encodeSync(profile);\n        fs_1.writeFileSync(`pprof-profile-${process.pid}.pb.gz`, buffer);\n    });\n}\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"script"}