{"ast":null,"code":"'use strict';\n\nconst NoopSpan = require('./noop/span');\n\nconst _default = {\n  debug: msg => console.debug(msg),\n\n  /* eslint-disable-line no-console */\n  info: msg => console.info(msg),\n\n  /* eslint-disable-line no-console */\n  warn: msg => console.warn(msg),\n\n  /* eslint-disable-line no-console */\n  error: msg => console.error(msg)\n  /* eslint-disable-line no-console */\n\n}; // based on: https://github.com/trentm/node-bunyan#levels\n\nconst _logLevels = {\n  'debug': 20,\n  'info': 30,\n  'warn': 40,\n  'error': 50\n};\nconst _defaultLogLevel = 'debug';\n\nconst _checkLogLevel = logLevel => {\n  if (logLevel && typeof logLevel === 'string') {\n    return _logLevels[logLevel.toLowerCase().trim()] || _logLevels[_defaultLogLevel];\n  }\n\n  return _logLevels[_defaultLogLevel];\n};\n\nconst memoize = func => {\n  const cache = {};\n\n  const memoized = function (key) {\n    if (!cache[key]) {\n      cache[key] = func.apply(this, arguments);\n    }\n\n    return cache[key];\n  };\n\n  return memoized;\n};\n\nfunction processMsg(msg) {\n  return typeof msg === 'function' ? msg() : msg;\n}\n\nfunction withNoop(fn) {\n  if (!log._tracer) {\n    fn();\n  } else {\n    log._tracer.scope().activate(log._noopSpan(), fn);\n  }\n}\n\nconst log = {\n  _isLogLevelEnabled(level) {\n    return _logLevels[level] >= this._logLevel;\n  },\n\n  use(logger) {\n    if (logger && logger.debug instanceof Function && logger.error instanceof Function) {\n      this._logger = logger;\n    }\n\n    return this;\n  },\n\n  toggle(enabled, logLevel, tracer) {\n    this._enabled = enabled;\n    this._logLevel = _checkLogLevel(logLevel);\n    this._tracer = tracer;\n    return this;\n  },\n\n  _noopSpan() {\n    if (!this.__noopSpan) {\n      this.__noopSpan = new NoopSpan(this._tracer);\n    }\n\n    return this.__noopSpan;\n  },\n\n  reset() {\n    this._logger = _default;\n    this._enabled = false;\n    delete this._tracer;\n    delete this.__noopSpan;\n    this._deprecate = memoize((code, message) => {\n      withNoop(() => this._logger.error(message));\n      return this;\n    });\n    this._logLevel = _checkLogLevel();\n    return this;\n  },\n\n  debug(message) {\n    if (this._enabled && this._isLogLevelEnabled('debug')) {\n      withNoop(() => this._logger.debug(processMsg(message)));\n    }\n\n    return this;\n  },\n\n  info(message) {\n    if (!this._logger.info) return this.debug(message);\n\n    if (this._enabled && this._isLogLevelEnabled('info')) {\n      withNoop(() => this._logger.info(processMsg(message)));\n    }\n\n    return this;\n  },\n\n  warn(message) {\n    if (!this._logger.warn) return this.debug(message);\n\n    if (this._enabled && this._isLogLevelEnabled('warn')) {\n      withNoop(() => this._logger.warn(processMsg(message)));\n    }\n\n    return this;\n  },\n\n  error(err) {\n    if (this._enabled && this._isLogLevelEnabled('error')) {\n      if (err instanceof Function) {\n        err = err();\n      }\n\n      if (typeof err !== 'object' || !err) {\n        err = String(err);\n      } else if (!err.stack) {\n        err = String(err.message || err);\n      }\n\n      if (typeof err === 'string') {\n        err = new Error(err);\n      }\n\n      withNoop(() => this._logger.error(err));\n    }\n\n    return this;\n  },\n\n  deprecate(code, message) {\n    return this._deprecate(code, message);\n  }\n\n};\nlog.reset();\nmodule.exports = log;","map":{"version":3,"sources":["/Users/danielcalderon/vinology/Vinology-client/node_modules/dd-trace/packages/dd-trace/src/log.js"],"names":["NoopSpan","require","_default","debug","msg","console","info","warn","error","_logLevels","_defaultLogLevel","_checkLogLevel","logLevel","toLowerCase","trim","memoize","func","cache","memoized","key","apply","arguments","processMsg","withNoop","fn","log","_tracer","scope","activate","_noopSpan","_isLogLevelEnabled","level","_logLevel","use","logger","Function","_logger","toggle","enabled","tracer","_enabled","__noopSpan","reset","_deprecate","code","message","err","String","stack","Error","deprecate","module","exports"],"mappings":"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","sourcesContent":["'use strict'\n\nconst NoopSpan = require('./noop/span')\n\nconst _default = {\n  debug: msg => console.debug(msg), /* eslint-disable-line no-console */\n  info: msg => console.info(msg), /* eslint-disable-line no-console */\n  warn: msg => console.warn(msg), /* eslint-disable-line no-console */\n  error: msg => console.error(msg) /* eslint-disable-line no-console */\n}\n\n// based on: https://github.com/trentm/node-bunyan#levels\nconst _logLevels = {\n  'debug': 20,\n  'info': 30,\n  'warn': 40,\n  'error': 50\n}\n\nconst _defaultLogLevel = 'debug'\n\nconst _checkLogLevel = (logLevel) => {\n  if (logLevel && typeof logLevel === 'string') {\n    return _logLevels[logLevel.toLowerCase().trim()] || _logLevels[_defaultLogLevel]\n  }\n\n  return _logLevels[_defaultLogLevel]\n}\n\nconst memoize = func => {\n  const cache = {}\n  const memoized = function (key) {\n    if (!cache[key]) {\n      cache[key] = func.apply(this, arguments)\n    }\n\n    return cache[key]\n  }\n\n  return memoized\n}\n\nfunction processMsg (msg) {\n  return typeof msg === 'function' ? msg() : msg\n}\n\nfunction withNoop (fn) {\n  if (!log._tracer) {\n    fn()\n  } else {\n    log._tracer.scope().activate(log._noopSpan(), fn)\n  }\n}\n\nconst log = {\n  _isLogLevelEnabled (level) {\n    return _logLevels[level] >= this._logLevel\n  },\n\n  use (logger) {\n    if (logger && logger.debug instanceof Function && logger.error instanceof Function) {\n      this._logger = logger\n    }\n\n    return this\n  },\n\n  toggle (enabled, logLevel, tracer) {\n    this._enabled = enabled\n    this._logLevel = _checkLogLevel(logLevel)\n    this._tracer = tracer\n\n    return this\n  },\n\n  _noopSpan () {\n    if (!this.__noopSpan) {\n      this.__noopSpan = new NoopSpan(this._tracer)\n    }\n    return this.__noopSpan\n  },\n\n  reset () {\n    this._logger = _default\n    this._enabled = false\n    delete this._tracer\n    delete this.__noopSpan\n    this._deprecate = memoize((code, message) => {\n      withNoop(() => this._logger.error(message))\n      return this\n    })\n    this._logLevel = _checkLogLevel()\n\n    return this\n  },\n\n  debug (message) {\n    if (this._enabled && this._isLogLevelEnabled('debug')) {\n      withNoop(() => this._logger.debug(processMsg(message)))\n    }\n\n    return this\n  },\n\n  info (message) {\n    if (!this._logger.info) return this.debug(message)\n    if (this._enabled && this._isLogLevelEnabled('info')) {\n      withNoop(() => this._logger.info(processMsg(message)))\n    }\n\n    return this\n  },\n\n  warn (message) {\n    if (!this._logger.warn) return this.debug(message)\n    if (this._enabled && this._isLogLevelEnabled('warn')) {\n      withNoop(() => this._logger.warn(processMsg(message)))\n    }\n\n    return this\n  },\n\n  error (err) {\n    if (this._enabled && this._isLogLevelEnabled('error')) {\n      if (err instanceof Function) {\n        err = err()\n      }\n\n      if (typeof err !== 'object' || !err) {\n        err = String(err)\n      } else if (!err.stack) {\n        err = String(err.message || err)\n      }\n\n      if (typeof err === 'string') {\n        err = new Error(err)\n      }\n\n      withNoop(() => this._logger.error(err))\n    }\n\n    return this\n  },\n\n  deprecate (code, message) {\n    return this._deprecate(code, message)\n  }\n}\n\nlog.reset()\n\nmodule.exports = log\n"]},"metadata":{},"sourceType":"script"}