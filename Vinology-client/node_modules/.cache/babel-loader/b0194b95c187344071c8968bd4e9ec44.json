{"ast":null,"code":"'use strict';\n\nconst web = require('../../dd-trace/src/plugins/util/web');\n\nfunction createWrapConnect(tracer, config) {\n  return function wrapConnect(connect) {\n    if (typeof connect !== 'function') return connect;\n    return function connectWithTrace() {\n      const app = connect();\n      if (!app) return app;\n      app.use = createWrapUse()(app.use);\n      app.handle = createWrapHandle(tracer, config)(app.handle);\n      return app;\n    };\n  };\n}\n\nfunction createWrapUse() {\n  return function wrapUse(use) {\n    if (typeof use !== 'function') return use;\n    return function useWithTrace(route, fn) {\n      const result = use.apply(this, arguments);\n      if (!this || !Array.isArray(this.stack)) return result;\n      const index = this.stack.length - 1;\n      const layer = this.stack[index];\n\n      if (layer && layer.handle) {\n        this.stack[index].handle = wrapLayerHandle(layer);\n      }\n\n      return result;\n    };\n  };\n}\n\nfunction createWrapHandle(tracer, config) {\n  config = web.normalizeConfig(config);\n  return function wrapHandle(handle) {\n    if (typeof handle !== 'function') return handle;\n    return function handleWithTrace(req, res, out) {\n      return web.instrument(tracer, config, req, res, 'connect.request', () => {\n        return handle.apply(this, arguments);\n      });\n    };\n  };\n}\n\nfunction wrapLayerHandle(layer) {\n  if (typeof layer.handle !== 'function') return layer.handle;\n  const handle = layer.handle;\n\n  if (layer.handle.length === 4) {\n    return function (error, req, res, next) {\n      return callLayerHandle(layer, handle, req, [error, req, res, wrapNext(layer, req, next)]);\n    };\n  } else {\n    return function (req, res, next) {\n      return callLayerHandle(layer, handle, req, [req, res, wrapNext(layer, req, next)]);\n    };\n  }\n}\n\nfunction callLayerHandle(layer, handle, req, args) {\n  const route = layer.route;\n\n  if (route !== '/') {\n    web.enterRoute(req, route);\n  }\n\n  return web.wrapMiddleware(req, handle, 'connect.middleware', () => {\n    return handle.apply(layer, args);\n  });\n}\n\nfunction wrapNext(layer, req, next) {\n  if (typeof next !== 'function' || !web.active(req)) return next;\n  return function nextWithTrace(error) {\n    if (!error && layer.route !== '/') {\n      web.exitRoute(req);\n    }\n\n    web.finish(req, error);\n    next.apply(this, arguments);\n  };\n}\n\nmodule.exports = [{\n  name: 'connect',\n  versions: ['>=3'],\n\n  patch(connect, tracer, config) {\n    // `connect` is a function so we return a wrapper that will replace its export.\n    return this.wrapExport(connect, createWrapConnect(tracer, config)(connect));\n  },\n\n  unpatch(connect) {\n    this.unwrapExport(connect);\n  }\n\n}, {\n  name: 'connect',\n  versions: ['2.2.2'],\n\n  patch(connect, tracer, config) {\n    this.wrap(connect.proto, 'use', createWrapUse());\n    this.wrap(connect.proto, 'handle', createWrapHandle(tracer, config));\n  },\n\n  unpatch(connect) {\n    this.unwrap(connect.proto, 'use');\n    this.unwrap(connect.proto, 'handle');\n  }\n\n}];","map":{"version":3,"sources":["/Users/danielcalderon/vinology/Vinology-client/node_modules/dd-trace/packages/datadog-plugin-connect/src/index.js"],"names":["web","require","createWrapConnect","tracer","config","wrapConnect","connect","connectWithTrace","app","use","createWrapUse","handle","createWrapHandle","wrapUse","useWithTrace","route","fn","result","apply","arguments","Array","isArray","stack","index","length","layer","wrapLayerHandle","normalizeConfig","wrapHandle","handleWithTrace","req","res","out","instrument","error","next","callLayerHandle","wrapNext","args","enterRoute","wrapMiddleware","active","nextWithTrace","exitRoute","finish","module","exports","name","versions","patch","wrapExport","unpatch","unwrapExport","wrap","proto","unwrap"],"mappings":"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","sourcesContent":["'use strict'\n\nconst web = require('../../dd-trace/src/plugins/util/web')\n\nfunction createWrapConnect (tracer, config) {\n  return function wrapConnect (connect) {\n    if (typeof connect !== 'function') return connect\n\n    return function connectWithTrace () {\n      const app = connect()\n\n      if (!app) return app\n\n      app.use = createWrapUse()(app.use)\n      app.handle = createWrapHandle(tracer, config)(app.handle)\n\n      return app\n    }\n  }\n}\n\nfunction createWrapUse () {\n  return function wrapUse (use) {\n    if (typeof use !== 'function') return use\n\n    return function useWithTrace (route, fn) {\n      const result = use.apply(this, arguments)\n\n      if (!this || !Array.isArray(this.stack)) return result\n\n      const index = this.stack.length - 1\n      const layer = this.stack[index]\n\n      if (layer && layer.handle) {\n        this.stack[index].handle = wrapLayerHandle(layer)\n      }\n\n      return result\n    }\n  }\n}\n\nfunction createWrapHandle (tracer, config) {\n  config = web.normalizeConfig(config)\n\n  return function wrapHandle (handle) {\n    if (typeof handle !== 'function') return handle\n\n    return function handleWithTrace (req, res, out) {\n      return web.instrument(tracer, config, req, res, 'connect.request', () => {\n        return handle.apply(this, arguments)\n      })\n    }\n  }\n}\n\nfunction wrapLayerHandle (layer) {\n  if (typeof layer.handle !== 'function') return layer.handle\n\n  const handle = layer.handle\n\n  if (layer.handle.length === 4) {\n    return function (error, req, res, next) {\n      return callLayerHandle(layer, handle, req, [error, req, res, wrapNext(layer, req, next)])\n    }\n  } else {\n    return function (req, res, next) {\n      return callLayerHandle(layer, handle, req, [req, res, wrapNext(layer, req, next)])\n    }\n  }\n}\n\nfunction callLayerHandle (layer, handle, req, args) {\n  const route = layer.route\n\n  if (route !== '/') {\n    web.enterRoute(req, route)\n  }\n\n  return web.wrapMiddleware(req, handle, 'connect.middleware', () => {\n    return handle.apply(layer, args)\n  })\n}\n\nfunction wrapNext (layer, req, next) {\n  if (typeof next !== 'function' || !web.active(req)) return next\n\n  return function nextWithTrace (error) {\n    if (!error && layer.route !== '/') {\n      web.exitRoute(req)\n    }\n\n    web.finish(req, error)\n\n    next.apply(this, arguments)\n  }\n}\n\nmodule.exports = [\n  {\n    name: 'connect',\n    versions: ['>=3'],\n    patch (connect, tracer, config) {\n      // `connect` is a function so we return a wrapper that will replace its export.\n      return this.wrapExport(connect, createWrapConnect(tracer, config)(connect))\n    },\n    unpatch (connect) {\n      this.unwrapExport(connect)\n    }\n  },\n  {\n    name: 'connect',\n    versions: ['2.2.2'],\n    patch (connect, tracer, config) {\n      this.wrap(connect.proto, 'use', createWrapUse())\n      this.wrap(connect.proto, 'handle', createWrapHandle(tracer, config))\n    },\n    unpatch (connect) {\n      this.unwrap(connect.proto, 'use')\n      this.unwrap(connect.proto, 'handle')\n    }\n  }\n]\n"]},"metadata":{},"sourceType":"script"}