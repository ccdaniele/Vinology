{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar span_context_1 = require(\"../span_context\");\n/**\n * OpenTracing Context implementation designed for use in\n * unit tests.\n */\n\n\nvar MockContext =\n/** @class */\nfunction (_super) {\n  __extends(MockContext, _super);\n\n  function MockContext(span) {\n    var _this = _super.call(this) || this; // Store a reference to the span itself since this is a mock tracer\n    // intended to make debugging and unit testing easier.\n\n\n    _this._span = span;\n    return _this;\n  }\n\n  MockContext.prototype.span = function () {\n    return this._span;\n  };\n\n  return MockContext;\n}(span_context_1.SpanContext);\n\nexports.MockContext = MockContext;\nexports.default = MockContext;","map":{"version":3,"sources":["../../src/mock_tracer/mock_context.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAA,cAAA,GAAA,OAAA,CAAA,iBAAA,CAAA;AAGA;;;AAGG;;;AACH,IAAA,WAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAAiC,EAAA,SAAA,CAAA,WAAA,EAAA,MAAA,CAAA;;AAQ7B,WAAA,WAAA,CAAY,IAAZ,EAA0B;AAA1B,QAAA,KAAA,GACI,MAAA,CAAA,IAAA,CAAA,IAAA,KAAO,IADX,CAA0B,CAEtB;AACA;;;AACA,IAAA,KAAI,CAAC,KAAL,GAAa,IAAb;;AACH;;AAED,EAAA,WAAA,CAAA,SAAA,CAAA,IAAA,GAAA,YAAA;AACI,WAAO,KAAK,KAAZ;AACH,GAFD;;AAGJ,SAAA,WAAA;AAAC,CAlBD,CAAiC,cAAA,CAAA,WAAjC,CAAA;;AAAa,OAAA,CAAA,WAAA,GAAA,WAAA;AAoBb,OAAA,CAAA,OAAA,GAAe,WAAf","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar span_context_1 = require(\"../span_context\");\n/**\n * OpenTracing Context implementation designed for use in\n * unit tests.\n */\nvar MockContext = /** @class */ (function (_super) {\n    __extends(MockContext, _super);\n    function MockContext(span) {\n        var _this = _super.call(this) || this;\n        // Store a reference to the span itself since this is a mock tracer\n        // intended to make debugging and unit testing easier.\n        _this._span = span;\n        return _this;\n    }\n    MockContext.prototype.span = function () {\n        return this._span;\n    };\n    return MockContext;\n}(span_context_1.SpanContext));\nexports.MockContext = MockContext;\nexports.default = MockContext;\n//# sourceMappingURL=mock_context.js.map"]},"metadata":{},"sourceType":"script"}