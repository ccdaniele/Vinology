{"ast":null,"code":"'use strict';\n\nconst uniq = require('lodash.uniq');\n\nconst analyticsSampler = require('../../analytics_sampler');\n\nconst FORMAT_HTTP_HEADERS = require('opentracing').FORMAT_HTTP_HEADERS;\n\nconst log = require('../../log');\n\nconst tags = require('../../../../../ext/tags');\n\nconst types = require('../../../../../ext/types');\n\nconst kinds = require('../../../../../ext/kinds');\n\nconst urlFilter = require('./urlfilter');\n\nconst WEB = types.WEB;\nconst SERVER = kinds.SERVER;\nconst RESOURCE_NAME = tags.RESOURCE_NAME;\nconst SERVICE_NAME = tags.SERVICE_NAME;\nconst SPAN_TYPE = tags.SPAN_TYPE;\nconst SPAN_KIND = tags.SPAN_KIND;\nconst ERROR = tags.ERROR;\nconst HTTP_METHOD = tags.HTTP_METHOD;\nconst HTTP_URL = tags.HTTP_URL;\nconst HTTP_STATUS_CODE = tags.HTTP_STATUS_CODE;\nconst HTTP_ROUTE = tags.HTTP_ROUTE;\nconst HTTP_REQUEST_HEADERS = tags.HTTP_REQUEST_HEADERS;\nconst HTTP_RESPONSE_HEADERS = tags.HTTP_RESPONSE_HEADERS;\nconst HTTP2_HEADER_AUTHORITY = ':authority';\nconst HTTP2_HEADER_SCHEME = ':scheme';\nconst HTTP2_HEADER_PATH = ':path';\nconst web = {\n  // Ensure the configuration has the correct structure and defaults.\n  normalizeConfig(config) {\n    config = config.server || config;\n    const headers = getHeadersToRecord(config);\n    const validateStatus = getStatusValidator(config);\n    const hooks = getHooks(config);\n    const filter = urlFilter.getFilter(config);\n    const middleware = getMiddlewareSetting(config);\n    return Object.assign({}, config, {\n      headers,\n      validateStatus,\n      hooks,\n      filter,\n      middleware\n    });\n  },\n\n  // Start a span and activate a scope for a request.\n  instrument(tracer, config, req, res, name, callback) {\n    this.patch(req);\n    const span = startSpan(tracer, config, req, res, name); // TODO: replace this with a REFERENCE_NOOP after we split http/express/etc\n\n    if (!config.filter(req.url)) {\n      span.context()._traceFlags.sampled = false;\n    }\n\n    if (config.service) {\n      span.setTag(SERVICE_NAME, config.service);\n    }\n\n    analyticsSampler.sample(span, config.measured, true);\n\n    if (!req._datadog.instrumented) {\n      wrapEnd(req);\n      wrapEvents(req);\n      req._datadog.instrumented = true;\n    }\n\n    return callback && tracer.scope().activate(span, () => callback(span));\n  },\n\n  // Reactivate the request scope in case it was changed by a middleware.\n  reactivate(req, fn) {\n    return reactivate(req, fn);\n  },\n\n  // Add a route segment that will be used for the resource name.\n  enterRoute(req, path) {\n    if (typeof path === 'string') {\n      req._datadog.paths.push(path);\n    }\n  },\n\n  // Remove the current route segment.\n  exitRoute(req) {\n    req._datadog.paths.pop();\n  },\n\n  // Start a new middleware span and activate a new scope with the span.\n  wrapMiddleware(req, middleware, name, fn) {\n    if (!this.active(req)) return fn();\n    const tracer = req._datadog.tracer;\n    const childOf = this.active(req);\n    const config = req._datadog.config;\n    if (config.middleware === false) return this.bindAndWrapMiddlewareErrors(fn, req, tracer, childOf);\n    const span = tracer.startSpan(name, {\n      childOf\n    });\n    analyticsSampler.sample(span, config.measured);\n    span.addTags({\n      [RESOURCE_NAME]: middleware._name || middleware.name || '<anonymous>'\n    });\n\n    req._datadog.middleware.push(span);\n\n    return tracer.scope().activate(span, fn);\n  },\n\n  // catch errors and apply to active span\n  bindAndWrapMiddlewareErrors(fn, req, tracer, activeSpan) {\n    try {\n      return tracer.scope().bind(fn, activeSpan).apply(this, arguments);\n    } catch (e) {\n      web.addError(req, e); // TODO: remove when error formatting is moved to Span\n\n      throw e;\n    }\n  },\n\n  // Finish the active middleware span.\n  finish(req, error) {\n    if (!this.active(req)) return;\n\n    const span = req._datadog.middleware.pop();\n\n    if (span) {\n      if (error) {\n        span.addTags({\n          'error.type': error.name,\n          'error.msg': error.message,\n          'error.stack': error.stack\n        });\n      }\n\n      span.finish();\n    }\n  },\n\n  // Register a callback to run before res.end() is called.\n  beforeEnd(req, callback) {\n    req._datadog.beforeEnd.push(callback);\n  },\n\n  // Prepare the request for instrumentation.\n  patch(req) {\n    if (req._datadog) return;\n\n    if (req.stream && req.stream._datadog) {\n      req._datadog = req.stream._datadog;\n      return;\n    }\n\n    req._datadog = {\n      span: null,\n      paths: [],\n      middleware: [],\n      beforeEnd: [],\n      config: {}\n    };\n  },\n\n  // Return the request root span.\n  root(req) {\n    return req._datadog ? req._datadog.span : null;\n  },\n\n  // Return the active span.\n  active(req) {\n    if (!req._datadog) return null;\n    if (req._datadog.middleware.length === 0) return req._datadog.span || null;\n    return req._datadog.middleware.slice(-1)[0];\n  },\n\n  // Extract the parent span from the headers and start a new span as its child\n  startChildSpan(tracer, name, headers) {\n    const childOf = tracer.scope().active() || tracer.extract(FORMAT_HTTP_HEADERS, headers);\n    const span = tracer.startSpan(name, {\n      childOf\n    });\n    return span;\n  },\n\n  // Validate a request's status code and then add error tags if necessary\n  addStatusError(req, statusCode) {\n    const span = req._datadog.span;\n    const error = req._datadog.error;\n\n    if (!req._datadog.config.validateStatus(statusCode)) {\n      span.setTag(ERROR, error || true);\n    }\n  },\n\n  // Add an error to the request\n  addError(req, error) {\n    if (error instanceof Error) {\n      req._datadog.error = req._datadog.error || error;\n    }\n  }\n\n};\n\nfunction startSpan(tracer, config, req, res, name) {\n  req._datadog.config = config;\n  let span;\n\n  if (req._datadog.span) {\n    req._datadog.span.context()._name = name;\n    span = req._datadog.span;\n  } else {\n    span = web.startChildSpan(tracer, name, req.headers);\n  }\n\n  configureDatadogObject(tracer, span, req, res);\n  return span;\n}\n\nfunction configureDatadogObject(tracer, span, req, res) {\n  const ddObj = req._datadog;\n  ddObj.tracer = tracer;\n  ddObj.span = span;\n  ddObj.res = res;\n}\n\nfunction finish(req, res) {\n  if (req._datadog.finished && !req.stream) return;\n  addRequestTags(req);\n  addResponseTags(req);\n\n  req._datadog.config.hooks.request(req._datadog.span, req, res);\n\n  addResourceTag(req);\n\n  req._datadog.span.finish();\n\n  req._datadog.finished = true;\n}\n\nfunction finishMiddleware(req, res) {\n  if (req._datadog.finished) return;\n  let span;\n\n  while (span = req._datadog.middleware.pop()) {\n    span.finish();\n  }\n}\n\nfunction wrapEnd(req) {\n  const scope = req._datadog.tracer.scope();\n\n  const res = req._datadog.res;\n  const end = res.end;\n  res.writeHead = wrapWriteHead(req);\n\n  res._datadog_end = function () {\n    for (const beforeEnd of req._datadog.beforeEnd) {\n      beforeEnd();\n    }\n\n    finishMiddleware(req, res);\n    const returnValue = end.apply(res, arguments);\n    finish(req, res);\n    return returnValue;\n  };\n\n  Object.defineProperty(res, 'end', {\n    configurable: true,\n\n    get() {\n      return this._datadog_end;\n    },\n\n    set(value) {\n      this._datadog_end = scope.bind(value, req._datadog.span);\n    }\n\n  });\n}\n\nfunction wrapWriteHead(req) {\n  const res = req._datadog.res;\n  const writeHead = res.writeHead;\n  return function (statusCode, statusMessage, headers) {\n    headers = typeof statusMessage === 'string' ? headers : statusMessage;\n    headers = Object.assign(res.getHeaders(), headers);\n\n    if (req.method.toLowerCase() === 'options' && isOriginAllowed(req, headers)) {\n      addAllowHeaders(req, headers);\n    }\n\n    return writeHead.apply(this, arguments);\n  };\n}\n\nfunction addAllowHeaders(req, headers) {\n  const res = req._datadog.res;\n  const allowHeaders = splitHeader(headers['access-control-allow-headers']);\n  const requestHeaders = splitHeader(req.headers['access-control-request-headers']);\n  const contextHeaders = ['x-datadog-origin', 'x-datadog-parent-id', 'x-datadog-sampled', 'x-datadog-sampling-priority', 'x-datadog-trace-id'];\n\n  for (const header of contextHeaders) {\n    if (~requestHeaders.indexOf(header)) {\n      allowHeaders.push(header);\n    }\n  }\n\n  if (allowHeaders.length > 0) {\n    res.setHeader('access-control-allow-headers', uniq(allowHeaders).join(','));\n  }\n}\n\nfunction isOriginAllowed(req, headers) {\n  const origin = req.headers['origin'];\n  const allowOrigin = headers['access-control-allow-origin'];\n  return origin && (allowOrigin === '*' || allowOrigin === origin);\n}\n\nfunction splitHeader(str) {\n  return typeof str === 'string' ? str.split(/\\s*,\\s*/) : [];\n}\n\nfunction wrapEvents(req) {\n  const scope = req._datadog.tracer.scope();\n\n  const res = req._datadog.res;\n  scope.bind(res, req._datadog.span);\n}\n\nfunction reactivate(req, fn) {\n  return req._datadog ? req._datadog.tracer.scope().activate(req._datadog.span, fn) : fn();\n}\n\nfunction addRequestTags(req) {\n  const url = extractURL(req);\n  const span = req._datadog.span;\n  span.addTags({\n    [HTTP_URL]: url.split('?')[0],\n    [HTTP_METHOD]: req.method,\n    [SPAN_KIND]: SERVER,\n    [SPAN_TYPE]: WEB\n  });\n  addHeaders(req);\n}\n\nfunction addResponseTags(req) {\n  const span = req._datadog.span;\n  const res = req._datadog.res;\n\n  if (req._datadog.paths.length > 0) {\n    span.setTag(HTTP_ROUTE, req._datadog.paths.join(''));\n  }\n\n  span.addTags({\n    [HTTP_STATUS_CODE]: res.statusCode\n  });\n  web.addStatusError(req, res.statusCode);\n}\n\nfunction addResourceTag(req) {\n  const span = req._datadog.span;\n\n  const tags = span.context()._tags;\n\n  if (tags['resource.name']) return;\n  const resource = [req.method, tags[HTTP_ROUTE]].filter(val => val).join(' ');\n  span.setTag(RESOURCE_NAME, resource);\n}\n\nfunction addHeaders(req) {\n  const span = req._datadog.span;\n\n  req._datadog.config.headers.forEach(key => {\n    const reqHeader = req.headers[key];\n\n    const resHeader = req._datadog.res.getHeader(key);\n\n    if (reqHeader) {\n      span.setTag(`${HTTP_REQUEST_HEADERS}.${key}`, reqHeader);\n    }\n\n    if (resHeader) {\n      span.setTag(`${HTTP_RESPONSE_HEADERS}.${key}`, resHeader);\n    }\n  });\n}\n\nfunction extractURL(req) {\n  const headers = req.headers;\n\n  if (req.stream) {\n    return `${headers[HTTP2_HEADER_SCHEME]}://${headers[HTTP2_HEADER_AUTHORITY]}${headers[HTTP2_HEADER_PATH]}`;\n  } else {\n    const protocol = getProtocol(req);\n    return `${protocol}://${req.headers['host']}${req.originalUrl || req.url}`;\n  }\n}\n\nfunction getProtocol(req) {\n  if (req.socket && req.socket.encrypted) return 'https';\n  if (req.connection && req.connection.encrypted) return 'https';\n  return 'http';\n}\n\nfunction getHeadersToRecord(config) {\n  if (Array.isArray(config.headers)) {\n    try {\n      return config.headers.map(key => key.toLowerCase());\n    } catch (err) {\n      log.error(err);\n    }\n  } else if (config.hasOwnProperty('headers')) {\n    log.error('Expected `headers` to be an array of strings.');\n  }\n\n  return [];\n}\n\nfunction getStatusValidator(config) {\n  if (typeof config.validateStatus === 'function') {\n    return config.validateStatus;\n  } else if (config.hasOwnProperty('validateStatus')) {\n    log.error('Expected `validateStatus` to be a function.');\n  }\n\n  return code => code < 500;\n}\n\nfunction getHooks(config) {\n  const noop = () => {};\n\n  const request = config.hooks && config.hooks.request || noop;\n  return {\n    request\n  };\n}\n\nfunction getMiddlewareSetting(config) {\n  if (config && typeof config.middleware === 'boolean') {\n    return config.middleware;\n  } else if (config && config.hasOwnProperty('middleware')) {\n    log.error('Expected `middleware` to be a boolean.');\n  }\n\n  return true;\n}\n\nmodule.exports = web;","map":{"version":3,"sources":["/Users/danielcalderon/vinology/Vinology-client/node_modules/dd-trace/packages/dd-trace/src/plugins/util/web.js"],"names":["uniq","require","analyticsSampler","FORMAT_HTTP_HEADERS","log","tags","types","kinds","urlFilter","WEB","SERVER","RESOURCE_NAME","SERVICE_NAME","SPAN_TYPE","SPAN_KIND","ERROR","HTTP_METHOD","HTTP_URL","HTTP_STATUS_CODE","HTTP_ROUTE","HTTP_REQUEST_HEADERS","HTTP_RESPONSE_HEADERS","HTTP2_HEADER_AUTHORITY","HTTP2_HEADER_SCHEME","HTTP2_HEADER_PATH","web","normalizeConfig","config","server","headers","getHeadersToRecord","validateStatus","getStatusValidator","hooks","getHooks","filter","getFilter","middleware","getMiddlewareSetting","Object","assign","instrument","tracer","req","res","name","callback","patch","span","startSpan","url","context","_traceFlags","sampled","service","setTag","sample","measured","_datadog","instrumented","wrapEnd","wrapEvents","scope","activate","reactivate","fn","enterRoute","path","paths","push","exitRoute","pop","wrapMiddleware","active","childOf","bindAndWrapMiddlewareErrors","addTags","_name","activeSpan","bind","apply","arguments","e","addError","finish","error","message","stack","beforeEnd","stream","root","length","slice","startChildSpan","extract","addStatusError","statusCode","Error","configureDatadogObject","ddObj","finished","addRequestTags","addResponseTags","request","addResourceTag","finishMiddleware","end","writeHead","wrapWriteHead","_datadog_end","returnValue","defineProperty","configurable","get","set","value","statusMessage","getHeaders","method","toLowerCase","isOriginAllowed","addAllowHeaders","allowHeaders","splitHeader","requestHeaders","contextHeaders","header","indexOf","setHeader","join","origin","allowOrigin","str","split","extractURL","addHeaders","_tags","resource","val","forEach","key","reqHeader","resHeader","getHeader","protocol","getProtocol","originalUrl","socket","encrypted","connection","Array","isArray","map","err","hasOwnProperty","code","noop","module","exports"],"mappings":"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","sourcesContent":["'use strict'\n\nconst uniq = require('lodash.uniq')\nconst analyticsSampler = require('../../analytics_sampler')\nconst FORMAT_HTTP_HEADERS = require('opentracing').FORMAT_HTTP_HEADERS\nconst log = require('../../log')\nconst tags = require('../../../../../ext/tags')\nconst types = require('../../../../../ext/types')\nconst kinds = require('../../../../../ext/kinds')\nconst urlFilter = require('./urlfilter')\n\nconst WEB = types.WEB\nconst SERVER = kinds.SERVER\nconst RESOURCE_NAME = tags.RESOURCE_NAME\nconst SERVICE_NAME = tags.SERVICE_NAME\nconst SPAN_TYPE = tags.SPAN_TYPE\nconst SPAN_KIND = tags.SPAN_KIND\nconst ERROR = tags.ERROR\nconst HTTP_METHOD = tags.HTTP_METHOD\nconst HTTP_URL = tags.HTTP_URL\nconst HTTP_STATUS_CODE = tags.HTTP_STATUS_CODE\nconst HTTP_ROUTE = tags.HTTP_ROUTE\nconst HTTP_REQUEST_HEADERS = tags.HTTP_REQUEST_HEADERS\nconst HTTP_RESPONSE_HEADERS = tags.HTTP_RESPONSE_HEADERS\n\nconst HTTP2_HEADER_AUTHORITY = ':authority'\nconst HTTP2_HEADER_SCHEME = ':scheme'\nconst HTTP2_HEADER_PATH = ':path'\n\nconst web = {\n  // Ensure the configuration has the correct structure and defaults.\n  normalizeConfig (config) {\n    config = config.server || config\n\n    const headers = getHeadersToRecord(config)\n    const validateStatus = getStatusValidator(config)\n    const hooks = getHooks(config)\n    const filter = urlFilter.getFilter(config)\n    const middleware = getMiddlewareSetting(config)\n\n    return Object.assign({}, config, {\n      headers,\n      validateStatus,\n      hooks,\n      filter,\n      middleware\n    })\n  },\n\n  // Start a span and activate a scope for a request.\n  instrument (tracer, config, req, res, name, callback) {\n    this.patch(req)\n\n    const span = startSpan(tracer, config, req, res, name)\n\n    // TODO: replace this with a REFERENCE_NOOP after we split http/express/etc\n    if (!config.filter(req.url)) {\n      span.context()._traceFlags.sampled = false\n    }\n\n    if (config.service) {\n      span.setTag(SERVICE_NAME, config.service)\n    }\n\n    analyticsSampler.sample(span, config.measured, true)\n\n    if (!req._datadog.instrumented) {\n      wrapEnd(req)\n      wrapEvents(req)\n\n      req._datadog.instrumented = true\n    }\n\n    return callback && tracer.scope().activate(span, () => callback(span))\n  },\n\n  // Reactivate the request scope in case it was changed by a middleware.\n  reactivate (req, fn) {\n    return reactivate(req, fn)\n  },\n\n  // Add a route segment that will be used for the resource name.\n  enterRoute (req, path) {\n    if (typeof path === 'string') {\n      req._datadog.paths.push(path)\n    }\n  },\n\n  // Remove the current route segment.\n  exitRoute (req) {\n    req._datadog.paths.pop()\n  },\n\n  // Start a new middleware span and activate a new scope with the span.\n  wrapMiddleware (req, middleware, name, fn) {\n    if (!this.active(req)) return fn()\n\n    const tracer = req._datadog.tracer\n    const childOf = this.active(req)\n    const config = req._datadog.config\n\n    if (config.middleware === false) return this.bindAndWrapMiddlewareErrors(fn, req, tracer, childOf)\n\n    const span = tracer.startSpan(name, { childOf })\n\n    analyticsSampler.sample(span, config.measured)\n\n    span.addTags({\n      [RESOURCE_NAME]: middleware._name || middleware.name || '<anonymous>'\n    })\n\n    req._datadog.middleware.push(span)\n\n    return tracer.scope().activate(span, fn)\n  },\n\n  // catch errors and apply to active span\n  bindAndWrapMiddlewareErrors (fn, req, tracer, activeSpan) {\n    try {\n      return tracer.scope().bind(fn, activeSpan).apply(this, arguments)\n    } catch (e) {\n      web.addError(req, e) // TODO: remove when error formatting is moved to Span\n      throw e\n    }\n  },\n\n  // Finish the active middleware span.\n  finish (req, error) {\n    if (!this.active(req)) return\n\n    const span = req._datadog.middleware.pop()\n\n    if (span) {\n      if (error) {\n        span.addTags({\n          'error.type': error.name,\n          'error.msg': error.message,\n          'error.stack': error.stack\n        })\n      }\n\n      span.finish()\n    }\n  },\n\n  // Register a callback to run before res.end() is called.\n  beforeEnd (req, callback) {\n    req._datadog.beforeEnd.push(callback)\n  },\n\n  // Prepare the request for instrumentation.\n  patch (req) {\n    if (req._datadog) return\n\n    if (req.stream && req.stream._datadog) {\n      req._datadog = req.stream._datadog\n      return\n    }\n\n    req._datadog = {\n      span: null,\n      paths: [],\n      middleware: [],\n      beforeEnd: [],\n      config: {}\n    }\n  },\n\n  // Return the request root span.\n  root (req) {\n    return req._datadog ? req._datadog.span : null\n  },\n\n  // Return the active span.\n  active (req) {\n    if (!req._datadog) return null\n    if (req._datadog.middleware.length === 0) return req._datadog.span || null\n\n    return req._datadog.middleware.slice(-1)[0]\n  },\n\n  // Extract the parent span from the headers and start a new span as its child\n  startChildSpan (tracer, name, headers) {\n    const childOf = tracer.scope().active() || tracer.extract(FORMAT_HTTP_HEADERS, headers)\n    const span = tracer.startSpan(name, { childOf })\n\n    return span\n  },\n\n  // Validate a request's status code and then add error tags if necessary\n  addStatusError (req, statusCode) {\n    const span = req._datadog.span\n    const error = req._datadog.error\n\n    if (!req._datadog.config.validateStatus(statusCode)) {\n      span.setTag(ERROR, error || true)\n    }\n  },\n\n  // Add an error to the request\n  addError (req, error) {\n    if (error instanceof Error) {\n      req._datadog.error = req._datadog.error || error\n    }\n  }\n}\n\nfunction startSpan (tracer, config, req, res, name) {\n  req._datadog.config = config\n\n  let span\n\n  if (req._datadog.span) {\n    req._datadog.span.context()._name = name\n    span = req._datadog.span\n  } else {\n    span = web.startChildSpan(tracer, name, req.headers)\n  }\n\n  configureDatadogObject(tracer, span, req, res)\n\n  return span\n}\n\nfunction configureDatadogObject (tracer, span, req, res) {\n  const ddObj = req._datadog\n  ddObj.tracer = tracer\n  ddObj.span = span\n  ddObj.res = res\n}\n\nfunction finish (req, res) {\n  if (req._datadog.finished && !req.stream) return\n\n  addRequestTags(req)\n  addResponseTags(req)\n\n  req._datadog.config.hooks.request(req._datadog.span, req, res)\n  addResourceTag(req)\n\n  req._datadog.span.finish()\n  req._datadog.finished = true\n}\n\nfunction finishMiddleware (req, res) {\n  if (req._datadog.finished) return\n\n  let span\n\n  while ((span = req._datadog.middleware.pop())) {\n    span.finish()\n  }\n}\n\nfunction wrapEnd (req) {\n  const scope = req._datadog.tracer.scope()\n  const res = req._datadog.res\n  const end = res.end\n\n  res.writeHead = wrapWriteHead(req)\n\n  res._datadog_end = function () {\n    for (const beforeEnd of req._datadog.beforeEnd) {\n      beforeEnd()\n    }\n\n    finishMiddleware(req, res)\n\n    const returnValue = end.apply(res, arguments)\n\n    finish(req, res)\n\n    return returnValue\n  }\n\n  Object.defineProperty(res, 'end', {\n    configurable: true,\n    get () {\n      return this._datadog_end\n    },\n    set (value) {\n      this._datadog_end = scope.bind(value, req._datadog.span)\n    }\n  })\n}\n\nfunction wrapWriteHead (req) {\n  const res = req._datadog.res\n  const writeHead = res.writeHead\n\n  return function (statusCode, statusMessage, headers) {\n    headers = typeof statusMessage === 'string' ? headers : statusMessage\n    headers = Object.assign(res.getHeaders(), headers)\n\n    if (req.method.toLowerCase() === 'options' && isOriginAllowed(req, headers)) {\n      addAllowHeaders(req, headers)\n    }\n\n    return writeHead.apply(this, arguments)\n  }\n}\n\nfunction addAllowHeaders (req, headers) {\n  const res = req._datadog.res\n  const allowHeaders = splitHeader(headers['access-control-allow-headers'])\n  const requestHeaders = splitHeader(req.headers['access-control-request-headers'])\n  const contextHeaders = [\n    'x-datadog-origin',\n    'x-datadog-parent-id',\n    'x-datadog-sampled',\n    'x-datadog-sampling-priority',\n    'x-datadog-trace-id'\n  ]\n\n  for (const header of contextHeaders) {\n    if (~requestHeaders.indexOf(header)) {\n      allowHeaders.push(header)\n    }\n  }\n\n  if (allowHeaders.length > 0) {\n    res.setHeader('access-control-allow-headers', uniq(allowHeaders).join(','))\n  }\n}\n\nfunction isOriginAllowed (req, headers) {\n  const origin = req.headers['origin']\n  const allowOrigin = headers['access-control-allow-origin']\n\n  return origin && (allowOrigin === '*' || allowOrigin === origin)\n}\n\nfunction splitHeader (str) {\n  return typeof str === 'string' ? str.split(/\\s*,\\s*/) : []\n}\n\nfunction wrapEvents (req) {\n  const scope = req._datadog.tracer.scope()\n  const res = req._datadog.res\n\n  scope.bind(res, req._datadog.span)\n}\n\nfunction reactivate (req, fn) {\n  return req._datadog\n    ? req._datadog.tracer.scope().activate(req._datadog.span, fn)\n    : fn()\n}\n\nfunction addRequestTags (req) {\n  const url = extractURL(req)\n  const span = req._datadog.span\n\n  span.addTags({\n    [HTTP_URL]: url.split('?')[0],\n    [HTTP_METHOD]: req.method,\n    [SPAN_KIND]: SERVER,\n    [SPAN_TYPE]: WEB\n  })\n\n  addHeaders(req)\n}\n\nfunction addResponseTags (req) {\n  const span = req._datadog.span\n  const res = req._datadog.res\n\n  if (req._datadog.paths.length > 0) {\n    span.setTag(HTTP_ROUTE, req._datadog.paths.join(''))\n  }\n\n  span.addTags({\n    [HTTP_STATUS_CODE]: res.statusCode\n  })\n\n  web.addStatusError(req, res.statusCode)\n}\n\nfunction addResourceTag (req) {\n  const span = req._datadog.span\n  const tags = span.context()._tags\n\n  if (tags['resource.name']) return\n\n  const resource = [req.method, tags[HTTP_ROUTE]]\n    .filter(val => val)\n    .join(' ')\n\n  span.setTag(RESOURCE_NAME, resource)\n}\n\nfunction addHeaders (req) {\n  const span = req._datadog.span\n\n  req._datadog.config.headers.forEach(key => {\n    const reqHeader = req.headers[key]\n    const resHeader = req._datadog.res.getHeader(key)\n\n    if (reqHeader) {\n      span.setTag(`${HTTP_REQUEST_HEADERS}.${key}`, reqHeader)\n    }\n\n    if (resHeader) {\n      span.setTag(`${HTTP_RESPONSE_HEADERS}.${key}`, resHeader)\n    }\n  })\n}\n\nfunction extractURL (req) {\n  const headers = req.headers\n\n  if (req.stream) {\n    return `${headers[HTTP2_HEADER_SCHEME]}://${headers[HTTP2_HEADER_AUTHORITY]}${headers[HTTP2_HEADER_PATH]}`\n  } else {\n    const protocol = getProtocol(req)\n    return `${protocol}://${req.headers['host']}${req.originalUrl || req.url}`\n  }\n}\n\nfunction getProtocol (req) {\n  if (req.socket && req.socket.encrypted) return 'https'\n  if (req.connection && req.connection.encrypted) return 'https'\n\n  return 'http'\n}\n\nfunction getHeadersToRecord (config) {\n  if (Array.isArray(config.headers)) {\n    try {\n      return config.headers.map(key => key.toLowerCase())\n    } catch (err) {\n      log.error(err)\n    }\n  } else if (config.hasOwnProperty('headers')) {\n    log.error('Expected `headers` to be an array of strings.')\n  }\n  return []\n}\n\nfunction getStatusValidator (config) {\n  if (typeof config.validateStatus === 'function') {\n    return config.validateStatus\n  } else if (config.hasOwnProperty('validateStatus')) {\n    log.error('Expected `validateStatus` to be a function.')\n  }\n  return code => code < 500\n}\n\nfunction getHooks (config) {\n  const noop = () => {}\n  const request = (config.hooks && config.hooks.request) || noop\n\n  return { request }\n}\n\nfunction getMiddlewareSetting (config) {\n  if (config && typeof config.middleware === 'boolean') {\n    return config.middleware\n  } else if (config && config.hasOwnProperty('middleware')) {\n    log.error('Expected `middleware` to be a boolean.')\n  }\n\n  return true\n}\n\nmodule.exports = web\n"]},"metadata":{},"sourceType":"script"}