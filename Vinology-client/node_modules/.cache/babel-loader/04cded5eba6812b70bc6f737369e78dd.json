{"ast":null,"code":"'use strict';\n\nconst {\n  createHook,\n  executionAsyncResource\n} = require('async_hooks');\n\nconst Base = require('./base');\n\nlet singleton = null;\n\nclass Scope extends Base {\n  constructor(config) {\n    if (singleton) return singleton;\n    super();\n    singleton = this;\n    this._ddResourceStore = Symbol('ddResourceStore');\n    this._config = config;\n    this._stack = [];\n    this._hook = createHook({\n      init: this._init.bind(this)\n    });\n    this.enable();\n  }\n\n  enable() {\n    this._enabled = true;\n\n    this._hook.enable();\n  }\n\n  disable() {\n    this._enabled = false;\n    this._stack = [];\n\n    this._hook.disable();\n  }\n\n  _active() {\n    if (!this._enabled) return null;\n\n    const resource = this._activeResource();\n\n    return resource[this._ddResourceStore] || null;\n  }\n\n  _activeResource() {\n    return executionAsyncResource() || {};\n  }\n\n  _activate(span, callback) {\n    if (!this._enabled) return callback();\n\n    const resource = this._activeResource();\n\n    this._enter(span, resource);\n\n    try {\n      return callback();\n    } finally {\n      this._exit(resource);\n    }\n  }\n\n  _enter(span, resource) {\n    this._stack.push(resource[this._ddResourceStore]);\n\n    resource[this._ddResourceStore] = span;\n  }\n\n  _exit(resource) {\n    resource[this._ddResourceStore] = this._stack.pop();\n  }\n\n  _init(asyncId, type, triggerAsyncId, resource) {\n    const triggerResource = this._activeResource();\n\n    const span = triggerResource[this._ddResourceStore];\n\n    if (span) {\n      resource[this._ddResourceStore] = span;\n    }\n  }\n\n}\n\nmodule.exports = Scope;","map":{"version":3,"sources":["/Users/danielcalderon/vinology/Vinology-client/node_modules/dd-trace/packages/dd-trace/src/scope/async_resource.js"],"names":["createHook","executionAsyncResource","require","Base","singleton","Scope","constructor","config","_ddResourceStore","Symbol","_config","_stack","_hook","init","_init","bind","enable","_enabled","disable","_active","resource","_activeResource","_activate","span","callback","_enter","_exit","push","pop","asyncId","type","triggerAsyncId","triggerResource","module","exports"],"mappings":"AAAA;;AAEA,MAAM;AAAEA,EAAAA,UAAF;AAAcC,EAAAA;AAAd,IAAyCC,OAAO,CAAC,aAAD,CAAtD;;AACA,MAAMC,IAAI,GAAGD,OAAO,CAAC,QAAD,CAApB;;AAEA,IAAIE,SAAS,GAAG,IAAhB;;AAEA,MAAMC,KAAN,SAAoBF,IAApB,CAAyB;AACvBG,EAAAA,WAAW,CAAEC,MAAF,EAAU;AACnB,QAAIH,SAAJ,EAAe,OAAOA,SAAP;AAEf;AAEAA,IAAAA,SAAS,GAAG,IAAZ;AAEA,SAAKI,gBAAL,GAAwBC,MAAM,CAAC,iBAAD,CAA9B;AACA,SAAKC,OAAL,GAAeH,MAAf;AACA,SAAKI,MAAL,GAAc,EAAd;AACA,SAAKC,KAAL,GAAaZ,UAAU,CAAC;AACtBa,MAAAA,IAAI,EAAE,KAAKC,KAAL,CAAWC,IAAX,CAAgB,IAAhB;AADgB,KAAD,CAAvB;AAIA,SAAKC,MAAL;AACD;;AAEDA,EAAAA,MAAM,GAAI;AACR,SAAKC,QAAL,GAAgB,IAAhB;;AACA,SAAKL,KAAL,CAAWI,MAAX;AACD;;AAEDE,EAAAA,OAAO,GAAI;AACT,SAAKD,QAAL,GAAgB,KAAhB;AACA,SAAKN,MAAL,GAAc,EAAd;;AACA,SAAKC,KAAL,CAAWM,OAAX;AACD;;AAEDC,EAAAA,OAAO,GAAI;AACT,QAAI,CAAC,KAAKF,QAAV,EAAoB,OAAO,IAAP;;AAEpB,UAAMG,QAAQ,GAAG,KAAKC,eAAL,EAAjB;;AAEA,WAAOD,QAAQ,CAAC,KAAKZ,gBAAN,CAAR,IAAmC,IAA1C;AACD;;AAEDa,EAAAA,eAAe,GAAI;AACjB,WAAOpB,sBAAsB,MAAM,EAAnC;AACD;;AAEDqB,EAAAA,SAAS,CAAEC,IAAF,EAAQC,QAAR,EAAkB;AACzB,QAAI,CAAC,KAAKP,QAAV,EAAoB,OAAOO,QAAQ,EAAf;;AAEpB,UAAMJ,QAAQ,GAAG,KAAKC,eAAL,EAAjB;;AAEA,SAAKI,MAAL,CAAYF,IAAZ,EAAkBH,QAAlB;;AAEA,QAAI;AACF,aAAOI,QAAQ,EAAf;AACD,KAFD,SAEU;AACR,WAAKE,KAAL,CAAWN,QAAX;AACD;AACF;;AAEDK,EAAAA,MAAM,CAAEF,IAAF,EAAQH,QAAR,EAAkB;AACtB,SAAKT,MAAL,CAAYgB,IAAZ,CAAiBP,QAAQ,CAAC,KAAKZ,gBAAN,CAAzB;;AACAY,IAAAA,QAAQ,CAAC,KAAKZ,gBAAN,CAAR,GAAkCe,IAAlC;AACD;;AAEDG,EAAAA,KAAK,CAAEN,QAAF,EAAY;AACfA,IAAAA,QAAQ,CAAC,KAAKZ,gBAAN,CAAR,GAAkC,KAAKG,MAAL,CAAYiB,GAAZ,EAAlC;AACD;;AAEDd,EAAAA,KAAK,CAAEe,OAAF,EAAWC,IAAX,EAAiBC,cAAjB,EAAiCX,QAAjC,EAA2C;AAC9C,UAAMY,eAAe,GAAG,KAAKX,eAAL,EAAxB;;AACA,UAAME,IAAI,GAAGS,eAAe,CAAC,KAAKxB,gBAAN,CAA5B;;AAEA,QAAIe,IAAJ,EAAU;AACRH,MAAAA,QAAQ,CAAC,KAAKZ,gBAAN,CAAR,GAAkCe,IAAlC;AACD;AACF;;AAvEsB;;AA0EzBU,MAAM,CAACC,OAAP,GAAiB7B,KAAjB","sourcesContent":["'use strict'\n\nconst { createHook, executionAsyncResource } = require('async_hooks')\nconst Base = require('./base')\n\nlet singleton = null\n\nclass Scope extends Base {\n  constructor (config) {\n    if (singleton) return singleton\n\n    super()\n\n    singleton = this\n\n    this._ddResourceStore = Symbol('ddResourceStore')\n    this._config = config\n    this._stack = []\n    this._hook = createHook({\n      init: this._init.bind(this)\n    })\n\n    this.enable()\n  }\n\n  enable () {\n    this._enabled = true\n    this._hook.enable()\n  }\n\n  disable () {\n    this._enabled = false\n    this._stack = []\n    this._hook.disable()\n  }\n\n  _active () {\n    if (!this._enabled) return null\n\n    const resource = this._activeResource()\n\n    return resource[this._ddResourceStore] || null\n  }\n\n  _activeResource () {\n    return executionAsyncResource() || {}\n  }\n\n  _activate (span, callback) {\n    if (!this._enabled) return callback()\n\n    const resource = this._activeResource()\n\n    this._enter(span, resource)\n\n    try {\n      return callback()\n    } finally {\n      this._exit(resource)\n    }\n  }\n\n  _enter (span, resource) {\n    this._stack.push(resource[this._ddResourceStore])\n    resource[this._ddResourceStore] = span\n  }\n\n  _exit (resource) {\n    resource[this._ddResourceStore] = this._stack.pop()\n  }\n\n  _init (asyncId, type, triggerAsyncId, resource) {\n    const triggerResource = this._activeResource()\n    const span = triggerResource[this._ddResourceStore]\n\n    if (span) {\n      resource[this._ddResourceStore] = span\n    }\n  }\n}\n\nmodule.exports = Scope\n"]},"metadata":{},"sourceType":"script"}