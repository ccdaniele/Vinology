{"ast":null,"code":"'use strict';\n\nconst SpanContext = require('opentracing').SpanContext;\n\nclass DatadogSpanContext extends SpanContext {\n  constructor(props) {\n    super();\n    props = props || {};\n    this._traceId = props.traceId;\n    this._spanId = props.spanId;\n    this._parentId = props.parentId || null;\n    this._name = props.name;\n    this._isFinished = props.isFinished || false;\n    this._tags = props.tags || {};\n    this._sampling = props.sampling || {};\n    this._baggageItems = props.baggageItems || {};\n    this._traceFlags = props.traceFlags || {};\n    this._traceFlags.sampled = this._traceFlags.sampled !== false;\n    this._traceFlags.debug = this._traceFlags.debug === true;\n    this._noop = props.noop || null;\n    this._trace = props.trace || {\n      started: [],\n      finished: []\n    };\n  }\n\n  toTraceId() {\n    return this._traceId.toString(10);\n  }\n\n  toSpanId() {\n    return this._spanId.toString(10);\n  }\n\n}\n\nmodule.exports = DatadogSpanContext;","map":{"version":3,"sources":["/Users/danielcalderon/vinology/Vinology-client/node_modules/dd-trace/packages/dd-trace/src/opentracing/span_context.js"],"names":["SpanContext","require","DatadogSpanContext","constructor","props","_traceId","traceId","_spanId","spanId","_parentId","parentId","_name","name","_isFinished","isFinished","_tags","tags","_sampling","sampling","_baggageItems","baggageItems","_traceFlags","traceFlags","sampled","debug","_noop","noop","_trace","trace","started","finished","toTraceId","toString","toSpanId","module","exports"],"mappings":"AAAA;;AAEA,MAAMA,WAAW,GAAGC,OAAO,CAAC,aAAD,CAAP,CAAuBD,WAA3C;;AAEA,MAAME,kBAAN,SAAiCF,WAAjC,CAA6C;AAC3CG,EAAAA,WAAW,CAAEC,KAAF,EAAS;AAClB;AAEAA,IAAAA,KAAK,GAAGA,KAAK,IAAI,EAAjB;AAEA,SAAKC,QAAL,GAAgBD,KAAK,CAACE,OAAtB;AACA,SAAKC,OAAL,GAAeH,KAAK,CAACI,MAArB;AACA,SAAKC,SAAL,GAAiBL,KAAK,CAACM,QAAN,IAAkB,IAAnC;AACA,SAAKC,KAAL,GAAaP,KAAK,CAACQ,IAAnB;AACA,SAAKC,WAAL,GAAmBT,KAAK,CAACU,UAAN,IAAoB,KAAvC;AACA,SAAKC,KAAL,GAAaX,KAAK,CAACY,IAAN,IAAc,EAA3B;AACA,SAAKC,SAAL,GAAiBb,KAAK,CAACc,QAAN,IAAkB,EAAnC;AACA,SAAKC,aAAL,GAAqBf,KAAK,CAACgB,YAAN,IAAsB,EAA3C;AACA,SAAKC,WAAL,GAAmBjB,KAAK,CAACkB,UAAN,IAAoB,EAAvC;AACA,SAAKD,WAAL,CAAiBE,OAAjB,GAA2B,KAAKF,WAAL,CAAiBE,OAAjB,KAA6B,KAAxD;AACA,SAAKF,WAAL,CAAiBG,KAAjB,GAAyB,KAAKH,WAAL,CAAiBG,KAAjB,KAA2B,IAApD;AACA,SAAKC,KAAL,GAAarB,KAAK,CAACsB,IAAN,IAAc,IAA3B;AACA,SAAKC,MAAL,GAAcvB,KAAK,CAACwB,KAAN,IAAe;AAC3BC,MAAAA,OAAO,EAAE,EADkB;AAE3BC,MAAAA,QAAQ,EAAE;AAFiB,KAA7B;AAID;;AAEDC,EAAAA,SAAS,GAAI;AACX,WAAO,KAAK1B,QAAL,CAAc2B,QAAd,CAAuB,EAAvB,CAAP;AACD;;AAEDC,EAAAA,QAAQ,GAAI;AACV,WAAO,KAAK1B,OAAL,CAAayB,QAAb,CAAsB,EAAtB,CAAP;AACD;;AA9B0C;;AAiC7CE,MAAM,CAACC,OAAP,GAAiBjC,kBAAjB","sourcesContent":["'use strict'\n\nconst SpanContext = require('opentracing').SpanContext\n\nclass DatadogSpanContext extends SpanContext {\n  constructor (props) {\n    super()\n\n    props = props || {}\n\n    this._traceId = props.traceId\n    this._spanId = props.spanId\n    this._parentId = props.parentId || null\n    this._name = props.name\n    this._isFinished = props.isFinished || false\n    this._tags = props.tags || {}\n    this._sampling = props.sampling || {}\n    this._baggageItems = props.baggageItems || {}\n    this._traceFlags = props.traceFlags || {}\n    this._traceFlags.sampled = this._traceFlags.sampled !== false\n    this._traceFlags.debug = this._traceFlags.debug === true\n    this._noop = props.noop || null\n    this._trace = props.trace || {\n      started: [],\n      finished: []\n    }\n  }\n\n  toTraceId () {\n    return this._traceId.toString(10)\n  }\n\n  toSpanId () {\n    return this._spanId.toString(10)\n  }\n}\n\nmodule.exports = DatadogSpanContext\n"]},"metadata":{},"sourceType":"script"}