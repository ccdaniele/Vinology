{"ast":null,"code":"\"use strict\";\n/**\n * Copyright 2018 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getAllocationProfile = exports.stopSamplingHeapProfiler = exports.startSamplingHeapProfiler = void 0;\n\nconst path = require(\"path\");\n\nconst findBinding = require('node-gyp-build');\n\nconst profiler = findBinding(path.join(__dirname, '..', '..')); // Wrappers around native heap profiler functions.\n\nfunction startSamplingHeapProfiler(heapIntervalBytes, heapStackDepth) {\n  profiler.heapProfiler.startSamplingHeapProfiler(heapIntervalBytes, heapStackDepth);\n}\n\nexports.startSamplingHeapProfiler = startSamplingHeapProfiler;\n\nfunction stopSamplingHeapProfiler() {\n  profiler.heapProfiler.stopSamplingHeapProfiler();\n}\n\nexports.stopSamplingHeapProfiler = stopSamplingHeapProfiler;\n\nfunction getAllocationProfile() {\n  return profiler.heapProfiler.getAllocationProfile();\n}\n\nexports.getAllocationProfile = getAllocationProfile;","map":{"version":3,"sources":["../../ts/src/heap-profiler-bindings.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;AAcG;;;;;;;AAEH,MAAA,IAAA,GAAA,OAAA,CAAA,MAAA,CAAA;;AAIA,MAAM,WAAW,GAAG,OAAO,CAAC,gBAAD,CAA3B;;AACA,MAAM,QAAQ,GAAG,WAAW,CAAC,IAAI,CAAC,IAAL,CAAU,SAAV,EAAqB,IAArB,EAA2B,IAA3B,CAAD,CAA5B,C,CAEA;;AAEA,SAAgB,yBAAhB,CACE,iBADF,EAEE,cAFF,EAEwB;AAEtB,EAAA,QAAQ,CAAC,YAAT,CAAsB,yBAAtB,CACE,iBADF,EAEE,cAFF;AAID;;AARD,OAAA,CAAA,yBAAA,GAAA,yBAAA;;AAUA,SAAgB,wBAAhB,GAAwC;AACtC,EAAA,QAAQ,CAAC,YAAT,CAAsB,wBAAtB;AACD;;AAFD,OAAA,CAAA,wBAAA,GAAA,wBAAA;;AAIA,SAAgB,oBAAhB,GAAoC;AAClC,SAAO,QAAQ,CAAC,YAAT,CAAsB,oBAAtB,EAAP;AACD;;AAFD,OAAA,CAAA,oBAAA,GAAA,oBAAA","sourceRoot":"","sourcesContent":["\"use strict\";\n/**\n * Copyright 2018 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getAllocationProfile = exports.stopSamplingHeapProfiler = exports.startSamplingHeapProfiler = void 0;\nconst path = require(\"path\");\nconst findBinding = require('node-gyp-build');\nconst profiler = findBinding(path.join(__dirname, '..', '..'));\n// Wrappers around native heap profiler functions.\nfunction startSamplingHeapProfiler(heapIntervalBytes, heapStackDepth) {\n    profiler.heapProfiler.startSamplingHeapProfiler(heapIntervalBytes, heapStackDepth);\n}\nexports.startSamplingHeapProfiler = startSamplingHeapProfiler;\nfunction stopSamplingHeapProfiler() {\n    profiler.heapProfiler.stopSamplingHeapProfiler();\n}\nexports.stopSamplingHeapProfiler = stopSamplingHeapProfiler;\nfunction getAllocationProfile() {\n    return profiler.heapProfiler.getAllocationProfile();\n}\nexports.getAllocationProfile = getAllocationProfile;\n//# sourceMappingURL=heap-profiler-bindings.js.map"]},"metadata":{},"sourceType":"script"}