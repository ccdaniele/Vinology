{"ast":null,"code":"var _jsxFileName = \"/Users/daniel.calderon/Projects/vinology-1.1.0/vinology/Vinology-client/src/App.js\";\n// import './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Home from './components/home.component';\nimport Nav from './components/nav.component';\nimport Register from './components/register.component';\nimport New from './components/newCar.component';\nimport Show from './components/showCar.component';\nimport Queries from './components/queries.component';\nimport Login from './components/login.component';\nimport NewQuery from './components/newQuery.component';\nimport Edit from './components/editQuery.component';\nimport Check from './components/check.component';\nimport { Route, Switch, withRouter } from 'react-router-dom';\nimport Report from './components/report.component';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { currentUser } from './actions/user.action';\nimport { myQueries } from './actions/query.action';\nimport './index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.loadMyQueries = () => {\n      const queriesArray = [];\n      const user = this.props.user.id;\n      fetch('http://localhost:3000/api/v1/queries').then(resp => resp.json()).then(data => {\n        queriesArray.push(data.filter(query => query.user_id === user));\n        this.props.myQueries(queriesArray);\n        console.log('queries from app');\n      });\n    };\n\n    this.state = {\n      currentUser: ''\n    };\n  }\n\n  componentDidMount() {\n    const token = localStorage.getItem('token');\n\n    if (!token) {\n      this.props.history.push('/login');\n    } else {\n      const reqObj = {\n        method: 'GET',\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      };\n      fetch('http://localhost:3000/api/v1/current_user', reqObj).then(resp => resp.json()).then(data => {\n        console.log(data, \"fetch app\");\n\n        if (data.error) {\n          this.props.history.push('/login');\n        } else {\n          this.props.currentUser(data);\n          this.loadMyQueries();\n        }\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Nav, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/\",\n          component: Home\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/login\",\n          component: Login\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/register\",\n          component: Register\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/checkcode\",\n          component: Check\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/newcar\",\n          component: New\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/showcar\",\n          component: Show\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/queries\",\n          component: Queries\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/report\",\n          component: Report\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/newquery\",\n          component: NewQuery\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/edit\",\n          component: Edit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 5\n    }, this);\n  }\n\n}\n\nconst mapDispathToProps = {\n  currentUser,\n  myQueries\n};\n\nconst mapStateToProps = state => {\n  return {\n    user: state.userData\n  };\n};\n\nexport default connect(mapStateToProps, mapDispathToProps)(withRouter(App));","map":{"version":3,"sources":["/Users/daniel.calderon/Projects/vinology-1.1.0/vinology/Vinology-client/src/App.js"],"names":["Home","Nav","Register","New","Show","Queries","Login","NewQuery","Edit","Check","Route","Switch","withRouter","Report","React","Component","connect","currentUser","myQueries","App","constructor","loadMyQueries","queriesArray","user","props","id","fetch","then","resp","json","data","push","filter","query","user_id","console","log","state","componentDidMount","token","localStorage","getItem","history","reqObj","method","headers","error","render","mapDispathToProps","mapStateToProps","userData"],"mappings":"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","sourcesContent":["// import './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Home from './components/home.component';\nimport Nav from './components/nav.component'\nimport Register from './components/register.component'\nimport New from './components/newCar.component'\nimport Show from './components/showCar.component'\nimport Queries from './components/queries.component'\nimport Login from './components/login.component'\nimport NewQuery from './components/newQuery.component'\nimport Edit from './components/editQuery.component'\nimport Check from './components/check.component'\nimport {Route, Switch, withRouter} from 'react-router-dom'\nimport Report from './components/report.component';\nimport React, {Component} from 'react'\nimport {connect} from 'react-redux'\nimport {currentUser} from './actions/user.action'\nimport {myQueries} from './actions/query.action'\nimport './index.css';\n\nclass App extends Component{\n  constructor(){\n    super()\n    this.state={\n      currentUser: ''\n    }\n  }\n\n  loadMyQueries=()=>{\n    \n    const queriesArray = []\n    const user = this.props.user.id\n    \n    \n  \n    fetch('http://localhost:3000/api/v1/queries')\n      .then(resp=>resp.json())\n      .then(data=>{\n     \n       \n        queriesArray.push(data.filter(query=>query.user_id === user))\n            this.props.myQueries(queriesArray) \n            console.log('queries from app')\n        })\n\n    }\n\n  componentDidMount(){\n\n    const token = localStorage.getItem('token')\n\n    if(!token) {this.props.history.push('/login')\n        \n    }else{\n\n      const reqObj ={\n        method: 'GET',\n        headers: {\n          'Authorization': `Bearer ${token}` \n        }\n\n        }\n          \n      fetch('http://localhost:3000/api/v1/current_user', reqObj)\n      .then(resp => resp.json())\n      .then(data=>{\n        console.log(data,\"fetch app\")\n                if (data.error){\n                this.props.history.push('/login')\n                }else{\n                 \n                this.props.currentUser(data)\n                this.loadMyQueries()\n                }\n            })\n    }\n   \n  }\n\nrender(){\n  \n  return (\n    <div>\n          <Nav/>\n            <Switch>\n              <Route exact path=\"/\" component={Home}/>\n              <Route exact path=\"/login\" component={Login}/>\n              <Route exact path=\"/register\" component={Register}/>\n              <Route exact path=\"/checkcode\" component={Check}/>\n              <Route exact path=\"/newcar\" component={New}/>\n              <Route exact path=\"/showcar\" component={Show}/>\n              <Route exact path=\"/queries\" component={Queries}/>\n              <Route exact path=\"/report\" component={Report}/>\n              <Route exact path=\"/newquery\" component={NewQuery}/>\n              <Route exact path=\"/edit\" component={Edit}/>\n            </Switch>\n    </div>\n  );\n}\n}\n\nconst mapDispathToProps ={\n\n  currentUser, myQueries\n}\n\nconst mapStateToProps = (state)=>{\n  return {\n    \n      user: state.userData\n  }\n}\n\n\nexport default connect (mapStateToProps, mapDispathToProps) (withRouter(App));\n"]},"metadata":{},"sourceType":"module"}