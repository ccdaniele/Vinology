{"ast":null,"code":"\"use strict\";\n/**\n * Copyright 2019 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.encodeSync = exports.encode = void 0;\n\nconst pify = require(\"pify\");\n\nconst zlib_1 = require(\"zlib\");\n\nconst profile_1 = require(\"../../proto/profile\");\n\nconst gzipPromise = pify(zlib_1.gzip);\n\nfunction encode(profile) {\n  return __awaiter(this, void 0, void 0, function* () {\n    const buffer = profile_1.perftools.profiles.Profile.encode(profile).finish();\n    return gzipPromise(buffer);\n  });\n}\n\nexports.encode = encode;\n\nfunction encodeSync(profile) {\n  const buffer = profile_1.perftools.profiles.Profile.encode(profile).finish();\n  return zlib_1.gzipSync(buffer);\n}\n\nexports.encodeSync = encodeSync;","map":{"version":3,"sources":["../../ts/src/profile-encoder.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;AAcG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEH,MAAA,IAAA,GAAA,OAAA,CAAA,MAAA,CAAA;;AACA,MAAA,MAAA,GAAA,OAAA,CAAA,MAAA,CAAA;;AAEA,MAAA,SAAA,GAAA,OAAA,CAAA,qBAAA,CAAA;;AAEA,MAAM,WAAW,GAAG,IAAI,CAAC,MAAA,CAAA,IAAD,CAAxB;;AAEA,SAAsB,MAAtB,CACE,OADF,EACsC;;AAEpC,UAAM,MAAM,GAAG,SAAA,CAAA,SAAA,CAAU,QAAV,CAAmB,OAAnB,CAA2B,MAA3B,CAAkC,OAAlC,EAA2C,MAA3C,EAAf;AACA,WAAO,WAAW,CAAC,MAAD,CAAlB;AACD,G;AAAA;;AALD,OAAA,CAAA,MAAA,GAAA,MAAA;;AAOA,SAAgB,UAAhB,CAA2B,OAA3B,EAA+D;AAC7D,QAAM,MAAM,GAAG,SAAA,CAAA,SAAA,CAAU,QAAV,CAAmB,OAAnB,CAA2B,MAA3B,CAAkC,OAAlC,EAA2C,MAA3C,EAAf;AACA,SAAO,MAAA,CAAA,QAAA,CAAS,MAAT,CAAP;AACD;;AAHD,OAAA,CAAA,UAAA,GAAA,UAAA","sourceRoot":"","sourcesContent":["\"use strict\";\n/**\n * Copyright 2019 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.encodeSync = exports.encode = void 0;\nconst pify = require(\"pify\");\nconst zlib_1 = require(\"zlib\");\nconst profile_1 = require(\"../../proto/profile\");\nconst gzipPromise = pify(zlib_1.gzip);\nfunction encode(profile) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const buffer = profile_1.perftools.profiles.Profile.encode(profile).finish();\n        return gzipPromise(buffer);\n    });\n}\nexports.encode = encode;\nfunction encodeSync(profile) {\n    const buffer = profile_1.perftools.profiles.Profile.encode(profile).finish();\n    return zlib_1.gzipSync(buffer);\n}\nexports.encodeSync = encodeSync;\n//# sourceMappingURL=profile-encoder.js.map"]},"metadata":{},"sourceType":"script"}