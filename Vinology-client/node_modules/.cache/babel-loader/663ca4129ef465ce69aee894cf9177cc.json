{"ast":null,"code":"var _jsxFileName = \"/Users/daniel.calderon/vinology-1.1.0/vinology/Vinology-client/src/components/login.component.js\";\nimport '../css/login.css';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { loginSuccess } from '../actions/user.action';\nimport { myQueries } from '../actions/query.action';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Login extends Component {\n  constructor() {\n    super();\n\n    this.loadMyQueries = () => {\n      const queriesArray = [];\n      const user = this.props.user.id;\n      fetch('http://localhost:3000/api/v1/queries').then(resp => resp.json()).then(data => {\n        queriesArray.push(data.filter(query => query.user_id === user));\n        this.props.myQueries(queriesArray);\n        console.log('queries from login');\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      const newObj = {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          user: {\n            username: this.state.username,\n            password: this.state.password\n          }\n        })\n      };\n      this.setState({\n        username: '',\n        password: ''\n      });\n      fetch('http://localhost:3000//api/v1/login', newObj).then(resp => resp.json()).then(data => {\n        if (data.message) {\n          this.setState({\n            error: data.message\n          });\n          window.location.reload(false);\n        } else {\n          this.props.loginSuccess(data.user);\n          this.setState({\n            loginSuccess: data.user,\n            token: data.jwt\n          });\n          localStorage.setItem('token', data.jwt);\n          this.loadMyQueries();\n          this.props.history.push('/');\n        }\n      });\n    };\n\n    this.state = {\n      username: '',\n      password: '',\n      loginSuccess: \" \",\n      error: '',\n      queries: []\n    };\n  }\n\n  render() {\n    const size = {\n      height: 30,\n      width: 150\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"body-login\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"wrapper\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"inner-sign-up\",\n            children: [this.state.error ? /*#__PURE__*/_jsxDEV(\"h4\", {\n              style: {\n                color: 'white'\n              },\n              children: this.state.error\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 34\n            }, this) : null, /*#__PURE__*/_jsxDEV(\"form\", {\n              className: \"login-form\",\n              onSubmit: this.handleSubmit,\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                id: \"logoNav\",\n                style: size,\n                className: \"form-text\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"form-text\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 123,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  className: \"form-control\",\n                  placeholder: \"Username\",\n                  onChange: e => this.setState({\n                    username: e.target.value\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 124,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"form-text\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 128,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"password\",\n                  className: \"form-control\",\n                  placeholder: \"Password\",\n                  onChange: e => this.setState({\n                    password: e.target.value\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 129,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-secondary btn-block\",\n                children: \"Sign in\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 11\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.userData,\n    queries: state.queryData\n  };\n};\n\nconst mapDispatchToProps = {\n  loginSuccess,\n  myQueries\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);","map":{"version":3,"sources":["/Users/daniel.calderon/vinology-1.1.0/vinology/Vinology-client/src/components/login.component.js"],"names":["React","Component","connect","loginSuccess","myQueries","Login","constructor","loadMyQueries","queriesArray","user","props","id","fetch","then","resp","json","data","push","filter","query","user_id","console","log","handleSubmit","e","preventDefault","newObj","method","headers","body","JSON","stringify","username","state","password","setState","message","error","window","location","reload","token","jwt","localStorage","setItem","history","queries","render","size","height","width","color","target","value","mapStateToProps","userData","queryData","mapDispatchToProps"],"mappings":"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","sourcesContent":["import '../css/login.css'\nimport React, {Component} from 'react'\nimport {connect} from 'react-redux'\nimport {loginSuccess} from '../actions/user.action'\nimport {myQueries} from '../actions/query.action'\n\n\n\n\n\n\n class Login extends Component {\n     constructor(){\n        super()\n        this.state={\n            username:'',\n            password:'',\n            loginSuccess:\" \",\n            error: '',\n            queries: [],\n        }\n        \n    }\n\n  \n\n    loadMyQueries=()=>{\n    \n    const queriesArray = []\n    const user = this.props.user.id\n    \n    \n  \n    fetch('http://localhost:3000/api/v1/queries')\n      .then(resp=>resp.json())\n      .then(data=>{\n     \n       \n        queriesArray.push(data.filter(query=>query.user_id === user))\n            this.props.myQueries(queriesArray) \n    console.log('queries from login')\n        })\n\n    }\n\n    handleSubmit = (e) =>{\n        e.preventDefault()\n    \n        const newObj = {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              user: {\n                username: this.state.username,\n                password: this.state.password\n              }\n            })}\n          \n\n            this.setState({\n              username: '',\n              password: ''\n            })\n\n        fetch('http://localhost:3000//api/v1/login', newObj)\n          \n          .then(resp => resp.json())\n          .then(data => {\n            if (data.message) { \n              \n              this.setState({\n                error: data.message\n              })\n              window.location.reload(false);\n            } else {\n              this.props.loginSuccess(data.user)\n             \n      \n\n              this.setState({loginSuccess:data.user,\n            token:data.jwt})\n\n            localStorage.setItem('token',data.jwt)\n          \n            \n            this.loadMyQueries()\n            this.props.history.push('/')\n\n            }\n          })\n\n\n      }\n\n\n\n\n\n    render(){\n     \n  \n\n    const size ={\n      height: 30,\n      width: 150,\n      \n  }\n        return(\n\n          \n        \n          <div>\n          <div className='body-login' >\n          \n          <div className=\"wrapper\">\n            <div className=\"inner-sign-up\">\n              {this.state.error? <h4 style={{color:'white'}}>{this.state.error}</h4> : null}\n                <form className=\"login-form\" onSubmit={this.handleSubmit}>\n                    <h3 id='logoNav' style={size}className=\"form-text\"></h3> \n                      <div className='form-group'>\n                          <label className=\"form-text\"></label>\n                        <input type='text' className='form-control' placeholder='Username' onChange={e=> this.setState({username: e.target.value})}/>\n                            \n                      </div>\n                      <div className='form-group'>\n                        <label  className=\"form-text\"></label>\n                      <input type='password' className='form-control' placeholder='Password' onChange={e=> this.setState({password: e.target.value})}/>\n                    </div>\n                  <button className='btn btn-secondary btn-block'>Sign in</button>\n                </form> \n            </div>\n          </div>\n          </div>\n          \n          </div>          \n\n        )\n    }\n}\n\nconst mapStateToProps = (state)=>{\n  return {\n      user: state.userData,\n      queries: state.queryData\n  }\n}\n\nconst mapDispatchToProps = {\n    loginSuccess, myQueries\n}\n\n\n\nexport default connect (mapStateToProps, mapDispatchToProps)(Login)\n\n"]},"metadata":{},"sourceType":"module"}