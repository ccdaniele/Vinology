{"ast":null,"code":"'use strict';\n\nconst web = require('../../dd-trace/src/plugins/util/web');\n\nconst routerPlugin = require('../../datadog-plugin-router/src');\n\nfunction createWrapHandle(tracer, config) {\n  config = web.normalizeConfig(config);\n  return function wrapHandle(handle) {\n    return function handleWithTrace(req, res) {\n      web.instrument(tracer, config, req, res, 'express.request');\n      return handle.apply(this, arguments);\n    };\n  };\n}\n\nfunction patch(express, tracer, config) {\n  this.wrap(express.application, 'handle', createWrapHandle(tracer, config));\n  routerPlugin.patch.call(this, {\n    prototype: express.Router\n  }, tracer, config);\n}\n\nfunction unpatch(express) {\n  this.unwrap(express.application, 'handle');\n  routerPlugin.unpatch.call(this, {\n    prototype: express.Router\n  });\n}\n\nmodule.exports = {\n  name: 'express',\n  versions: ['>=4'],\n  patch,\n  unpatch\n};","map":{"version":3,"sources":["/Users/danielcalderon/vinology/Vinology-client/node_modules/dd-trace/packages/datadog-plugin-express/src/index.js"],"names":["web","require","routerPlugin","createWrapHandle","tracer","config","normalizeConfig","wrapHandle","handle","handleWithTrace","req","res","instrument","apply","arguments","patch","express","wrap","application","call","prototype","Router","unpatch","unwrap","module","exports","name","versions"],"mappings":"AAAA;;AAEA,MAAMA,GAAG,GAAGC,OAAO,CAAC,qCAAD,CAAnB;;AACA,MAAMC,YAAY,GAAGD,OAAO,CAAC,iCAAD,CAA5B;;AAEA,SAASE,gBAAT,CAA2BC,MAA3B,EAAmCC,MAAnC,EAA2C;AACzCA,EAAAA,MAAM,GAAGL,GAAG,CAACM,eAAJ,CAAoBD,MAApB,CAAT;AAEA,SAAO,SAASE,UAAT,CAAqBC,MAArB,EAA6B;AAClC,WAAO,SAASC,eAAT,CAA0BC,GAA1B,EAA+BC,GAA/B,EAAoC;AACzCX,MAAAA,GAAG,CAACY,UAAJ,CAAeR,MAAf,EAAuBC,MAAvB,EAA+BK,GAA/B,EAAoCC,GAApC,EAAyC,iBAAzC;AAEA,aAAOH,MAAM,CAACK,KAAP,CAAa,IAAb,EAAmBC,SAAnB,CAAP;AACD,KAJD;AAKD,GAND;AAOD;;AAED,SAASC,KAAT,CAAgBC,OAAhB,EAAyBZ,MAAzB,EAAiCC,MAAjC,EAAyC;AACvC,OAAKY,IAAL,CAAUD,OAAO,CAACE,WAAlB,EAA+B,QAA/B,EAAyCf,gBAAgB,CAACC,MAAD,EAASC,MAAT,CAAzD;AACAH,EAAAA,YAAY,CAACa,KAAb,CAAmBI,IAAnB,CAAwB,IAAxB,EAA8B;AAAEC,IAAAA,SAAS,EAAEJ,OAAO,CAACK;AAArB,GAA9B,EAA6DjB,MAA7D,EAAqEC,MAArE;AACD;;AAED,SAASiB,OAAT,CAAkBN,OAAlB,EAA2B;AACzB,OAAKO,MAAL,CAAYP,OAAO,CAACE,WAApB,EAAiC,QAAjC;AACAhB,EAAAA,YAAY,CAACoB,OAAb,CAAqBH,IAArB,CAA0B,IAA1B,EAAgC;AAAEC,IAAAA,SAAS,EAAEJ,OAAO,CAACK;AAArB,GAAhC;AACD;;AAEDG,MAAM,CAACC,OAAP,GAAiB;AACfC,EAAAA,IAAI,EAAE,SADS;AAEfC,EAAAA,QAAQ,EAAE,CAAC,KAAD,CAFK;AAGfZ,EAAAA,KAHe;AAIfO,EAAAA;AAJe,CAAjB","sourcesContent":["'use strict'\n\nconst web = require('../../dd-trace/src/plugins/util/web')\nconst routerPlugin = require('../../datadog-plugin-router/src')\n\nfunction createWrapHandle (tracer, config) {\n  config = web.normalizeConfig(config)\n\n  return function wrapHandle (handle) {\n    return function handleWithTrace (req, res) {\n      web.instrument(tracer, config, req, res, 'express.request')\n\n      return handle.apply(this, arguments)\n    }\n  }\n}\n\nfunction patch (express, tracer, config) {\n  this.wrap(express.application, 'handle', createWrapHandle(tracer, config))\n  routerPlugin.patch.call(this, { prototype: express.Router }, tracer, config)\n}\n\nfunction unpatch (express) {\n  this.unwrap(express.application, 'handle')\n  routerPlugin.unpatch.call(this, { prototype: express.Router })\n}\n\nmodule.exports = {\n  name: 'express',\n  versions: ['>=4'],\n  patch,\n  unpatch\n}\n"]},"metadata":{},"sourceType":"script"}