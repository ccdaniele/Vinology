{"ast":null,"code":"'use strict';\n\nconst analyticsSampler = require('../../dd-trace/src/analytics_sampler');\n\nconst tx = require('../../dd-trace/src/plugins/util/tx');\n\nfunction createWrapInnerExecute(tracer, config) {\n  const isValid = args => {\n    return args.length === 4 || typeof args[3] === 'function';\n  };\n\n  return function wrapInnerExecute(_innerExecute) {\n    return function _innerExecuteWithTrace(query, params, execOptions, callback) {\n      if (!isValid(arguments)) {\n        return _innerExecute.apply(this, arguments);\n      }\n\n      const scope = tracer.scope();\n      const span = start(tracer, config, this, query);\n      return scope.bind(_innerExecute, span).apply(this, tx.wrap(span, arguments));\n    };\n  };\n}\n\nfunction createWrapExecute(tracer, config) {\n  return function wrapExecute(_execute) {\n    return function _executeWithTrace(query, params, execOptions, callback) {\n      const span = start(tracer, config, this, query);\n      const promise = tracer.scope().bind(_execute, span).apply(this, arguments);\n      return tx.wrap(span, promise);\n    };\n  };\n}\n\nfunction createWrapExecutionStart(tracer, config) {\n  return function wrapExecutionStart(start) {\n    return function startWithTrace(getHostCallback) {\n      const span = tracer.scope().active();\n      const execution = this;\n\n      if (!isRequestValid(this, arguments, 1, span)) {\n        return start.apply(this, arguments);\n      }\n\n      arguments[0] = function () {\n        addHost(span, execution._connection);\n        return getHostCallback.apply(this, arguments);\n      };\n\n      return start.apply(this, arguments);\n    };\n  };\n}\n\nfunction createWrapSendOnConnection(tracer, config) {\n  return function wrapSendOnConnection(_sendOnConnection) {\n    return function _sendOnConnectionWithTrace() {\n      const span = tracer.scope().active();\n      addHost(span, this._connection);\n      return _sendOnConnection.apply(this, arguments);\n    };\n  };\n}\n\nfunction createWrapSend(tracer, config) {\n  return function wrapSend(send) {\n    return function sendWithTrace(request, options, callback) {\n      const span = tracer.scope().active();\n      const handler = this;\n\n      if (!isRequestValid(this, arguments, 3, span)) {\n        return send.apply(this, arguments);\n      }\n\n      arguments[2] = function () {\n        addHost(span, handler.connection);\n        return callback.apply(this, arguments);\n      };\n\n      return send.apply(this, arguments);\n    };\n  };\n}\n\nfunction createWrapBatch(tracer, config) {\n  return function wrapBatch(batch) {\n    return function batchWithTrace(queries, options, callback) {\n      const query = combine(queries);\n      const span = start(tracer, config, this, query);\n      const scope = tracer.scope();\n      const fn = scope.bind(batch, span);\n\n      try {\n        return tx.wrap(span, fn.apply(this, tx.wrap(span, arguments)));\n      } catch (e) {\n        finish(span, e);\n        throw e;\n      }\n    };\n  };\n}\n\nfunction createWrapStream(tracer, config) {\n  return function wrapStream(stream) {\n    return function streamWithTrace(query, params, options, callback) {\n      return tracer.scope().bind(stream.apply(this, arguments));\n    };\n  };\n}\n\nfunction start(tracer, config, client = {}, query) {\n  const scope = tracer.scope();\n  const childOf = scope.active();\n  const span = tracer.startSpan('cassandra.query', {\n    childOf,\n    tags: {\n      'service.name': config.service || `${tracer._service}-cassandra`,\n      'resource.name': trim(query, 5000),\n      'span.type': 'cassandra',\n      'span.kind': 'client',\n      'db.type': 'cassandra',\n      'cassandra.query': query,\n      'cassandra.keyspace': client.keyspace\n    }\n  });\n  analyticsSampler.sample(span, config.measured);\n  return span;\n}\n\nfunction finish(span, error) {\n  addError(span, error);\n  span.finish();\n  return error;\n}\n\nfunction addTag(span, key, value) {\n  if (value) {\n    span.setTag(key, value);\n  }\n}\n\nfunction addHost(span, connection) {\n  if (span && connection) {\n    addTag(span, 'out.host', connection.address);\n    addTag(span, 'out.port', connection.port);\n  }\n}\n\nfunction addError(span, error) {\n  if (error && error instanceof Error) {\n    span.addTags({\n      'error.type': error.name,\n      'error.msg': error.message,\n      'error.stack': error.stack\n    });\n  }\n\n  return error;\n}\n\nfunction isRequestValid(exec, args, length, span) {\n  if (!exec) return false;\n  if (args.length !== length || typeof args[length - 1] !== 'function') return false;\n  if (!span || span.context()._name !== 'cassandra.query') return false;\n  return true;\n}\n\nfunction combine(queries) {\n  if (!Array.isArray(queries)) return [];\n  return queries.map(query => (query.query || query).replace(/;?$/, ';')).join(' ');\n}\n\nfunction trim(str, size) {\n  if (!str || str.length <= size) return str;\n  return `${str.substr(0, size - 3)}...`;\n}\n\nmodule.exports = [{\n  name: 'cassandra-driver',\n  versions: ['>=3.0.0'],\n\n  patch(cassandra, tracer, config) {\n    this.wrap(cassandra.Client.prototype, 'batch', createWrapBatch(tracer, config));\n    this.wrap(cassandra.Client.prototype, 'stream', createWrapStream(tracer, config));\n  },\n\n  unpatch(cassandra) {\n    this.unwrap(cassandra.Client.prototype, 'batch');\n    this.unwrap(cassandra.Client.prototype, 'stream');\n  }\n\n}, {\n  name: 'cassandra-driver',\n  versions: ['>=4.4'],\n\n  patch(cassandra, tracer, config) {\n    this.wrap(cassandra.Client.prototype, '_execute', createWrapExecute(tracer, config));\n  },\n\n  unpatch(cassandra) {\n    this.unwrap(cassandra.Client.prototype, '_execute');\n  }\n\n}, {\n  name: 'cassandra-driver',\n  versions: ['3 - 4.3'],\n\n  patch(cassandra, tracer, config) {\n    this.wrap(cassandra.Client.prototype, '_innerExecute', createWrapInnerExecute(tracer, config));\n  },\n\n  unpatch(cassandra) {\n    this.unwrap(cassandra.Client.prototype, '_innerExecute');\n  }\n\n}, {\n  name: 'cassandra-driver',\n  versions: ['>=3.3'],\n  file: 'lib/request-execution.js',\n\n  patch(RequestExecution, tracer, config) {\n    this.wrap(RequestExecution.prototype, '_sendOnConnection', createWrapSendOnConnection(tracer, config));\n  },\n\n  unpatch(RequestExecution) {\n    this.unwrap(RequestExecution.prototype, '_sendOnConnection');\n  }\n\n}, {\n  name: 'cassandra-driver',\n  versions: ['3.3 - 4.3'],\n  file: 'lib/request-execution.js',\n\n  patch(RequestExecution, tracer, config) {\n    this.wrap(RequestExecution.prototype, 'start', createWrapExecutionStart(tracer, config));\n  },\n\n  unpatch(RequestExecution) {\n    this.unwrap(RequestExecution.prototype, 'start');\n  }\n\n}, {\n  name: 'cassandra-driver',\n  versions: ['3 - 3.2'],\n  file: 'lib/request-handler.js',\n\n  patch(RequestHandler, tracer, config) {\n    this.wrap(RequestHandler.prototype, 'send', createWrapSend(tracer, config));\n  },\n\n  unpatch(RequestHandler) {\n    this.unwrap(RequestHandler.prototype, 'send');\n  }\n\n}];","map":{"version":3,"sources":["/Users/danielcalderon/vinology/Vinology-client/node_modules/dd-trace/packages/datadog-plugin-cassandra-driver/src/index.js"],"names":["analyticsSampler","require","tx","createWrapInnerExecute","tracer","config","isValid","args","length","wrapInnerExecute","_innerExecute","_innerExecuteWithTrace","query","params","execOptions","callback","arguments","apply","scope","span","start","bind","wrap","createWrapExecute","wrapExecute","_execute","_executeWithTrace","promise","createWrapExecutionStart","wrapExecutionStart","startWithTrace","getHostCallback","active","execution","isRequestValid","addHost","_connection","createWrapSendOnConnection","wrapSendOnConnection","_sendOnConnection","_sendOnConnectionWithTrace","createWrapSend","wrapSend","send","sendWithTrace","request","options","handler","connection","createWrapBatch","wrapBatch","batch","batchWithTrace","queries","combine","fn","e","finish","createWrapStream","wrapStream","stream","streamWithTrace","client","childOf","startSpan","tags","service","_service","trim","keyspace","sample","measured","error","addError","addTag","key","value","setTag","address","port","Error","addTags","name","message","stack","exec","context","_name","Array","isArray","map","replace","join","str","size","substr","module","exports","versions","patch","cassandra","Client","prototype","unpatch","unwrap","file","RequestExecution","RequestHandler"],"mappings":"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","sourcesContent":["'use strict'\n\nconst analyticsSampler = require('../../dd-trace/src/analytics_sampler')\nconst tx = require('../../dd-trace/src/plugins/util/tx')\n\nfunction createWrapInnerExecute (tracer, config) {\n  const isValid = (args) => {\n    return args.length === 4 || typeof args[3] === 'function'\n  }\n\n  return function wrapInnerExecute (_innerExecute) {\n    return function _innerExecuteWithTrace (query, params, execOptions, callback) {\n      if (!isValid(arguments)) {\n        return _innerExecute.apply(this, arguments)\n      }\n\n      const scope = tracer.scope()\n      const span = start(tracer, config, this, query)\n\n      return scope.bind(_innerExecute, span).apply(this, tx.wrap(span, arguments))\n    }\n  }\n}\n\nfunction createWrapExecute (tracer, config) {\n  return function wrapExecute (_execute) {\n    return function _executeWithTrace (query, params, execOptions, callback) {\n      const span = start(tracer, config, this, query)\n      const promise = tracer.scope().bind(_execute, span).apply(this, arguments)\n\n      return tx.wrap(span, promise)\n    }\n  }\n}\n\nfunction createWrapExecutionStart (tracer, config) {\n  return function wrapExecutionStart (start) {\n    return function startWithTrace (getHostCallback) {\n      const span = tracer.scope().active()\n      const execution = this\n\n      if (!isRequestValid(this, arguments, 1, span)) {\n        return start.apply(this, arguments)\n      }\n\n      arguments[0] = function () {\n        addHost(span, execution._connection)\n        return getHostCallback.apply(this, arguments)\n      }\n\n      return start.apply(this, arguments)\n    }\n  }\n}\n\nfunction createWrapSendOnConnection (tracer, config) {\n  return function wrapSendOnConnection (_sendOnConnection) {\n    return function _sendOnConnectionWithTrace () {\n      const span = tracer.scope().active()\n\n      addHost(span, this._connection)\n\n      return _sendOnConnection.apply(this, arguments)\n    }\n  }\n}\n\nfunction createWrapSend (tracer, config) {\n  return function wrapSend (send) {\n    return function sendWithTrace (request, options, callback) {\n      const span = tracer.scope().active()\n      const handler = this\n\n      if (!isRequestValid(this, arguments, 3, span)) {\n        return send.apply(this, arguments)\n      }\n\n      arguments[2] = function () {\n        addHost(span, handler.connection)\n        return callback.apply(this, arguments)\n      }\n\n      return send.apply(this, arguments)\n    }\n  }\n}\n\nfunction createWrapBatch (tracer, config) {\n  return function wrapBatch (batch) {\n    return function batchWithTrace (queries, options, callback) {\n      const query = combine(queries)\n      const span = start(tracer, config, this, query)\n      const scope = tracer.scope()\n      const fn = scope.bind(batch, span)\n\n      try {\n        return tx.wrap(span, fn.apply(this, tx.wrap(span, arguments)))\n      } catch (e) {\n        finish(span, e)\n        throw e\n      }\n    }\n  }\n}\n\nfunction createWrapStream (tracer, config) {\n  return function wrapStream (stream) {\n    return function streamWithTrace (query, params, options, callback) {\n      return tracer.scope().bind(stream.apply(this, arguments))\n    }\n  }\n}\n\nfunction start (tracer, config, client = {}, query) {\n  const scope = tracer.scope()\n  const childOf = scope.active()\n  const span = tracer.startSpan('cassandra.query', {\n    childOf,\n    tags: {\n      'service.name': config.service || `${tracer._service}-cassandra`,\n      'resource.name': trim(query, 5000),\n      'span.type': 'cassandra',\n      'span.kind': 'client',\n      'db.type': 'cassandra',\n      'cassandra.query': query,\n      'cassandra.keyspace': client.keyspace\n    }\n  })\n\n  analyticsSampler.sample(span, config.measured)\n\n  return span\n}\n\nfunction finish (span, error) {\n  addError(span, error)\n\n  span.finish()\n\n  return error\n}\n\nfunction addTag (span, key, value) {\n  if (value) {\n    span.setTag(key, value)\n  }\n}\n\nfunction addHost (span, connection) {\n  if (span && connection) {\n    addTag(span, 'out.host', connection.address)\n    addTag(span, 'out.port', connection.port)\n  }\n}\n\nfunction addError (span, error) {\n  if (error && error instanceof Error) {\n    span.addTags({\n      'error.type': error.name,\n      'error.msg': error.message,\n      'error.stack': error.stack\n    })\n  }\n\n  return error\n}\n\nfunction isRequestValid (exec, args, length, span) {\n  if (!exec) return false\n  if (args.length !== length || typeof args[length - 1] !== 'function') return false\n  if (!span || span.context()._name !== 'cassandra.query') return false\n\n  return true\n}\n\nfunction combine (queries) {\n  if (!Array.isArray(queries)) return []\n\n  return queries\n    .map(query => (query.query || query).replace(/;?$/, ';'))\n    .join(' ')\n}\n\nfunction trim (str, size) {\n  if (!str || str.length <= size) return str\n\n  return `${str.substr(0, size - 3)}...`\n}\n\nmodule.exports = [\n  {\n    name: 'cassandra-driver',\n    versions: ['>=3.0.0'],\n    patch (cassandra, tracer, config) {\n      this.wrap(cassandra.Client.prototype, 'batch', createWrapBatch(tracer, config))\n      this.wrap(cassandra.Client.prototype, 'stream', createWrapStream(tracer, config))\n    },\n    unpatch (cassandra) {\n      this.unwrap(cassandra.Client.prototype, 'batch')\n      this.unwrap(cassandra.Client.prototype, 'stream')\n    }\n  },\n  {\n    name: 'cassandra-driver',\n    versions: ['>=4.4'],\n    patch (cassandra, tracer, config) {\n      this.wrap(cassandra.Client.prototype, '_execute', createWrapExecute(tracer, config))\n    },\n    unpatch (cassandra) {\n      this.unwrap(cassandra.Client.prototype, '_execute')\n    }\n  },\n  {\n    name: 'cassandra-driver',\n    versions: ['3 - 4.3'],\n    patch (cassandra, tracer, config) {\n      this.wrap(cassandra.Client.prototype, '_innerExecute', createWrapInnerExecute(tracer, config))\n    },\n    unpatch (cassandra) {\n      this.unwrap(cassandra.Client.prototype, '_innerExecute')\n    }\n  },\n  {\n    name: 'cassandra-driver',\n    versions: ['>=3.3'],\n    file: 'lib/request-execution.js',\n    patch (RequestExecution, tracer, config) {\n      this.wrap(RequestExecution.prototype, '_sendOnConnection', createWrapSendOnConnection(tracer, config))\n    },\n    unpatch (RequestExecution) {\n      this.unwrap(RequestExecution.prototype, '_sendOnConnection')\n    }\n  },\n  {\n    name: 'cassandra-driver',\n    versions: ['3.3 - 4.3'],\n    file: 'lib/request-execution.js',\n    patch (RequestExecution, tracer, config) {\n      this.wrap(RequestExecution.prototype, 'start', createWrapExecutionStart(tracer, config))\n    },\n    unpatch (RequestExecution) {\n      this.unwrap(RequestExecution.prototype, 'start')\n    }\n  },\n  {\n    name: 'cassandra-driver',\n    versions: ['3 - 3.2'],\n    file: 'lib/request-handler.js',\n    patch (RequestHandler, tracer, config) {\n      this.wrap(RequestHandler.prototype, 'send', createWrapSend(tracer, config))\n    },\n    unpatch (RequestHandler) {\n      this.unwrap(RequestHandler.prototype, 'send')\n    }\n  }\n]\n"]},"metadata":{},"sourceType":"script"}