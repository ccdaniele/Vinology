{"ast":null,"code":"'use strict';\n\nconst web = require('../../dd-trace/src/plugins/util/web');\n\nfunction createWrapOn() {\n  return function wrapOn(on) {\n    return function onWithTrace(method, path, opts) {\n      const index = typeof opts === 'function' ? 2 : 3;\n      const handler = arguments[index];\n\n      const wrapper = function (req) {\n        web.patch(req);\n        web.enterRoute(req, path);\n        req._datadog.routeEntered = true;\n        return handler.apply(this, arguments);\n      };\n\n      if (typeof handler === 'function') {\n        arguments[index] = wrapper;\n      }\n\n      return on.apply(this, arguments);\n    };\n  };\n}\n\nmodule.exports = [{\n  name: 'find-my-way',\n  versions: ['>=1'],\n\n  patch(Router, tracer, config) {\n    this.wrap(Router.prototype, 'on', createWrapOn(tracer, config));\n  },\n\n  unpatch(Router) {\n    this.unwrap(Router.prototype, 'on');\n  }\n\n}];","map":{"version":3,"sources":["/Users/danielcalderon/vinology/Vinology-client/node_modules/dd-trace/packages/datadog-plugin-fastify/src/find-my-way.js"],"names":["web","require","createWrapOn","wrapOn","on","onWithTrace","method","path","opts","index","handler","arguments","wrapper","req","patch","enterRoute","_datadog","routeEntered","apply","module","exports","name","versions","Router","tracer","config","wrap","prototype","unpatch","unwrap"],"mappings":"AAAA;;AAEA,MAAMA,GAAG,GAAGC,OAAO,CAAC,qCAAD,CAAnB;;AAEA,SAASC,YAAT,GAAyB;AACvB,SAAO,SAASC,MAAT,CAAiBC,EAAjB,EAAqB;AAC1B,WAAO,SAASC,WAAT,CAAsBC,MAAtB,EAA8BC,IAA9B,EAAoCC,IAApC,EAA0C;AAC/C,YAAMC,KAAK,GAAG,OAAOD,IAAP,KAAgB,UAAhB,GAA6B,CAA7B,GAAiC,CAA/C;AACA,YAAME,OAAO,GAAGC,SAAS,CAACF,KAAD,CAAzB;;AACA,YAAMG,OAAO,GAAG,UAAUC,GAAV,EAAe;AAC7Bb,QAAAA,GAAG,CAACc,KAAJ,CAAUD,GAAV;AACAb,QAAAA,GAAG,CAACe,UAAJ,CAAeF,GAAf,EAAoBN,IAApB;AACAM,QAAAA,GAAG,CAACG,QAAJ,CAAaC,YAAb,GAA4B,IAA5B;AAEA,eAAOP,OAAO,CAACQ,KAAR,CAAc,IAAd,EAAoBP,SAApB,CAAP;AACD,OAND;;AAQA,UAAI,OAAOD,OAAP,KAAmB,UAAvB,EAAmC;AACjCC,QAAAA,SAAS,CAACF,KAAD,CAAT,GAAmBG,OAAnB;AACD;;AAED,aAAOR,EAAE,CAACc,KAAH,CAAS,IAAT,EAAeP,SAAf,CAAP;AACD,KAhBD;AAiBD,GAlBD;AAmBD;;AAEDQ,MAAM,CAACC,OAAP,GAAiB,CACf;AACEC,EAAAA,IAAI,EAAE,aADR;AAEEC,EAAAA,QAAQ,EAAE,CAAC,KAAD,CAFZ;;AAGER,EAAAA,KAAK,CAAES,MAAF,EAAUC,MAAV,EAAkBC,MAAlB,EAA0B;AAC7B,SAAKC,IAAL,CAAUH,MAAM,CAACI,SAAjB,EAA4B,IAA5B,EAAkCzB,YAAY,CAACsB,MAAD,EAASC,MAAT,CAA9C;AACD,GALH;;AAMEG,EAAAA,OAAO,CAAEL,MAAF,EAAU;AACf,SAAKM,MAAL,CAAYN,MAAM,CAACI,SAAnB,EAA8B,IAA9B;AACD;;AARH,CADe,CAAjB","sourcesContent":["'use strict'\n\nconst web = require('../../dd-trace/src/plugins/util/web')\n\nfunction createWrapOn () {\n  return function wrapOn (on) {\n    return function onWithTrace (method, path, opts) {\n      const index = typeof opts === 'function' ? 2 : 3\n      const handler = arguments[index]\n      const wrapper = function (req) {\n        web.patch(req)\n        web.enterRoute(req, path)\n        req._datadog.routeEntered = true\n\n        return handler.apply(this, arguments)\n      }\n\n      if (typeof handler === 'function') {\n        arguments[index] = wrapper\n      }\n\n      return on.apply(this, arguments)\n    }\n  }\n}\n\nmodule.exports = [\n  {\n    name: 'find-my-way',\n    versions: ['>=1'],\n    patch (Router, tracer, config) {\n      this.wrap(Router.prototype, 'on', createWrapOn(tracer, config))\n    },\n    unpatch (Router) {\n      this.unwrap(Router.prototype, 'on')\n    }\n  }\n]\n"]},"metadata":{},"sourceType":"script"}