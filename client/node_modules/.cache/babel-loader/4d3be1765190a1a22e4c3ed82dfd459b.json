{"ast":null,"code":"'use strict';\n\nconst analyticsSampler = require('../../dd-trace/src/analytics_sampler');\n\nfunction createWrapSend(tracer, config) {\n  return function wrapSend(send) {\n    return function sendWithTrace(msg, options) {\n      const span = startSendSpan(tracer, config, this);\n\n      try {\n        const promise = tracer.scope().activate(span, () => {\n          return send.apply(this, arguments);\n        });\n        return wrapPromise(promise, span);\n      } catch (e) {\n        finish(span, e);\n        throw e;\n      }\n    };\n  };\n}\n\nfunction createWrapMessageReceived(tracer, config) {\n  return function wrapMessageReceived(messageReceived) {\n    return function messageReceivedWithTrace(transferFrame) {\n      if (!transferFrame || transferFrame.aborted || transferFrame.more) {\n        return messageReceived.apply(this, arguments);\n      }\n\n      const span = startReceiveSpan(tracer, config, this);\n      return tracer.scope().activate(span, () => {\n        messageReceived.apply(this, arguments);\n        span.finish();\n      });\n    };\n  };\n}\n\nfunction startSendSpan(tracer, config, link) {\n  const address = getAddress(link);\n  const target = getShortName(link);\n  const span = tracer.startSpan(`amqp.send`, {\n    tags: {\n      'resource.name': ['send', target].filter(v => v).join(' '),\n      'span.kind': 'producer',\n      'amqp.link.target.address': target,\n      'amqp.link.role': 'sender',\n      'out.host': address.host,\n      'out.port': address.port\n    }\n  });\n  addTags(tracer, config, span, link);\n  analyticsSampler.sample(span, config.measured);\n  return span;\n}\n\nfunction startReceiveSpan(tracer, config, link) {\n  const source = getShortName(link);\n  const span = tracer.startSpan(`amqp.receive`, {\n    tags: {\n      'resource.name': ['receive', source].filter(v => v).join(' '),\n      'span.kind': 'consumer',\n      'span.type': 'worker',\n      'amqp.link.source.address': source,\n      'amqp.link.role': 'receiver'\n    }\n  });\n  addTags(tracer, config, span, link);\n  analyticsSampler.sample(span, config.measured, true);\n  return span;\n}\n\nfunction addTags(tracer, config, span, link = {}) {\n  const address = getAddress(link);\n  span.addTags({\n    'service.name': config.service || `${tracer._service}-amqp`,\n    'amqp.link.name': link.name,\n    'amqp.link.handle': link.handle,\n    'amqp.connection.host': address.host,\n    'amqp.connection.port': address.port,\n    'amqp.connection.user': address.user\n  });\n  return span;\n}\n\nfunction finish(span, error) {\n  if (error) {\n    span.addTags({\n      'error.type': error.name,\n      'error.msg': error.message,\n      'error.stack': error.stack\n    });\n  }\n\n  span.finish();\n}\n\nfunction wrapPromise(promise, span) {\n  if (!promise) {\n    finish(span);\n    return promise;\n  }\n\n  promise.then(() => finish(span), e => finish(span, e));\n  return promise;\n}\n\nfunction getShortName(link) {\n  if (!link || !link.name) return null;\n  return link.name.split('_').slice(0, -1).join('_');\n}\n\nfunction getAddress(link) {\n  if (!link || !link.session || !link.session.connection) return {};\n  return link.session.connection.address || {};\n}\n\nmodule.exports = [{\n  name: 'amqp10',\n  file: 'lib/sender_link.js',\n  versions: ['>=3'],\n\n  patch(SenderLink, tracer, config) {\n    this.wrap(SenderLink.prototype, 'send', createWrapSend(tracer, config));\n  },\n\n  unpatch(SenderLink) {\n    this.unwrap(SenderLink.prototype, 'send');\n  }\n\n}, {\n  name: 'amqp10',\n  file: 'lib/receiver_link.js',\n  versions: ['>=3'],\n\n  patch(ReceiverLink, tracer, config) {\n    this.wrap(ReceiverLink.prototype, '_messageReceived', createWrapMessageReceived(tracer, config));\n  },\n\n  unpatch(ReceiverLink) {\n    this.unwrap(ReceiverLink.prototype, '_messageReceived');\n  }\n\n}];","map":{"version":3,"sources":["/Users/danielcalderon/vinology/Vinology-client/node_modules/dd-trace/packages/datadog-plugin-amqp10/src/index.js"],"names":["analyticsSampler","require","createWrapSend","tracer","config","wrapSend","send","sendWithTrace","msg","options","span","startSendSpan","promise","scope","activate","apply","arguments","wrapPromise","e","finish","createWrapMessageReceived","wrapMessageReceived","messageReceived","messageReceivedWithTrace","transferFrame","aborted","more","startReceiveSpan","link","address","getAddress","target","getShortName","startSpan","tags","filter","v","join","host","port","addTags","sample","measured","source","service","_service","name","handle","user","error","message","stack","then","split","slice","session","connection","module","exports","file","versions","patch","SenderLink","wrap","prototype","unpatch","unwrap","ReceiverLink"],"mappings":"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","sourcesContent":["'use strict'\n\nconst analyticsSampler = require('../../dd-trace/src/analytics_sampler')\n\nfunction createWrapSend (tracer, config) {\n  return function wrapSend (send) {\n    return function sendWithTrace (msg, options) {\n      const span = startSendSpan(tracer, config, this)\n\n      try {\n        const promise = tracer.scope().activate(span, () => {\n          return send.apply(this, arguments)\n        })\n\n        return wrapPromise(promise, span)\n      } catch (e) {\n        finish(span, e)\n        throw e\n      }\n    }\n  }\n}\n\nfunction createWrapMessageReceived (tracer, config) {\n  return function wrapMessageReceived (messageReceived) {\n    return function messageReceivedWithTrace (transferFrame) {\n      if (!transferFrame || transferFrame.aborted || transferFrame.more) {\n        return messageReceived.apply(this, arguments)\n      }\n\n      const span = startReceiveSpan(tracer, config, this)\n\n      return tracer.scope().activate(span, () => {\n        messageReceived.apply(this, arguments)\n        span.finish()\n      })\n    }\n  }\n}\n\nfunction startSendSpan (tracer, config, link) {\n  const address = getAddress(link)\n  const target = getShortName(link)\n\n  const span = tracer.startSpan(`amqp.send`, {\n    tags: {\n      'resource.name': ['send', target].filter(v => v).join(' '),\n      'span.kind': 'producer',\n      'amqp.link.target.address': target,\n      'amqp.link.role': 'sender',\n      'out.host': address.host,\n      'out.port': address.port\n    }\n  })\n\n  addTags(tracer, config, span, link)\n\n  analyticsSampler.sample(span, config.measured)\n\n  return span\n}\n\nfunction startReceiveSpan (tracer, config, link) {\n  const source = getShortName(link)\n  const span = tracer.startSpan(`amqp.receive`, {\n    tags: {\n      'resource.name': ['receive', source].filter(v => v).join(' '),\n      'span.kind': 'consumer',\n      'span.type': 'worker',\n      'amqp.link.source.address': source,\n      'amqp.link.role': 'receiver'\n    }\n  })\n\n  addTags(tracer, config, span, link)\n\n  analyticsSampler.sample(span, config.measured, true)\n\n  return span\n}\n\nfunction addTags (tracer, config, span, link = {}) {\n  const address = getAddress(link)\n\n  span.addTags({\n    'service.name': config.service || `${tracer._service}-amqp`,\n    'amqp.link.name': link.name,\n    'amqp.link.handle': link.handle,\n    'amqp.connection.host': address.host,\n    'amqp.connection.port': address.port,\n    'amqp.connection.user': address.user\n  })\n\n  return span\n}\n\nfunction finish (span, error) {\n  if (error) {\n    span.addTags({\n      'error.type': error.name,\n      'error.msg': error.message,\n      'error.stack': error.stack\n    })\n  }\n\n  span.finish()\n}\n\nfunction wrapPromise (promise, span) {\n  if (!promise) {\n    finish(span)\n    return promise\n  }\n\n  promise.then(() => finish(span), e => finish(span, e))\n\n  return promise\n}\n\nfunction getShortName (link) {\n  if (!link || !link.name) return null\n\n  return link.name.split('_').slice(0, -1).join('_')\n}\n\nfunction getAddress (link) {\n  if (!link || !link.session || !link.session.connection) return {}\n\n  return link.session.connection.address || {}\n}\n\nmodule.exports = [\n  {\n    name: 'amqp10',\n    file: 'lib/sender_link.js',\n    versions: ['>=3'],\n    patch (SenderLink, tracer, config) {\n      this.wrap(SenderLink.prototype, 'send', createWrapSend(tracer, config))\n    },\n    unpatch (SenderLink) {\n      this.unwrap(SenderLink.prototype, 'send')\n    }\n  },\n  {\n    name: 'amqp10',\n    file: 'lib/receiver_link.js',\n    versions: ['>=3'],\n    patch (ReceiverLink, tracer, config) {\n      this.wrap(ReceiverLink.prototype, '_messageReceived', createWrapMessageReceived(tracer, config))\n    },\n    unpatch (ReceiverLink) {\n      this.unwrap(ReceiverLink.prototype, '_messageReceived')\n    }\n  }\n]\n"]},"metadata":{},"sourceType":"script"}