{"ast":null,"code":"\"use strict\";\n/*\n * Unless explicitly stated otherwise all files in this repository are licensed\n * under the Apache 2.0 license (see LICENSE).\n * This product includes software developed at Datadog (https://www.datadoghq.com/).\n * Copyright 2020 Datadog, Inc.\n */\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.LogarithmicMapping = void 0;\n\nvar KeyMapping_1 = require(\"./KeyMapping\");\n\nvar compiled_1 = require(\"../proto/compiled\");\n/**\n * A memory-optimal KeyMapping, i.e., given a targeted relative accuracy, it\n * requires the least number of keys to cover a given range of values. This is\n * done by logarithmically mapping floating-point values to integers.\n */\n\n\nvar LogarithmicMapping =\n/** @class */\nfunction (_super) {\n  __extends(LogarithmicMapping, _super);\n\n  function LogarithmicMapping(relativeAccuracy, offset) {\n    if (offset === void 0) {\n      offset = 0;\n    }\n\n    var _this = _super.call(this, relativeAccuracy, offset) || this;\n\n    _this._multiplier *= Math.log(2);\n    return _this;\n  }\n\n  LogarithmicMapping.prototype._logGamma = function (value) {\n    return Math.log2(value) * this._multiplier;\n  };\n\n  LogarithmicMapping.prototype._powGamma = function (value) {\n    return Math.pow(2, value / this._multiplier);\n  };\n\n  LogarithmicMapping.prototype._protoInterpolation = function () {\n    return compiled_1.IndexMapping.Interpolation.NONE;\n  };\n\n  return LogarithmicMapping;\n}(KeyMapping_1.KeyMapping);\n\nexports.LogarithmicMapping = LogarithmicMapping;","map":{"version":3,"sources":["/Users/danielcalderon/vinology/Vinology-client/node_modules/@datadog/sketches-js/dist/ddsketch/mapping/LogarithmicMapping.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","TypeError","String","__","constructor","create","defineProperty","exports","value","LogarithmicMapping","KeyMapping_1","require","compiled_1","_super","relativeAccuracy","offset","_this","_multiplier","Math","log","_logGamma","log2","_powGamma","pow","_protoInterpolation","IndexMapping","Interpolation","NONE","KeyMapping"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAIA,SAAS,GAAI,QAAQ,KAAKA,SAAd,IAA6B,YAAY;AACrD,MAAIC,aAAa,GAAG,UAAUC,CAAV,EAAaC,CAAb,EAAgB;AAChCF,IAAAA,aAAa,GAAGG,MAAM,CAACC,cAAP,IACX;AAAEC,MAAAA,SAAS,EAAE;AAAb,iBAA6BC,KAA7B,IAAsC,UAAUL,CAAV,EAAaC,CAAb,EAAgB;AAAED,MAAAA,CAAC,CAACI,SAAF,GAAcH,CAAd;AAAkB,KAD/D,IAEZ,UAAUD,CAAV,EAAaC,CAAb,EAAgB;AAAE,WAAK,IAAIK,CAAT,IAAcL,CAAd,EAAiB,IAAIC,MAAM,CAACK,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCR,CAArC,EAAwCK,CAAxC,CAAJ,EAAgDN,CAAC,CAACM,CAAD,CAAD,GAAOL,CAAC,CAACK,CAAD,CAAR;AAAc,KAFrG;;AAGA,WAAOP,aAAa,CAACC,CAAD,EAAIC,CAAJ,CAApB;AACH,GALD;;AAMA,SAAO,UAAUD,CAAV,EAAaC,CAAb,EAAgB;AACnB,QAAI,OAAOA,CAAP,KAAa,UAAb,IAA2BA,CAAC,KAAK,IAArC,EACI,MAAM,IAAIS,SAAJ,CAAc,yBAAyBC,MAAM,CAACV,CAAD,CAA/B,GAAqC,+BAAnD,CAAN;AACJF,IAAAA,aAAa,CAACC,CAAD,EAAIC,CAAJ,CAAb;;AACA,aAASW,EAAT,GAAc;AAAE,WAAKC,WAAL,GAAmBb,CAAnB;AAAuB;;AACvCA,IAAAA,CAAC,CAACO,SAAF,GAAcN,CAAC,KAAK,IAAN,GAAaC,MAAM,CAACY,MAAP,CAAcb,CAAd,CAAb,IAAiCW,EAAE,CAACL,SAAH,GAAeN,CAAC,CAACM,SAAjB,EAA4B,IAAIK,EAAJ,EAA7D,CAAd;AACH,GAND;AAOH,CAd2C,EAA5C;;AAeAV,MAAM,CAACa,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,kBAAR,GAA6B,KAAK,CAAlC;;AACA,IAAIC,YAAY,GAAGC,OAAO,CAAC,cAAD,CAA1B;;AACA,IAAIC,UAAU,GAAGD,OAAO,CAAC,mBAAD,CAAxB;AACA;AACA;AACA;AACA;AACA;;;AACA,IAAIF,kBAAkB;AAAG;AAAe,UAAUI,MAAV,EAAkB;AACtDxB,EAAAA,SAAS,CAACoB,kBAAD,EAAqBI,MAArB,CAAT;;AACA,WAASJ,kBAAT,CAA4BK,gBAA5B,EAA8CC,MAA9C,EAAsD;AAClD,QAAIA,MAAM,KAAK,KAAK,CAApB,EAAuB;AAAEA,MAAAA,MAAM,GAAG,CAAT;AAAa;;AACtC,QAAIC,KAAK,GAAGH,MAAM,CAACb,IAAP,CAAY,IAAZ,EAAkBc,gBAAlB,EAAoCC,MAApC,KAA+C,IAA3D;;AACAC,IAAAA,KAAK,CAACC,WAAN,IAAqBC,IAAI,CAACC,GAAL,CAAS,CAAT,CAArB;AACA,WAAOH,KAAP;AACH;;AACDP,EAAAA,kBAAkB,CAACX,SAAnB,CAA6BsB,SAA7B,GAAyC,UAAUZ,KAAV,EAAiB;AACtD,WAAOU,IAAI,CAACG,IAAL,CAAUb,KAAV,IAAmB,KAAKS,WAA/B;AACH,GAFD;;AAGAR,EAAAA,kBAAkB,CAACX,SAAnB,CAA6BwB,SAA7B,GAAyC,UAAUd,KAAV,EAAiB;AACtD,WAAOU,IAAI,CAACK,GAAL,CAAS,CAAT,EAAYf,KAAK,GAAG,KAAKS,WAAzB,CAAP;AACH,GAFD;;AAGAR,EAAAA,kBAAkB,CAACX,SAAnB,CAA6B0B,mBAA7B,GAAmD,YAAY;AAC3D,WAAOZ,UAAU,CAACa,YAAX,CAAwBC,aAAxB,CAAsCC,IAA7C;AACH,GAFD;;AAGA,SAAOlB,kBAAP;AACH,CAlBuC,CAkBtCC,YAAY,CAACkB,UAlByB,CAAxC;;AAmBArB,OAAO,CAACE,kBAAR,GAA6BA,kBAA7B","sourcesContent":["\"use strict\";\n/*\n * Unless explicitly stated otherwise all files in this repository are licensed\n * under the Apache 2.0 license (see LICENSE).\n * This product includes software developed at Datadog (https://www.datadoghq.com/).\n * Copyright 2020 Datadog, Inc.\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.LogarithmicMapping = void 0;\nvar KeyMapping_1 = require(\"./KeyMapping\");\nvar compiled_1 = require(\"../proto/compiled\");\n/**\n * A memory-optimal KeyMapping, i.e., given a targeted relative accuracy, it\n * requires the least number of keys to cover a given range of values. This is\n * done by logarithmically mapping floating-point values to integers.\n */\nvar LogarithmicMapping = /** @class */ (function (_super) {\n    __extends(LogarithmicMapping, _super);\n    function LogarithmicMapping(relativeAccuracy, offset) {\n        if (offset === void 0) { offset = 0; }\n        var _this = _super.call(this, relativeAccuracy, offset) || this;\n        _this._multiplier *= Math.log(2);\n        return _this;\n    }\n    LogarithmicMapping.prototype._logGamma = function (value) {\n        return Math.log2(value) * this._multiplier;\n    };\n    LogarithmicMapping.prototype._powGamma = function (value) {\n        return Math.pow(2, value / this._multiplier);\n    };\n    LogarithmicMapping.prototype._protoInterpolation = function () {\n        return compiled_1.IndexMapping.Interpolation.NONE;\n    };\n    return LogarithmicMapping;\n}(KeyMapping_1.KeyMapping));\nexports.LogarithmicMapping = LogarithmicMapping;\n"]},"metadata":{},"sourceType":"script"}