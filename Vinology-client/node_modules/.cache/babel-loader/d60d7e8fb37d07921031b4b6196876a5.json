{"ast":null,"code":"'use strict';\n\nconst AgentExporter = require('./exporters/agent');\n\nconst LogExporter = require('./exporters/log');\n\nconst exporters = require('../../../ext/exporters');\n\nconst fs = require('fs');\n\nconst constants = require('./constants');\n\nmodule.exports = name => {\n  const inAWSLambda = process.env.AWS_LAMBDA_FUNCTION_NAME !== undefined;\n  const usingLambdaExtension = inAWSLambda && fs.existsSync(constants.DATADOG_LAMBDA_EXTENSION_PATH);\n\n  switch (name) {\n    case exporters.LOG:\n      return LogExporter;\n\n    case exporters.AGENT:\n      return AgentExporter;\n\n    default:\n      return inAWSLambda && !usingLambdaExtension ? LogExporter : AgentExporter;\n  }\n};","map":{"version":3,"sources":["/Users/danielcalderon/vinology/Vinology-client/node_modules/dd-trace/packages/dd-trace/src/exporter.js"],"names":["AgentExporter","require","LogExporter","exporters","fs","constants","module","exports","name","inAWSLambda","process","env","AWS_LAMBDA_FUNCTION_NAME","undefined","usingLambdaExtension","existsSync","DATADOG_LAMBDA_EXTENSION_PATH","LOG","AGENT"],"mappings":"AAAA;;AAEA,MAAMA,aAAa,GAAGC,OAAO,CAAC,mBAAD,CAA7B;;AACA,MAAMC,WAAW,GAAGD,OAAO,CAAC,iBAAD,CAA3B;;AACA,MAAME,SAAS,GAAGF,OAAO,CAAC,wBAAD,CAAzB;;AACA,MAAMG,EAAE,GAAGH,OAAO,CAAC,IAAD,CAAlB;;AACA,MAAMI,SAAS,GAAGJ,OAAO,CAAC,aAAD,CAAzB;;AAEAK,MAAM,CAACC,OAAP,GAAiBC,IAAI,IAAI;AACvB,QAAMC,WAAW,GAAGC,OAAO,CAACC,GAAR,CAAYC,wBAAZ,KAAyCC,SAA7D;AACA,QAAMC,oBAAoB,GAAGL,WAAW,IAAIL,EAAE,CAACW,UAAH,CAAcV,SAAS,CAACW,6BAAxB,CAA5C;;AAEA,UAAQR,IAAR;AACE,SAAKL,SAAS,CAACc,GAAf;AACE,aAAOf,WAAP;;AACF,SAAKC,SAAS,CAACe,KAAf;AACE,aAAOlB,aAAP;;AACF;AACE,aAAOS,WAAW,IAAI,CAACK,oBAAhB,GAAuCZ,WAAvC,GAAqDF,aAA5D;AANJ;AAQD,CAZD","sourcesContent":["'use strict'\n\nconst AgentExporter = require('./exporters/agent')\nconst LogExporter = require('./exporters/log')\nconst exporters = require('../../../ext/exporters')\nconst fs = require('fs')\nconst constants = require('./constants')\n\nmodule.exports = name => {\n  const inAWSLambda = process.env.AWS_LAMBDA_FUNCTION_NAME !== undefined\n  const usingLambdaExtension = inAWSLambda && fs.existsSync(constants.DATADOG_LAMBDA_EXTENSION_PATH)\n\n  switch (name) {\n    case exporters.LOG:\n      return LogExporter\n    case exporters.AGENT:\n      return AgentExporter\n    default:\n      return inAWSLambda && !usingLambdaExtension ? LogExporter : AgentExporter\n  }\n}\n"]},"metadata":{},"sourceType":"script"}