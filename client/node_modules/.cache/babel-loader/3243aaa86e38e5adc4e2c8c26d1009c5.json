{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n * Index a collection of reported MockSpans in a way that's easy to run unit\n * test assertions against.\n */\n\nvar MockReport =\n/** @class */\nfunction () {\n  function MockReport(spans) {\n    var _this = this;\n\n    this.spans = spans;\n    this.spansByUUID = {};\n    this.spansByTag = {};\n    this.debugSpans = [];\n    this.unfinishedSpans = [];\n    spans.forEach(function (span) {\n      if (span._finishMs === 0) {\n        _this.unfinishedSpans.push(span);\n      }\n\n      _this.spansByUUID[span.uuid()] = span;\n\n      _this.debugSpans.push(span.debug());\n\n      var tags = span.tags();\n      Object.keys(tags).forEach(function (key) {\n        var val = tags[key];\n        _this.spansByTag[key] = _this.spansByTag[key] || {};\n        _this.spansByTag[key][val] = _this.spansByTag[key][val] || [];\n\n        _this.spansByTag[key][val].push(span);\n      });\n    });\n  }\n\n  MockReport.prototype.firstSpanWithTagValue = function (key, val) {\n    var m = this.spansByTag[key];\n\n    if (!m) {\n      return null;\n    }\n\n    var n = m[val];\n\n    if (!n) {\n      return null;\n    }\n\n    return n[0];\n  };\n\n  return MockReport;\n}();\n\nexports.MockReport = MockReport;\nexports.default = MockReport;","map":{"version":3,"sources":["../../src/mock_tracer/mock_report.ts"],"names":[],"mappings":";;;;;AAGA;;;AAGG;;AACH,IAAA,UAAA;AAAA;AAAA,YAAA;AAQI,WAAA,UAAA,CAAY,KAAZ,EAA6B;AAA7B,QAAA,KAAA,GAAA,IAAA;;AACI,SAAK,KAAL,GAAa,KAAb;AACA,SAAK,WAAL,GAAmB,EAAnB;AACA,SAAK,UAAL,GAAkB,EAAlB;AACA,SAAK,UAAL,GAAkB,EAAlB;AAEA,SAAK,eAAL,GAAuB,EAAvB;AAEA,IAAA,KAAK,CAAC,OAAN,CAAc,UAAA,IAAA,EAAI;AACd,UAAI,IAAI,CAAC,SAAL,KAAmB,CAAvB,EAA0B;AACtB,QAAA,KAAI,CAAC,eAAL,CAAqB,IAArB,CAA0B,IAA1B;AACH;;AAED,MAAA,KAAI,CAAC,WAAL,CAAiB,IAAI,CAAC,IAAL,EAAjB,IAAgC,IAAhC;;AACA,MAAA,KAAI,CAAC,UAAL,CAAgB,IAAhB,CAAqB,IAAI,CAAC,KAAL,EAArB;;AAEA,UAAM,IAAI,GAAG,IAAI,CAAC,IAAL,EAAb;AAEA,MAAA,MAAM,CAAC,IAAP,CAAY,IAAZ,EAAkB,OAAlB,CAA0B,UAAC,GAAD,EAAY;AAClC,YAAM,GAAG,GAAG,IAAI,CAAC,GAAD,CAAhB;AACA,QAAA,KAAI,CAAC,UAAL,CAAgB,GAAhB,IAAuB,KAAI,CAAC,UAAL,CAAgB,GAAhB,KAAwB,EAA/C;AACA,QAAA,KAAI,CAAC,UAAL,CAAgB,GAAhB,EAAqB,GAArB,IAA4B,KAAI,CAAC,UAAL,CAAgB,GAAhB,EAAqB,GAArB,KAA6B,EAAzD;;AACA,QAAA,KAAI,CAAC,UAAL,CAAgB,GAAhB,EAAqB,GAArB,EAA0B,IAA1B,CAA+B,IAA/B;AACH,OALD;AAMH,KAhBD;AAiBH;;AAED,EAAA,UAAA,CAAA,SAAA,CAAA,qBAAA,GAAA,UAAsB,GAAtB,EAAmC,GAAnC,EAA2C;AACvC,QAAM,CAAC,GAAG,KAAK,UAAL,CAAgB,GAAhB,CAAV;;AACA,QAAI,CAAC,CAAL,EAAQ;AACJ,aAAO,IAAP;AACH;;AACD,QAAM,CAAC,GAAG,CAAC,CAAC,GAAD,CAAX;;AACA,QAAI,CAAC,CAAL,EAAQ;AACJ,aAAO,IAAP;AACH;;AACD,WAAO,CAAC,CAAC,CAAD,CAAR;AACH,GAVD;;AAWJ,SAAA,UAAA;AAAC,CA9CD,EAAA;;AAAa,OAAA,CAAA,UAAA,GAAA,UAAA;AAgDb,OAAA,CAAA,OAAA,GAAe,UAAf","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Index a collection of reported MockSpans in a way that's easy to run unit\n * test assertions against.\n */\nvar MockReport = /** @class */ (function () {\n    function MockReport(spans) {\n        var _this = this;\n        this.spans = spans;\n        this.spansByUUID = {};\n        this.spansByTag = {};\n        this.debugSpans = [];\n        this.unfinishedSpans = [];\n        spans.forEach(function (span) {\n            if (span._finishMs === 0) {\n                _this.unfinishedSpans.push(span);\n            }\n            _this.spansByUUID[span.uuid()] = span;\n            _this.debugSpans.push(span.debug());\n            var tags = span.tags();\n            Object.keys(tags).forEach(function (key) {\n                var val = tags[key];\n                _this.spansByTag[key] = _this.spansByTag[key] || {};\n                _this.spansByTag[key][val] = _this.spansByTag[key][val] || [];\n                _this.spansByTag[key][val].push(span);\n            });\n        });\n    }\n    MockReport.prototype.firstSpanWithTagValue = function (key, val) {\n        var m = this.spansByTag[key];\n        if (!m) {\n            return null;\n        }\n        var n = m[val];\n        if (!n) {\n            return null;\n        }\n        return n[0];\n    };\n    return MockReport;\n}());\nexports.MockReport = MockReport;\nexports.default = MockReport;\n//# sourceMappingURL=mock_report.js.map"]},"metadata":{},"sourceType":"script"}